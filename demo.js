!(function(n, I) {
    'object' == typeof exports && 'object' == typeof module
        ? (module.exports = I())
        : 'function' == typeof define && define.amd
          ? define([], I)
          : 'object' == typeof exports
            ? (exports.eventDrops = I())
            : (n.eventDrops = I());
})(this, function() {
    return (function(n) {
        function I(e) {
            if (c[e]) return c[e].exports;
            var t = (c[e] = { i: e, l: !1, exports: {} });
            return n[e].call(t.exports, t, t.exports, I), (t.l = !0), t.exports;
        }
        var c = {};
        return (
            (I.m = n),
            (I.c = c),
            (I.i = function(n) {
                return n;
            }),
            (I.d = function(n, c, e) {
                I.o(n, c) ||
                    Object.defineProperty(n, c, {
                        configurable: !1,
                        enumerable: !0,
                        get: e,
                    });
            }),
            (I.n = function(n) {
                var c =
                    n && n.__esModule
                        ? function() {
                              return n.default;
                          }
                        : function() {
                              return n;
                          };
                return I.d(c, 'a', c), c;
            }),
            (I.o = function(n, I) {
                return Object.prototype.hasOwnProperty.call(n, I);
            }),
            (I.p = ''),
            I((I.s = 46))
        );
    })([
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* harmony export (immutable) */ __webpack_exports__["a"] = newInterval;\nvar t0 = new Date,\n    t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vZDMtdGltZS9zcmMvaW50ZXJ2YWwuanM/ZTk2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdDAgPSBuZXcgRGF0ZSxcbiAgICB0MSA9IG5ldyBEYXRlO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBuZXdJbnRlcnZhbChmbG9vcmksIG9mZnNldGksIGNvdW50LCBmaWVsZCkge1xuXG4gIGZ1bmN0aW9uIGludGVydmFsKGRhdGUpIHtcbiAgICByZXR1cm4gZmxvb3JpKGRhdGUgPSBuZXcgRGF0ZSgrZGF0ZSkpLCBkYXRlO1xuICB9XG5cbiAgaW50ZXJ2YWwuZmxvb3IgPSBpbnRlcnZhbDtcblxuICBpbnRlcnZhbC5jZWlsID0gZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBmbG9vcmkoZGF0ZSA9IG5ldyBEYXRlKGRhdGUgLSAxKSksIG9mZnNldGkoZGF0ZSwgMSksIGZsb29yaShkYXRlKSwgZGF0ZTtcbiAgfTtcblxuICBpbnRlcnZhbC5yb3VuZCA9IGZ1bmN0aW9uKGRhdGUpIHtcbiAgICB2YXIgZDAgPSBpbnRlcnZhbChkYXRlKSxcbiAgICAgICAgZDEgPSBpbnRlcnZhbC5jZWlsKGRhdGUpO1xuICAgIHJldHVybiBkYXRlIC0gZDAgPCBkMSAtIGRhdGUgPyBkMCA6IGQxO1xuICB9O1xuXG4gIGludGVydmFsLm9mZnNldCA9IGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICByZXR1cm4gb2Zmc2V0aShkYXRlID0gbmV3IERhdGUoK2RhdGUpLCBzdGVwID09IG51bGwgPyAxIDogTWF0aC5mbG9vcihzdGVwKSksIGRhdGU7XG4gIH07XG5cbiAgaW50ZXJ2YWwucmFuZ2UgPSBmdW5jdGlvbihzdGFydCwgc3RvcCwgc3RlcCkge1xuICAgIHZhciByYW5nZSA9IFtdLCBwcmV2aW91cztcbiAgICBzdGFydCA9IGludGVydmFsLmNlaWwoc3RhcnQpO1xuICAgIHN0ZXAgPSBzdGVwID09IG51bGwgPyAxIDogTWF0aC5mbG9vcihzdGVwKTtcbiAgICBpZiAoIShzdGFydCA8IHN0b3ApIHx8ICEoc3RlcCA+IDApKSByZXR1cm4gcmFuZ2U7IC8vIGFsc28gaGFuZGxlcyBJbnZhbGlkIERhdGVcbiAgICBkbyByYW5nZS5wdXNoKHByZXZpb3VzID0gbmV3IERhdGUoK3N0YXJ0KSksIG9mZnNldGkoc3RhcnQsIHN0ZXApLCBmbG9vcmkoc3RhcnQpO1xuICAgIHdoaWxlIChwcmV2aW91cyA8IHN0YXJ0ICYmIHN0YXJ0IDwgc3RvcCk7XG4gICAgcmV0dXJuIHJhbmdlO1xuICB9O1xuXG4gIGludGVydmFsLmZpbHRlciA9IGZ1bmN0aW9uKHRlc3QpIHtcbiAgICByZXR1cm4gbmV3SW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgaWYgKGRhdGUgPj0gZGF0ZSkgd2hpbGUgKGZsb29yaShkYXRlKSwgIXRlc3QoZGF0ZSkpIGRhdGUuc2V0VGltZShkYXRlIC0gMSk7XG4gICAgfSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgICAgaWYgKGRhdGUgPj0gZGF0ZSkge1xuICAgICAgICBpZiAoc3RlcCA8IDApIHdoaWxlICgrK3N0ZXAgPD0gMCkge1xuICAgICAgICAgIHdoaWxlIChvZmZzZXRpKGRhdGUsIC0xKSwgIXRlc3QoZGF0ZSkpIHt9IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZW1wdHlcbiAgICAgICAgfSBlbHNlIHdoaWxlICgtLXN0ZXAgPj0gMCkge1xuICAgICAgICAgIHdoaWxlIChvZmZzZXRpKGRhdGUsICsxKSwgIXRlc3QoZGF0ZSkpIHt9IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZW1wdHlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIGlmIChjb3VudCkge1xuICAgIGludGVydmFsLmNvdW50ID0gZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICAgICAgdDAuc2V0VGltZSgrc3RhcnQpLCB0MS5zZXRUaW1lKCtlbmQpO1xuICAgICAgZmxvb3JpKHQwKSwgZmxvb3JpKHQxKTtcbiAgICAgIHJldHVybiBNYXRoLmZsb29yKGNvdW50KHQwLCB0MSkpO1xuICAgIH07XG5cbiAgICBpbnRlcnZhbC5ldmVyeSA9IGZ1bmN0aW9uKHN0ZXApIHtcbiAgICAgIHN0ZXAgPSBNYXRoLmZsb29yKHN0ZXApO1xuICAgICAgcmV0dXJuICFpc0Zpbml0ZShzdGVwKSB8fCAhKHN0ZXAgPiAwKSA/IG51bGxcbiAgICAgICAgICA6ICEoc3RlcCA+IDEpID8gaW50ZXJ2YWxcbiAgICAgICAgICA6IGludGVydmFsLmZpbHRlcihmaWVsZFxuICAgICAgICAgICAgICA/IGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGZpZWxkKGQpICUgc3RlcCA9PT0gMDsgfVxuICAgICAgICAgICAgICA6IGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGludGVydmFsLmNvdW50KDAsIGQpICUgc3RlcCA9PT0gMDsgfSk7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBpbnRlcnZhbDtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9kMy10aW1lL3NyYy9pbnRlcnZhbC5qc1xuLy8gbW9kdWxlIGlkID0gMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return durationSecond; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return durationMinute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return durationHour; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return durationDay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return durationWeek; });\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vZDMtdGltZS9zcmMvZHVyYXRpb24uanM/OTcxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIGR1cmF0aW9uU2Vjb25kID0gMWUzO1xuZXhwb3J0IHZhciBkdXJhdGlvbk1pbnV0ZSA9IDZlNDtcbmV4cG9ydCB2YXIgZHVyYXRpb25Ib3VyID0gMzZlNTtcbmV4cG9ydCB2YXIgZHVyYXRpb25EYXkgPSA4NjRlNTtcbmV4cG9ydCB2YXIgZHVyYXRpb25XZWVrID0gNjA0OGU1O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2QzLXRpbWUvc3JjL2R1cmF0aW9uLmpzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9'
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* unused harmony export timeFormat */\n/* unused harmony export timeParse */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return utcFormat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return utcParse; });\n/* unused harmony export default */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__locale__ = __webpack_require__(5);\n\n\nvar locale;\nvar timeFormat;\nvar timeParse;\nvar utcFormat;\nvar utcParse;\n\ndefaultLocale({\n  dateTime: "%x, %X",\n  date: "%-m/%-d/%Y",\n  time: "%-I:%M:%S %p",\n  periods: ["AM", "PM"],\n  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],\n  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],\n  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],\n  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]\n});\n\nfunction defaultLocale(definition) {\n  locale = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__locale__["a" /* default */])(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vZDMtdGltZS1mb3JtYXQvc3JjL2RlZmF1bHRMb2NhbGUuanM/ZmJiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZm9ybWF0TG9jYWxlIGZyb20gXCIuL2xvY2FsZVwiO1xuXG52YXIgbG9jYWxlO1xuZXhwb3J0IHZhciB0aW1lRm9ybWF0O1xuZXhwb3J0IHZhciB0aW1lUGFyc2U7XG5leHBvcnQgdmFyIHV0Y0Zvcm1hdDtcbmV4cG9ydCB2YXIgdXRjUGFyc2U7XG5cbmRlZmF1bHRMb2NhbGUoe1xuICBkYXRlVGltZTogXCIleCwgJVhcIixcbiAgZGF0ZTogXCIlLW0vJS1kLyVZXCIsXG4gIHRpbWU6IFwiJS1JOiVNOiVTICVwXCIsXG4gIHBlcmlvZHM6IFtcIkFNXCIsIFwiUE1cIl0sXG4gIGRheXM6IFtcIlN1bmRheVwiLCBcIk1vbmRheVwiLCBcIlR1ZXNkYXlcIiwgXCJXZWRuZXNkYXlcIiwgXCJUaHVyc2RheVwiLCBcIkZyaWRheVwiLCBcIlNhdHVyZGF5XCJdLFxuICBzaG9ydERheXM6IFtcIlN1blwiLCBcIk1vblwiLCBcIlR1ZVwiLCBcIldlZFwiLCBcIlRodVwiLCBcIkZyaVwiLCBcIlNhdFwiXSxcbiAgbW9udGhzOiBbXCJKYW51YXJ5XCIsIFwiRmVicnVhcnlcIiwgXCJNYXJjaFwiLCBcIkFwcmlsXCIsIFwiTWF5XCIsIFwiSnVuZVwiLCBcIkp1bHlcIiwgXCJBdWd1c3RcIiwgXCJTZXB0ZW1iZXJcIiwgXCJPY3RvYmVyXCIsIFwiTm92ZW1iZXJcIiwgXCJEZWNlbWJlclwiXSxcbiAgc2hvcnRNb250aHM6IFtcIkphblwiLCBcIkZlYlwiLCBcIk1hclwiLCBcIkFwclwiLCBcIk1heVwiLCBcIkp1blwiLCBcIkp1bFwiLCBcIkF1Z1wiLCBcIlNlcFwiLCBcIk9jdFwiLCBcIk5vdlwiLCBcIkRlY1wiXVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRlZmF1bHRMb2NhbGUoZGVmaW5pdGlvbikge1xuICBsb2NhbGUgPSBmb3JtYXRMb2NhbGUoZGVmaW5pdGlvbik7XG4gIHRpbWVGb3JtYXQgPSBsb2NhbGUuZm9ybWF0O1xuICB0aW1lUGFyc2UgPSBsb2NhbGUucGFyc2U7XG4gIHV0Y0Zvcm1hdCA9IGxvY2FsZS51dGNGb3JtYXQ7XG4gIHV0Y1BhcnNlID0gbG9jYWxlLnV0Y1BhcnNlO1xuICByZXR1cm4gbG9jYWxlO1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2QzLXRpbWUtZm9ybWF0L3NyYy9kZWZhdWx0TG9jYWxlLmpzXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ=='
            );
        },
        function(module, exports) {
            eval(
                '/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push("@media " + item[2] + "{" + item[1] + "}");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join("");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === "string")\r\n\t\t\tmodules = [[null, modules, ""]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === "number")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanM/ZGEwNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXHJcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxyXG4qL1xyXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xyXG5cdHZhciBsaXN0ID0gW107XHJcblxyXG5cdC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcclxuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XHJcblx0XHR2YXIgcmVzdWx0ID0gW107XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaXRlbSA9IHRoaXNbaV07XHJcblx0XHRcdGlmKGl0ZW1bMl0pIHtcclxuXHRcdFx0XHRyZXN1bHQucHVzaChcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGl0ZW1bMV0gKyBcIn1cIik7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0cmVzdWx0LnB1c2goaXRlbVsxXSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHJldHVybiByZXN1bHQuam9pbihcIlwiKTtcclxuXHR9O1xyXG5cclxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxyXG5cdGxpc3QuaSA9IGZ1bmN0aW9uKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcclxuXHRcdGlmKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKVxyXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XHJcblx0XHR2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xyXG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcclxuXHRcdFx0aWYodHlwZW9mIGlkID09PSBcIm51bWJlclwiKVxyXG5cdFx0XHRcdGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcclxuXHRcdH1cclxuXHRcdGZvcihpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0dmFyIGl0ZW0gPSBtb2R1bGVzW2ldO1xyXG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXHJcblx0XHRcdC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXHJcblx0XHRcdC8vICB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXHJcblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXHJcblx0XHRcdGlmKHR5cGVvZiBpdGVtWzBdICE9PSBcIm51bWJlclwiIHx8ICFhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XHJcblx0XHRcdFx0aWYobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xyXG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XHJcblx0XHRcdFx0fSBlbHNlIGlmKG1lZGlhUXVlcnkpIHtcclxuXHRcdFx0XHRcdGl0ZW1bMl0gPSBcIihcIiArIGl0ZW1bMl0gKyBcIikgYW5kIChcIiArIG1lZGlhUXVlcnkgKyBcIilcIjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0bGlzdC5wdXNoKGl0ZW0pO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fTtcclxuXHRyZXR1cm4gbGlzdDtcclxufTtcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return isoSpecifier; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__defaultLocale__ = __webpack_require__(2);\n\n\nvar isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__defaultLocale__["b" /* utcFormat */])(isoSpecifier);\n\n/* unused harmony default export */ var _unused_webpack_default_export = (formatIso);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vZDMtdGltZS1mb3JtYXQvc3JjL2lzb0Zvcm1hdC5qcz82YzU1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dXRjRm9ybWF0fSBmcm9tIFwiLi9kZWZhdWx0TG9jYWxlXCI7XG5cbmV4cG9ydCB2YXIgaXNvU3BlY2lmaWVyID0gXCIlWS0lbS0lZFQlSDolTTolUy4lTFpcIjtcblxuZnVuY3Rpb24gZm9ybWF0SXNvTmF0aXZlKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUudG9JU09TdHJpbmcoKTtcbn1cblxudmFyIGZvcm1hdElzbyA9IERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nXG4gICAgPyBmb3JtYXRJc29OYXRpdmVcbiAgICA6IHV0Y0Zvcm1hdChpc29TcGVjaWZpZXIpO1xuXG5leHBvcnQgZGVmYXVsdCBmb3JtYXRJc287XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vZDMtdGltZS1mb3JtYXQvc3JjL2lzb0Zvcm1hdC5qc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* harmony export (immutable) */ __webpack_exports__["a"] = formatLocale;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_time__ = __webpack_require__(28);\n\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    "a": formatShortWeekday,\n    "A": formatWeekday,\n    "b": formatShortMonth,\n    "B": formatMonth,\n    "c": null,\n    "d": formatDayOfMonth,\n    "e": formatDayOfMonth,\n    "f": formatMicroseconds,\n    "H": formatHour24,\n    "I": formatHour12,\n    "j": formatDayOfYear,\n    "L": formatMilliseconds,\n    "m": formatMonthNumber,\n    "M": formatMinutes,\n    "p": formatPeriod,\n    "Q": formatUnixTimestamp,\n    "s": formatUnixTimestampSeconds,\n    "S": formatSeconds,\n    "u": formatWeekdayNumberMonday,\n    "U": formatWeekNumberSunday,\n    "V": formatWeekNumberISO,\n    "w": formatWeekdayNumberSunday,\n    "W": formatWeekNumberMonday,\n    "x": null,\n    "X": null,\n    "y": formatYear,\n    "Y": formatFullYear,\n    "Z": formatZone,\n    "%": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    "a": formatUTCShortWeekday,\n    "A": formatUTCWeekday,\n    "b": formatUTCShortMonth,\n    "B": formatUTCMonth,\n    "c": null,\n    "d": formatUTCDayOfMonth,\n    "e": formatUTCDayOfMonth,\n    "f": formatUTCMicroseconds,\n    "H": formatUTCHour24,\n    "I": formatUTCHour12,\n    "j": formatUTCDayOfYear,\n    "L": formatUTCMilliseconds,\n    "m": formatUTCMonthNumber,\n    "M": formatUTCMinutes,\n    "p": formatUTCPeriod,\n    "Q": formatUnixTimestamp,\n    "s": formatUnixTimestampSeconds,\n    "S": formatUTCSeconds,\n    "u": formatUTCWeekdayNumberMonday,\n    "U": formatUTCWeekNumberSunday,\n    "V": formatUTCWeekNumberISO,\n    "w": formatUTCWeekdayNumberSunday,\n    "W": formatUTCWeekNumberMonday,\n    "x": null,\n    "X": null,\n    "y": formatUTCYear,\n    "Y": formatUTCFullYear,\n    "Z": formatUTCZone,\n    "%": formatLiteralPercent\n  };\n\n  var parses = {\n    "a": parseShortWeekday,\n    "A": parseWeekday,\n    "b": parseShortMonth,\n    "B": parseMonth,\n    "c": parseLocaleDateTime,\n    "d": parseDayOfMonth,\n    "e": parseDayOfMonth,\n    "f": parseMicroseconds,\n    "H": parseHour24,\n    "I": parseHour24,\n    "j": parseDayOfYear,\n    "L": parseMilliseconds,\n    "m": parseMonthNumber,\n    "M": parseMinutes,\n    "p": parsePeriod,\n    "Q": parseUnixTimestamp,\n    "s": parseUnixTimestampSeconds,\n    "S": parseSeconds,\n    "u": parseWeekdayNumberMonday,\n    "U": parseWeekNumberSunday,\n    "V": parseWeekNumberISO,\n    "w": parseWeekdayNumberSunday,\n    "W": parseWeekNumberMonday,\n    "x": parseLocaleDate,\n    "X": parseLocaleTime,\n    "y": parseYear,\n    "Y": parseFullYear,\n    "Z": parseZone,\n    "%": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === "e" ? " " : "0";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join("");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += "", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if ("Q" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if ("p" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if ("V" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!("w" in d)) d.w = 1;\n        if ("Z" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? __WEBPACK_IMPORTED_MODULE_0_d3_time__["a" /* utcMonday */].ceil(week) : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_time__["a" /* utcMonday */])(week);\n          week = __WEBPACK_IMPORTED_MODULE_0_d3_time__["b" /* utcDay */].offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? __WEBPACK_IMPORTED_MODULE_0_d3_time__["c" /* timeMonday */].ceil(week) : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_time__["c" /* timeMonday */])(week);\n          week = __WEBPACK_IMPORTED_MODULE_0_d3_time__["d" /* timeDay */].offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if ("W" in d || "U" in d) {\n        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;\n        day = "Z" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if ("Z" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += "", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += "", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += "", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {"-": "", "_": " ", "0": "0"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? "-" : "",\n      string = (sign ? -value : value) + "",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, "\\\\$&");\n}\n\nfunction formatRe(names) {\n  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + __WEBPACK_IMPORTED_MODULE_0_d3_time__["d" /* timeDay */].count(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_time__["e" /* timeYear */])(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + "000";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(__WEBPACK_IMPORTED_MODULE_0_d3_time__["f" /* timeSunday */].count(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_time__["e" /* timeYear */])(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_time__["g" /* timeThursday */])(d) : __WEBPACK_IMPORTED_MODULE_0_d3_time__["g" /* timeThursday */].ceil(d);\n  return pad(__WEBPACK_IMPORTED_MODULE_0_d3_time__["g" /* timeThursday */].count(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_time__["e" /* timeYear */])(d), d) + (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_time__["e" /* timeYear */])(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(__WEBPACK_IMPORTED_MODULE_0_d3_time__["c" /* timeMonday */].count(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_time__["e" /* timeYear */])(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? "-" : (z *= -1, "+"))\n      + pad(z / 60 | 0, "0", 2)\n      + pad(z % 60, "0", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + __WEBPACK_IMPORTED_MODULE_0_d3_time__["b" /* utcDay */].count(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_time__["h" /* utcYear */])(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + "000";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(__WEBPACK_IMPORTED_MODULE_0_d3_time__["i" /* utcSunday */].count(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_time__["h" /* utcYear */])(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_time__["j" /* utcThursday */])(d) : __WEBPACK_IMPORTED_MODULE_0_d3_time__["j" /* utcThursday */].ceil(d);\n  return pad(__WEBPACK_IMPORTED_MODULE_0_d3_time__["j" /* utcThursday */].count(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_time__["h" /* utcYear */])(d), d) + (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_time__["h" /* utcYear */])(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(__WEBPACK_IMPORTED_MODULE_0_d3_time__["a" /* utcMonday */].count(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_d3_time__["h" /* utcYear */])(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return "+0000";\n}\n\nfunction formatLiteralPercent() {\n  return "%";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,'
            );
        },
        function(module, exports) {
            eval(
                '/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === "undefined") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName("head")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== "undefined" && DEBUG) {\r\n\t\tif(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === "undefined") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === "undefined") options.insertAt = "bottom";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === "top") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === "bottom") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error("Invalid value for parameter \'insertAt\'. Must be \'top\' or \'bottom\'.");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement("style");\r\n\tstyleElement.type = "text/css";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement("link");\r\n\tlinkElement.rel = "stylesheet";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === "function" &&\r\n\t\ttypeof URL.createObjectURL === "function" &&\r\n\t\ttypeof URL.revokeObjectURL === "function" &&\r\n\t\ttypeof Blob === "function" &&\r\n\t\ttypeof btoa === "function") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join(\'\\n\');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? "" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute("media", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: "text/css" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,'
            );
        },
        function(module, exports, __webpack_require__) {
            eval(
                "// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(24);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(6)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./style.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zdHlsZS5jc3M/MmFkOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9zdHlsZS5jc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIHt9KTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9zdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vc3R5bGUuY3NzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9zdHlsZS5jc3Ncbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0="
            );
        },
        function(module, exports) {
            eval(
                'var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function("return this")() || (1,eval)("this");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === "object")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it\'s\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/MzY5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9'
            );
        },
        function(module, exports) {
            eval(
                'module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, "loaded", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, "id", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanM/YzNjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG1vZHVsZSkge1xyXG5cdGlmKCFtb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XHJcblx0XHRtb2R1bGUuZGVwcmVjYXRlID0gZnVuY3Rpb24oKSB7fTtcclxuXHRcdG1vZHVsZS5wYXRocyA9IFtdO1xyXG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XHJcblx0XHRpZighbW9kdWxlLmNoaWxkcmVuKSBtb2R1bGUuY2hpbGRyZW4gPSBbXTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwibG9hZGVkXCIsIHtcclxuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcclxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmw7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJpZFwiLCB7XHJcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXHJcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5pO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xyXG5cdH1cclxuXHRyZXR1cm4gbW9kdWxlO1xyXG59O1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9tb2R1bGUuanNcbi8vIG1vZHVsZSBpZCA9IDlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                "Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_build_d3__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_build_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3_build_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_style_css__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_style_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__src_style_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils__ = __webpack_require__(14);\n\n\n\n\n\n\nvar repositories = __webpack_require__(12);\n\nvar numberCommitsContainer = document.getElementById('numberCommits');\nvar zoomStart = document.getElementById('zoomStart');\nvar zoomEnd = document.getElementById('zoomEnd');\n\nvar updateCommitsInformation = function updateCommitsInformation(chart) {\n    var filteredData = chart.filteredData().reduce(function (total, repo) {\n        return total.concat(repo.data);\n    }, []);\n\n    numberCommitsContainer.textContent = filteredData.length;\n    zoomStart.textContent = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils__[\"a\" /* humanizeDate */])(chart.scale().domain()[0]);\n    zoomEnd.textContent = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils__[\"a\" /* humanizeDate */])(chart.scale().domain()[1]);\n};\n\nvar tooltip = __WEBPACK_IMPORTED_MODULE_0_d3_build_d3__[\"select\"]('body').append('div').classed('tooltip', true).style('opacity', 0);\n\nvar chart = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__src__[\"a\" /* default */])({\n    d3: __WEBPACK_IMPORTED_MODULE_0_d3_build_d3__,\n    zoom: {\n        onZoomEnd: function onZoomEnd() {\n            return updateCommitsInformation(chart);\n        }\n    },\n    drop: {\n        date: function date(d) {\n            return new Date(d.date);\n        },\n        onMouseOver: function onMouseOver(commit) {\n            tooltip.transition().duration(200).style('opacity', 1);\n\n            tooltip.html('\\n                    <div class=\"commit\">\\n                    <img class=\"avatar\" src=\"' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils__[\"b\" /* gravatar */])(commit.author.email) + '\" alt=\"' + commit.author.name + '\" title=\"' + commit.author.name + '\" />\\n                    <div class=\"content\">\\n                        <h3 class=\"message\">' + commit.message + '</h3>\\n                        <p>\\n                            <a href=\"https://www.github.com/' + commit.author.name + '\" class=\"author\">' + commit.author.name + '</a>\\n                            on <span class=\"date\">' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils__[\"a\" /* humanizeDate */])(new Date(commit.date)) + '</span> -\\n                            <a class=\"sha\" href=\"' + commit.sha + '\">' + commit.sha.substr(0, 10) + '</a>\\n                        </p>\\n                    </div>\\n                ').style('left', __WEBPACK_IMPORTED_MODULE_0_d3_build_d3__[\"event\"].pageX - 30 + 'px').style('top', __WEBPACK_IMPORTED_MODULE_0_d3_build_d3__[\"event\"].pageY + 20 + 'px');\n        },\n        onMouseOut: function onMouseOut() {\n            tooltip.transition().duration(500).style('opacity', 0);\n        }\n    }\n});\n\nvar repositoriesData = repositories.map(function (repository) {\n    return {\n        name: repository.name,\n        data: repository.commits\n    };\n});\n\n__WEBPACK_IMPORTED_MODULE_0_d3_build_d3__[\"select\"]('#eventdrops-demo').data([repositoriesData]).call(chart);\n\nupdateCommitsInformation(chart);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVtby9kZW1vLmpzP2Q0OGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMvYnVpbGQvZDMnO1xuXG5pbXBvcnQgZXZlbnREcm9wcyBmcm9tICcuLi9zcmMnO1xuaW1wb3J0ICcuLi9zcmMvc3R5bGUuY3NzJztcbmltcG9ydCB7IGdyYXZhdGFyLCBodW1hbml6ZURhdGUgfSBmcm9tICcuL3V0aWxzJztcblxuY29uc3QgcmVwb3NpdG9yaWVzID0gcmVxdWlyZSgnLi9kYXRhLmpzb24nKTtcblxuY29uc3QgbnVtYmVyQ29tbWl0c0NvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdudW1iZXJDb21taXRzJyk7XG5jb25zdCB6b29tU3RhcnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnem9vbVN0YXJ0Jyk7XG5jb25zdCB6b29tRW5kID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3pvb21FbmQnKTtcblxuY29uc3QgdXBkYXRlQ29tbWl0c0luZm9ybWF0aW9uID0gY2hhcnQgPT4ge1xuICAgIGNvbnN0IGZpbHRlcmVkRGF0YSA9IGNoYXJ0XG4gICAgICAgIC5maWx0ZXJlZERhdGEoKVxuICAgICAgICAucmVkdWNlKCh0b3RhbCwgcmVwbykgPT4gdG90YWwuY29uY2F0KHJlcG8uZGF0YSksIFtdKTtcblxuICAgIG51bWJlckNvbW1pdHNDb250YWluZXIudGV4dENvbnRlbnQgPSBmaWx0ZXJlZERhdGEubGVuZ3RoO1xuICAgIHpvb21TdGFydC50ZXh0Q29udGVudCA9IGh1bWFuaXplRGF0ZShjaGFydC5zY2FsZSgpLmRvbWFpbigpWzBdKTtcbiAgICB6b29tRW5kLnRleHRDb250ZW50ID0gaHVtYW5pemVEYXRlKGNoYXJ0LnNjYWxlKCkuZG9tYWluKClbMV0pO1xufTtcblxuY29uc3QgdG9vbHRpcCA9IGQzXG4gICAgLnNlbGVjdCgnYm9keScpXG4gICAgLmFwcGVuZCgnZGl2JylcbiAgICAuY2xhc3NlZCgndG9vbHRpcCcsIHRydWUpXG4gICAgLnN0eWxlKCdvcGFjaXR5JywgMCk7XG5cbmNvbnN0IGNoYXJ0ID0gZXZlbnREcm9wcyh7XG4gICAgZDMsXG4gICAgem9vbToge1xuICAgICAgICBvblpvb21FbmQ6ICgpID0+IHVwZGF0ZUNvbW1pdHNJbmZvcm1hdGlvbihjaGFydCksXG4gICAgfSxcbiAgICBkcm9wOiB7XG4gICAgICAgIGRhdGU6IGQgPT4gbmV3IERhdGUoZC5kYXRlKSxcbiAgICAgICAgb25Nb3VzZU92ZXI6IGNvbW1pdCA9PiB7XG4gICAgICAgICAgICB0b29sdGlwXG4gICAgICAgICAgICAgICAgLnRyYW5zaXRpb24oKVxuICAgICAgICAgICAgICAgIC5kdXJhdGlvbigyMDApXG4gICAgICAgICAgICAgICAgLnN0eWxlKCdvcGFjaXR5JywgMSk7XG5cbiAgICAgICAgICAgIHRvb2x0aXBcbiAgICAgICAgICAgICAgICAuaHRtbChcbiAgICAgICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29tbWl0XCI+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9XCJhdmF0YXJcIiBzcmM9XCIke2dyYXZhdGFyKFxuICAgICAgICAgICAgICAgICAgICAgICAgY29tbWl0LmF1dGhvci5lbWFpbFxuICAgICAgICAgICAgICAgICAgICApfVwiIGFsdD1cIiR7Y29tbWl0LmF1dGhvci5uYW1lfVwiIHRpdGxlPVwiJHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbW1pdC5hdXRob3IubmFtZVxuICAgICAgICAgICAgICAgICAgICB9XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz1cIm1lc3NhZ2VcIj4ke2NvbW1pdC5tZXNzYWdlfTwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly93d3cuZ2l0aHViLmNvbS8ke1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21taXQuYXV0aG9yLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XCIgY2xhc3M9XCJhdXRob3JcIj4ke2NvbW1pdC5hdXRob3IubmFtZX08L2E+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb24gPHNwYW4gY2xhc3M9XCJkYXRlXCI+JHtodW1hbml6ZURhdGUoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBEYXRlKGNvbW1pdC5kYXRlKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9PC9zcGFuPiAtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJzaGFcIiBocmVmPVwiJHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tbWl0LnNoYVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cIj4ke2NvbW1pdC5zaGEuc3Vic3RyKDAsIDEwKX08L2E+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIGBcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgLnN0eWxlKCdsZWZ0JywgYCR7ZDMuZXZlbnQucGFnZVggLSAzMH1weGApXG4gICAgICAgICAgICAgICAgLnN0eWxlKCd0b3AnLCBgJHtkMy5ldmVudC5wYWdlWSArIDIwfXB4YCk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uTW91c2VPdXQ6ICgpID0+IHtcbiAgICAgICAgICAgIHRvb2x0aXBcbiAgICAgICAgICAgICAgICAudHJhbnNpdGlvbigpXG4gICAgICAgICAgICAgICAgLmR1cmF0aW9uKDUwMClcbiAgICAgICAgICAgICAgICAuc3R5bGUoJ29wYWNpdHknLCAwKTtcbiAgICAgICAgfSxcbiAgICB9LFxufSk7XG5cbmNvbnN0IHJlcG9zaXRvcmllc0RhdGEgPSByZXBvc2l0b3JpZXMubWFwKHJlcG9zaXRvcnkgPT4gKHtcbiAgICBuYW1lOiByZXBvc2l0b3J5Lm5hbWUsXG4gICAgZGF0YTogcmVwb3NpdG9yeS5jb21taXRzLFxufSkpO1xuXG5kM1xuICAgIC5zZWxlY3QoJyNldmVudGRyb3BzLWRlbW8nKVxuICAgIC5kYXRhKFtyZXBvc2l0b3JpZXNEYXRhXSlcbiAgICAuY2FsbChjaGFydCk7XG5cbnVwZGF0ZUNvbW1pdHNJbmZvcm1hdGlvbihjaGFydCk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gZGVtby9kZW1vLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQURBO0FBR0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQTJCQTtBQUNBO0FBQ0E7QUFJQTtBQXpDQTtBQUxBO0FBQ0E7QUFpREE7QUFBQTtBQUNBO0FBQ0E7QUFGQTtBQUFBO0FBQ0E7QUFJQTtBQUNBO0FBSUEiLCJzb3VyY2VSb290IjoiIn0="
            );
        },
        function(module, exports, __webpack_require__) {
            eval(
                "// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(23);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(6)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./demo.css\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./demo.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZW1vL2RlbW8uY3NzPzEwNDEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4vZGVtby5jc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIHt9KTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9kZW1vLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9kZW1vLmNzc1wiKTtcblx0XHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHRcdH0pO1xuXHR9XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9kZW1vL2RlbW8uY3NzXG4vLyBtb2R1bGUgaWQgPSAxMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ=="
            );
        },
        function(module, exports) {
            eval(
                'module.exports = [{"name":"admin-on-rest","commits":[{"sha":"7ccf18b86328d5eb527d5cd803bca97b03640c6d","message":"Merge-pull-request-1409-from-zifnab87-master","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 23 Jan 2018 15:03:41 +0100"},{"sha":"7659f9a6006f4742f47f4daf023b65f14162ef6a","message":"change-extraction-of-status-for-AUTH_ERROR","author":{"name":"Michail Michailidis","email":"zifnab87@users.noreply.github.com"},"date":"Tue, 23 Jan 2018 15:54:25 +0200"},{"sha":"22293d388d2384a142e6639c6a45077b04ec6453","message":"Bump-version-to-1.3.4","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 22 Jan 2018 18:13:16 +0100"},{"sha":"37c491b69d9dfd95470e14e001247bea30b1bdd4","message":"Updated-Changelog-1.3.4","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 22 Jan 2018 17:34:47 +0100"},{"sha":"d40352d45b9892106296801dba14b8f4dea326a9","message":"Merge-pull-request-1383-from-marmelab-fix_title_update","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 16 Jan 2018 17:42:32 +0100"},{"sha":"25df9ab9a425eb8a2407ee3de031d3eca2d29b21","message":"RFR-Fix-title-is-not-updated-when-record-changes","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 Jan 2018 17:03:34 +0100"},{"sha":"0208d9d32d8ef9165ff9d23dca92f91e0156422f","message":"Merge-pull-request-1380-from-marmelab-fix_boolean_input_warning","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 16 Jan 2018 15:46:37 +0100"},{"sha":"96f64f95b43e3e5ddfb5cd333281391f30fd916c","message":"Fix-tests","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 Jan 2018 12:34:30 +0100"},{"sha":"6387fa16944323369fa5831d77659d03de08d822","message":"RFR-Fix-BooleanInput-warning-about-uncontrolled-to-controlled-component","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 Jan 2018 12:28:32 +0100"},{"sha":"a2bec90512cb27ece5f500ef65c6e5a085f700d4","message":"Merge-pull-request-1340-from-hasghari-autocomplete-bug","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 Jan 2018 12:06:20 +0100"},{"sha":"3fb45789344fb358f8c21d27673285b0818cc1a3","message":"Merge-pull-request-1364-from-Joni-Aaltonen-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 Jan 2018 12:01:09 +0100"},{"sha":"78fbc65d1e69e0e28e615ae2aee09a2e55601ea4","message":"HOTFIX-Fix-prettier-errors","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 15 Jan 2018 19:00:46 +0100"},{"sha":"371a19cd4cb55a2fe0be2f16c3551d271b412ab2","message":"Merge-pull-request-1377-from-marmelab-fix_mobile_toolbar","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 15 Jan 2018 18:51:48 +0100"},{"sha":"aa1abd09a3d38237e9f6fe8b12090d9413e4e98c","message":"RFR-Fix-Bottom-Toolbars-on-mobile","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 15 Jan 2018 18:50:42 +0100"},{"sha":"6b0ad0e60a48d628e4df4004dee65904fe9eab0b","message":"Merge-pull-request-1366-from-alauper-patch-2","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 15 Jan 2018 18:47:49 +0100"},{"sha":"ed21a927a7a262aa39c8daa2c40274743c5b080e","message":"Merge-pull-request-1376-from-marmelab-fix_mui_chip_input","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 15 Jan 2018 16:37:02 +0100"},{"sha":"3ba3398484cba060aa6ed7d354d7247553bdf62f","message":"RFR-Upgrade-material-ui-chip-input","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 15 Jan 2018 16:13:38 +0100"},{"sha":"7d4d8537ed381868f7eded5f3e232b056687a6e6","message":"Prop-name-is-validate-not-validation","author":{"name":"alauper","email":"822101+alauper@users.noreply.github.com"},"date":"Thu, 11 Jan 2018 10:22:46 -0700"},{"sha":"d207db7887e74450c25ad6e37371603113e32344","message":"Merge-pull-request-1365-from-marmelab-fix_travis_build","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Wed, 10 Jan 2018 17:33:59 +0100"},{"sha":"0a41a22063e1be34efcf094d24b12e39c1b6ffc2","message":"RFR-Fix-travis-build-on-master","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 Jan 2018 15:38:53 +0100"},{"sha":"c04cd0477ce2ea75322d110215d6c353cdd59842","message":"Added-Finnish-translation","author":{"name":"Joni Aaltonen","email":"Joni-Aaltonen@users.noreply.github.com"},"date":"Wed, 10 Jan 2018 14:22:41 +0200"},{"sha":"70f53f41dc3cef838214886071468b17012ab9ef","message":"Merge-pull-request-1357-from-marmelab-better_mobile_menu_doc","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 8 Jan 2018 18:42:55 +0100"},{"sha":"8fa89cf66c259421193c44adec8536eac7a7ba2c","message":"RFR-Add-shadow-under-doc-menu-bar-on-mobile","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 8 Jan 2018 18:36:55 +0100"},{"sha":"a24de4b6eed309831df1ec0987a039241a2dc4bc","message":"Merge-pull-request-1356-from-marmelab-fix_doc_mobile_backport","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 8 Jan 2018 18:14:26 +0100"},{"sha":"d35ae422a34c874b86bd0d10f64904af01dcd404","message":"RFR-Backport-fixes-for-doc-on-mobile","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 8 Jan 2018 18:04:06 +0100"},{"sha":"d46fbb2b416240555b5fb1699351b543bf5cd54d","message":"Ensure-AutocompleteInput-state-is-updated-when-choices-are-different","author":{"name":"Hamed Asghari","email":"hasghari@gmail.com"},"date":"Thu, 4 Jan 2018 18:07:27 -0800"},{"sha":"f0609a009d60041c637f309f5e3f8eb5b6a755df","message":"Merge-pull-request-1344-from-ART-project-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 4 Jan 2018 17:55:48 +0100"},{"sha":"dd7d8e79d76dd256cc2c57a517da40bda3613685","message":"Merge-pull-request-1166-from-activist-ie11_flex_scrollfix","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 4 Jan 2018 17:47:31 +0100"},{"sha":"e50c4b4e6bb49184d95eff1e2584ab1e9fc29ef2","message":"prettyfied","author":{"name":"AzureAD\\\\AlexanderGripenstam","email":"alexander@casinopop.com"},"date":"Thu, 4 Jan 2018 15:54:50 +0100"},{"sha":"594b4dbb95df6b104b3278f1ffb933fb0ea4b5b6","message":"Merge-pull-request-1320-from-alexanderankin-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 21 Dec 2017 13:57:09 +0100"},{"sha":"6455bd25ef4ff9ac966334253a606e75ce6cff39","message":"Merge-pull-request-1227-from-MadalenaGoncalves-fix-translation-warning-save-button","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 21 Dec 2017 10:00:04 +0100"},{"sha":"f3d18caf8ed6a315554a87a8f5086911956cdd6e","message":"Merge-pull-request-1228-from-danyalaytekin-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 21 Dec 2017 09:48:48 +0100"},{"sha":"02d4c9aabdefec4813e5eb404e063b1be5a39e64","message":"Merge-pull-request-1233-from-ronadi-master","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 21 Dec 2017 09:39:23 +0100"},{"sha":"781532fc2e340a5f8a91b2aef6b4f61ba0596acf","message":"Merge-pull-request-1309-from-jyash97-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 21 Dec 2017 09:38:34 +0100"},{"sha":"0fb3805ac219a54274016d1b498c316872886da9","message":"Merge-pull-request-1231-from-aymendhaya-master","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 21 Dec 2017 09:35:40 +0100"},{"sha":"f95f6903c17e23a2d58abd60d8e529d88a830f82","message":"Merge-pull-request-1319-from-ariskemper-doc-cro-translation","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 21 Dec 2017 09:33:36 +0100"},{"sha":"a4708b1290cee803b5ec9104d1be915fcd1fbf10","message":"still-wasn-t-json-without-the-quotes-around-the-title","author":{"name":"David Ankin","email":"david.ankin@stonybrook.edu"},"date":"Wed, 20 Dec 2017 23:55:33 -0500"},{"sha":"f4f9707eea1b8cef8246ca90eb10d90204cb8acc","message":"this-example-is-wrong","author":{"name":"David Ankin","email":"david.ankin@stonybrook.edu"},"date":"Wed, 20 Dec 2017 23:44:30 -0500"},{"sha":"2b928c4b45253e2f08ec05654c636b971e5b2c34","message":"Add-croatian-translation-to-Translation.md","author":{"name":"Aris Kemper","email":"aris.github@gmail.com"},"date":"Wed, 20 Dec 2017 20:58:45 +0100"},{"sha":"d01ed39753fad7d5a98dc354c49f13e1fc2a0588","message":"Changed-Spelling-of-Labeled","author":{"name":"Yash Joshi","email":"jyash97@gmail.com"},"date":"Tue, 19 Dec 2017 21:40:46 +0530"},{"sha":"aec0538cb659366f8d43c07d096a238242035dbe","message":"Update-Changelog","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 18 Dec 2017 19:24:26 +0100"},{"sha":"722844331deb2fb739462a53955204c5b3c4503b","message":"Publishing-1.3.3","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 18 Dec 2017 19:14:53 +0100"},{"sha":"3f54c30daf2e552777931c310d271d0bc0441704","message":"Upgrading-Chromdriver-to-allow-tests-to-pass","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 18 Dec 2017 19:07:10 +0100"},{"sha":"8bae36b7eb1fdc7862e1811d52c52e35f2f2f1d6","message":"Merge-pull-request-1284-from-soaserele-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 18 Dec 2017 18:56:34 +0100"},{"sha":"e0c60a02bd6393e8cba14f5dc9550c9e37f578cc","message":"Merge-pull-request-1300-from-ariskemper-doc-slo-translation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 18 Dec 2017 18:55:58 +0100"},{"sha":"b1d2429aeae2c64f43c3b815a092341c5972dad3","message":"Merge-pull-request-1297-from-marmelab-fix_translation_doc","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 18 Dec 2017 14:34:16 +0100"},{"sha":"7932e9871e3b48734c92fb14f1874aa3e7217d01","message":"Merge-pull-request-1298-from-marmelab-get_resources","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 18 Dec 2017 14:30:15 +0100"},{"sha":"b2fff17f782cc184f1eb0275da7501f8646e01c1","message":"Add-slovenian-translation-to-Translation.md","author":{"name":"Aris Kemper","email":"aris.github@gmail.com"},"date":"Sun, 17 Dec 2017 22:08:41 +0100"},{"sha":"5fedcfb27d9885efdc34e8f0a25d6112e376ecd3","message":"Export-getResources-to-allow-ressource-injection-in-custom-components","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 15 Dec 2017 13:42:59 +0100"},{"sha":"d72deb5d4e9d22201651ba55b6c02309fe3e6640","message":"Fix-translation-doc","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 15 Dec 2017 13:28:20 +0100"},{"sha":"cbe330530d8ccbeec4581497e0937759fefa172f","message":"Update-RestClients.md","author":{"name":"Stanislav Oaserele","email":"soaserele@gmail.com"},"date":"Tue, 12 Dec 2017 17:08:33 +0200"},{"sha":"3ee6c21305f457f7f59f2bc63ab6c5c91304b9d9","message":"Update-RestClients.md","author":{"name":"Stanislav Oaserele","email":"soaserele@gmail.com"},"date":"Tue, 12 Dec 2017 17:05:04 +0200"},{"sha":"9dca8e07b9414ad5eadf84659f5663d0dbba083f","message":"Update-Translation.md","author":{"name":"Aymen Dhaya","email":"aymendhaya@gmail.com"},"date":"Tue, 21 Nov 2017 15:45:49 +0100"},{"sha":"45e908fc7585c1f8cc65771875c82b554307ab1c","message":"Documentation-update-for-Writing-Actions","author":{"name":"Danyal Aytekin","email":"danyal@fubase.com"},"date":"Mon, 20 Nov 2017 12:00:55 +0000"},{"sha":"39b6e5781deebab6e3bec4f4ee631ad2ccdd519c","message":"Fix-missing-key-warning","author":{"name":"madpg","email":"madalena.pg@gmail.com"},"date":"Mon, 20 Nov 2017 10:14:29 +0100"},{"sha":"bff16a4f229d920460d1ad9141c81cd3d043a129","message":"Add-translation-Indonesian-language","author":{"name":"ronadi","email":"ronadix@gmail.com"},"date":"Sun, 19 Nov 2017 13:16:12 +0700"},{"sha":"187032b7978948e316bf930c43e3219ef8bb3290","message":"Update-Translation.md-by-adding-arabic-language","author":{"name":"Aymen Dhaya","email":"aymendhaya@gmail.com"},"date":"Fri, 17 Nov 2017 13:53:16 +0100"},{"sha":"9f4138a75ce23ffe17075abb50d5db4cb025d4e4","message":"Merge-pull-request-1217-from-xiaomingplus-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Nov 2017 08:34:10 +0100"},{"sha":"2e584d892390cdd7b548bb1c86c5ffb59ed814f9","message":"for-fix-example-export-function-error","author":{"name":"xiaomingplus","email":"xiaomingplus@qq.com"},"date":"Sat, 11 Nov 2017 19:31:38 +0800"},{"sha":"729c206fa2ae6811bc27a1dc7b069e1bc618eb26","message":"Merge-pull-request-1204-from-zifnab87-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Nov 2017 15:34:38 +0100"},{"sha":"64bc37f614d48406f6ca0174eb9b1dab08c6b3d3","message":"Merge-pull-request-1203-from-natrim-fix-button-record","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Nov 2017 15:07:56 +0100"},{"sha":"a49d890dffdef63527285288a98d3cadabbff6fb","message":"remove-react-admin-java-rest-listing-for-now","author":{"name":"Michail Michailidis","email":"zifnab87@users.noreply.github.com"},"date":"Tue, 7 Nov 2017 23:34:06 +0200"},{"sha":"b4293301de5c6870addec2870acab14a6239e8ab","message":"add-react-admin-java-rest-package","author":{"name":"Michail Michailidis","email":"zifnab87@users.noreply.github.com"},"date":"Sun, 5 Nov 2017 22:40:10 +0200"},{"sha":"eb533abfb6ed746a6592b1c51485fd947625e25a","message":"add-component-factory-to-Ecosystem.md","author":{"name":"Michail Michailidis","email":"zifnab87@users.noreply.github.com"},"date":"Sun, 5 Nov 2017 22:30:26 +0200"},{"sha":"2129053b6d2bef9e1e6ae175d7dd793b802f1ce7","message":"fix-shouldUpdate-for-EditButton-and-ShowButton","author":{"name":"Natrim","email":"maly@kinet.cz"},"date":"Fri, 3 Nov 2017 11:21:54 +0100"},{"sha":"55d704dcfa3d8bb0689e10a6686c21873d8a6fba","message":"Merge-pull-request-1197-from-marmelab-fix-admin-menu-doc","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 2 Nov 2017 11:21:45 +0100"},{"sha":"25112e79047a3654607eb3a40dee919069dd61f3","message":"Fix-custom-Menu-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 2 Nov 2017 10:24:15 +0100"},{"sha":"83e73ab4f75d98cd282948cc322bf4922d0a8d4f","message":"Merge-pull-request-1187-from-faviouz-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 31 Oct 2017 10:00:10 +0100"},{"sha":"b2ccfa3ff783613750e35658be6532024c4d45dc","message":"Update-index.md","author":{"name":"Fábio Maia","email":"fabiu.maia@gmail.com"},"date":"Sun, 29 Oct 2017 19:19:18 +0000"},{"sha":"6fc7a056fa4815d877e650892f79589e337968b0","message":"Merge-pull-request-1178-from-netsgnut-copywriting_updates","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 24 Oct 2017 13:58:05 +0200"},{"sha":"046cf2e4fa492b680d7174dfaa54c61f6998894f","message":"Updated-default-message-for-aor.message.not_found","author":{"name":"Kelvin Wong","email":"284779+netsgnut@users.noreply.github.com"},"date":"Tue, 24 Oct 2017 18:07:00 +0800"},{"sha":"c355f9dff6daa7962b7a174cf5fe154ee8521423","message":"Updated-default-message-for-aor.message.are_you_sure","author":{"name":"Kelvin Wong","email":"284779+netsgnut@users.noreply.github.com"},"date":"Tue, 24 Oct 2017 18:06:20 +0800"},{"sha":"c6bfafb7fc07e0d9e120f78888ee8b07a5054bca","message":"Fixed-issue-where-vertical-scroll-on-page-is-not-possible-when-content-height-e.g-number-list-items-exceeds-the-screen-height","author":{"name":"Jan Martin Langeland","email":"lodott@gmail.com"},"date":"Wed, 18 Oct 2017 20:12:29 +0200"},{"sha":"64f4ee1bdeab141e7e3cb49c420b12758754ba53","message":"Merge-pull-request-1146-from-motro-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 17 Oct 2017 12:04:18 +0200"},{"sha":"57894abe9e0b80e6ea0891454c6fcc9ab046801b","message":"Merge-pull-request-1161-from-marmelab-fixed_prettier","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 17 Oct 2017 11:47:41 +0200"},{"sha":"2df915b48fb33378915eedf2f7bea455d5bd6119","message":"Fix-prettier-version","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 17 Oct 2017 11:14:00 +0200"},{"sha":"ba15d3dd73979fc3b5597894878a4828dfe8f270","message":"Merge-pull-request-1150-from-clementtalleu-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 12 Oct 2017 17:12:04 +0200"},{"sha":"24867505f944d88a2e30d7278228ed5642d5c8e3","message":"Merge-pull-request-1149-from-marmelab-fix_refresh_edit_show","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 12 Oct 2017 17:11:36 +0200"},{"sha":"30f89f7cfa929c9e1334ba1670c1319e955e0399","message":"fix-List.md-documentation","author":{"name":"clementtalleu","email":"clement@la-cooperative-des-tilleuls.com"},"date":"Thu, 12 Oct 2017 17:04:22 +0200"},{"sha":"a5e492e32b9d8e1375c8230762f3dc8cfe8b430b","message":"Fix-Refresh-in-Edit-and-Show-views","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 12 Oct 2017 16:57:08 +0200"},{"sha":"84a5a56aefe3df9a135fe1dafdb6e01283feeb7c","message":"Merge-pull-request-1148-from-natrim-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 12 Oct 2017 12:51:24 +0200"},{"sha":"b236124448052a22ce5b32d4e4ba82a1f88f71ad","message":"prettier-List.js","author":{"name":"Natrim","email":"natrim@users.noreply.github.com"},"date":"Thu, 12 Oct 2017 12:12:27 +0200"},{"sha":"0f177fe3c834258f11eaf83215b4d5918039ae0c","message":"Bind-List.refresh-to-class","author":{"name":"Natrim","email":"natrim@users.noreply.github.com"},"date":"Thu, 12 Oct 2017 12:01:20 +0200"},{"sha":"5b9f6123cf5eb92007b671ebea828e9320738005","message":"Adding-a-link-to-the-updated-Hebrew-translations","author":{"name":"yossi","email":"yossi@motro.net"},"date":"Wed, 11 Oct 2017 19:12:55 +0300"},{"sha":"07452f0efe31fda3309710f74e11f5988595206c","message":"Prepare-1.3.2","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 3 Oct 2017 23:04:50 +0200"},{"sha":"ab0067a6f1c06c3a817cdf1b49b05e817d948336","message":"Move-Code-of-Conduct-out-of-root","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 3 Oct 2017 22:43:00 +0200"},{"sha":"a483e99b7a21eadc1dfc99a2e926992dcdd2daee","message":"Add-issue-template","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 3 Oct 2017 22:40:07 +0200"},{"sha":"fcfe69bd49fa255c279822868a037c56d876a7a8","message":"Merge-pull-request-1124-from-marmelab-fix_with_permissions","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 3 Oct 2017 17:16:04 +0200"},{"sha":"43a8cda19a7a2173b9a765907177aa47204bc928","message":"Remove-FormField-from-WithPermission","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 3 Oct 2017 17:02:21 +0200"},{"sha":"384d4dbc2fe90e38c55e195644eee6f22b24a399","message":"Merge-pull-request-1121-from-marmelab-fix_custom_layout_doc","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 3 Oct 2017 14:16:58 +0200"},{"sha":"1d05bbaf290a9846d8dbe6b542223668317d22c3","message":"Fix-custom-layout-doc","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 3 Oct 2017 14:03:50 +0200"},{"sha":"facdfacac6dff4b4f31ec99f1340075dd1a8b50c","message":"Fix-filter-by-tag-on-example","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 3 Oct 2017 11:49:25 +0200"},{"sha":"8ee6740d70c0a9df8081cbcfc69a1e8c6c0803c8","message":"Merge-pull-request-1115-from-kopax-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 3 Oct 2017 11:28:22 +0200"},{"sha":"ed12989264abe151367db3004507337b7a61daa2","message":"Merge-pull-request-1111-from-marmelab-documentation_fixes","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 2 Oct 2017 17:40:25 +0200"},{"sha":"1572883df190abe77004f5c6f7c26a25615c1df5","message":"Fix-doc-adminReducer-customApp","author":{"name":"Dimitri Kopriwa","email":"dimitri.kopriwa@kopaxgroup.com"},"date":"Sun, 1 Oct 2017 16:50:18 +0700"},{"sha":"918adba25d4310ded1161a323d385badc2dee5c9","message":"Fix-doc-adminReducer-customApp","author":{"name":"Dimitri Kopriwa","email":"dimitri.kopriwa@kopaxgroup.com"},"date":"Sun, 1 Oct 2017 16:50:02 +0700"},{"sha":"69e7163a2923fcc61583ab4d80127ddb9fd2a865","message":"Fix-doc-adminReducer-customApp","author":{"name":"Dimitri Kopriwa","email":"dimitri.kopriwa@kopaxgroup.com"},"date":"Sun, 1 Oct 2017 16:34:11 +0700"},{"sha":"6b67aa1c487704d4db08d68660c3e4ad8a597892","message":"RFR-Documentation-fixes","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Sat, 30 Sep 2017 09:50:58 +0200"},{"sha":"d8c387e87f481b58298dab469d6cc1039be02346","message":"Merge-pull-request-1107-from-marmelab-fix_multi_reference_filter","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 29 Sep 2017 10:48:26 +0200"},{"sha":"4c15397f22551c7f2c642fcc86a2cb7d9b26166a","message":"Merge-pull-request-1108-from-marmelab-fix_link_trailing_slash","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 29 Sep 2017 10:43:01 +0200"},{"sha":"e9cc7a60d16efe77a29b4959d67028786a5c8cad","message":"fix-test","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Fri, 29 Sep 2017 10:31:01 +0200"},{"sha":"c60f09ee3b65909e571661547ec6c423d25c5d9c","message":"remove-trailing-slash-of-basePath-for-List-if-present","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Fri, 29 Sep 2017 10:23:11 +0200"},{"sha":"a7f68d021acfd3aa06560ceabbfb49fb657bce00","message":"incorporate-filter-in-relation-name-so-that-two-reference_many-on-the-same-resource-but-with-different-filter-will-not-override","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Thu, 28 Sep 2017 18:32:26 +0200"},{"sha":"6b7f7b99219932c74492d598e663756c74bef05f","message":"Merge-pull-request-1086-from-marmelab-fix_optimistic_list","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 27 Sep 2017 10:25:40 +0200"},{"sha":"cfd20a0ccf9b51f02528c008e77c32f0bee0a1b4","message":"Merge-pull-request-1092-from-marmelab-fix_documentation_ontouchtap","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 27 Sep 2017 10:18:23 +0200"},{"sha":"797e6c20754d992316baab7265609a63829a5248","message":"fix-prettier-error","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 27 Sep 2017 10:12:12 +0200"},{"sha":"8df7aee44b5301280b1c1e89b4558fe0a09ba138","message":"Merge-pull-request-1094-from-marmelab-hide_list_button","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 27 Sep 2017 09:54:23 +0200"},{"sha":"e526ff79c240aaf1a11def7790a241712b74c0da","message":"Merge-pull-request-1093-from-marmelab-autocomplete-search-text-binding","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 27 Sep 2017 09:40:22 +0200"},{"sha":"a41e6ea586d55d0da95cca52ab2db0bc56592dbc","message":"allow-to-hide-ListButton-for-edit-and-create-too","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 26 Sep 2017 13:59:19 +0200"},{"sha":"fa253c0254ba52fa00f150a26ff420dd323998e1","message":"hide-ListButton-from-show-when-hasList-is-false","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 26 Sep 2017 13:37:26 +0200"},{"sha":"5d642e13caeec596f96583ed11db529902c86956","message":"code-review","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 26 Sep 2017 14:26:17 +0200"},{"sha":"5676cfa2604824e340bf56bbe1f03f13e3d13c5e","message":"update-test-on-AutoCompleteInput","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 26 Sep 2017 12:42:09 +0200"},{"sha":"0432a56c6edf9ec7930ac6226116465383a0cb17","message":"Allow-bound-search-text-value-to-change-copied-from-warp-fix-autocomplete-search-text-binding","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 26 Sep 2017 11:22:19 +0200"},{"sha":"0c89ab6056774193326d926e7fab0e35ac697932","message":"add-test-on-ids-addRecordIdsFactory","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 26 Sep 2017 11:12:53 +0200"},{"sha":"f7dc9cf8e673fcfdbe8603682e15d3ddb184fd87","message":"add-test-on-data-addRecords","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 26 Sep 2017 11:00:33 +0200"},{"sha":"11fa5adda27a3a843e90c37eb758fed865808f90","message":"add-test-to-getFecthedAt","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 26 Sep 2017 10:24:29 +0200"},{"sha":"36555e1a862c8b67cebe36de17dd4b95318c462f","message":"RFR-Fix-documentation-about-onTouchTap-vs-onClick","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 26 Sep 2017 09:42:43 +0200"},{"sha":"fc2d77dd22615d8196ed6e295bc347a5aefc351a","message":"Merge-pull-request-1090-from-marmelab-revert-1063-children_as_function_without_permissions","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 26 Sep 2017 09:29:08 +0200"},{"sha":"5a7257f074bfc86a3874a9dbd5b6848712a906f8","message":"Revert-RFR-Function-as-children-without-permissions","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 26 Sep 2017 09:22:44 +0200"},{"sha":"0d7ba01461c1929905c77db855dc2860e127eca7","message":"Merge-pull-request-1063-from-marmelab-children_as_function_without_permissions","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 26 Sep 2017 09:22:19 +0200"},{"sha":"dea482a27f110a156a971dec1ce4064b897fb694","message":"Merge-pull-request-1088-from-marmelab-fix_date_input_filter","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 26 Sep 2017 09:15:25 +0200"},{"sha":"225e81e1a77c087075b3483cf5a40a6722315504","message":"Merge-pull-request-1083-from-marmelab-themable_filterform","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 26 Sep 2017 08:56:49 +0200"},{"sha":"e83a9d1012009e70f0062d73502403993bf797d7","message":"Merge-pull-request-1089-from-than-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 26 Sep 2017 07:56:21 +0200"},{"sha":"f9615e3d72309f5798f72bb7fe2ea74f73a26a90","message":"fix-typo-in-props-list","author":{"name":"Than Tibbetts","email":"than@dirigible.us"},"date":"Mon, 25 Sep 2017 15:26:11 -0500"},{"sha":"016c14dcdd0eb525834e1227c1f3b2867a088848","message":"Merge-pull-request-1084-from-marmelab-themable_FileInputPreview","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 25 Sep 2017 18:23:14 +0200"},{"sha":"1907efed5da350a7ccf3dbca581ebd820392b068","message":"stringify-date-on-Change-on-date-input-to-avoid-discrepancy-between-serialized-and-unserialized-filter","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 25 Sep 2017 18:21:29 +0200"},{"sha":"732149b6d37635bce404d4c020ef5aea8db8db31","message":"keep-fetchedAt-data-on-delete-and-refresh-only-id-already-in-list","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 25 Sep 2017 14:57:07 +0200"},{"sha":"bb6453a910e8a07aaeb10c5740ab6d3a1be8a08f","message":"apply-the-same-cache-strategy-as-data-to-ids","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 25 Sep 2017 14:12:15 +0200"},{"sha":"3dcfc13295f462554bb50965ee574d3eddd5c144","message":"RFR-Make-the-FileInputPreview-themable","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 25 Sep 2017 09:50:37 +0200"},{"sha":"8b268f6d87e3b2edfd9c425f70910335554129c4","message":"RFR-Make-the-FilterForm-themable","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 25 Sep 2017 09:39:27 +0200"},{"sha":"50065680f5a40fd74344f4bf5169712711206f35","message":"Merge-pull-request-1081-from-kopax-1080","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 25 Sep 2017 09:03:35 +0200"},{"sha":"99c614a402809544c9a38e0844a161155080be52","message":"Merge-pull-request-1079-from-kopaxgroup-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 25 Sep 2017 09:00:41 +0200"},{"sha":"6fe0b1d3664ba23dcff167965cec004b7b4ab7d9","message":"Merge-pull-request-1071-from-michaelluk-radio-button-fix","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 25 Sep 2017 08:57:55 +0200"},{"sha":"cc19f3684dc101538d2cd58c273826224fbaa999","message":"Merge-pull-request-1066-from-marmelab-remove_aor_permissions_from_docs","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 25 Sep 2017 08:57:01 +0200"},{"sha":"c95291b7004e7c799e4fde9fbcc809fbc1e14e27","message":"fix-1080","author":{"name":"Dimitri Kopriwa","email":"dimitri.kopriwa@kopaxgroup.com"},"date":"Sun, 24 Sep 2017 16:44:03 +0700"},{"sha":"c8210ecb9076aec46b76dab3188b2fab4d24dec9","message":"fix-1080","author":{"name":"Dimitri Kopriwa","email":"dimitri.kopriwa@kopaxgroup.com"},"date":"Sun, 24 Sep 2017 16:41:23 +0700"},{"sha":"8e82ec502dd58b674f6497717c0ee8ab38b3a11a","message":"fix-1080","author":{"name":"Dimitri Kopriwa","email":"dimitri.kopriwa@kopaxgroup.com"},"date":"Sun, 24 Sep 2017 05:02:01 +0700"},{"sha":"e00fddfc894fd66ce28fff6e5149e0cf6261577c","message":"corrected-example-1078","author":{"name":"Dimitri Kopriwa","email":"dimitri.kopriwa@kopaxgroup.com"},"date":"Sun, 24 Sep 2017 02:24:03 +0700"},{"sha":"b4cce246ffe6df9ed5f8b9a9bc456061f8b4fab3","message":"add-test","author":{"name":"Michael Luk","email":"michaelluk503@gmail.com"},"date":"Sun, 24 Sep 2017 00:38:09 +0800"},{"sha":"ef44ba4921c94bfd1b9f27d54bc9951d355ce50a","message":"Merge-pull-request-1073-from-natrim-patch-6","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 22 Sep 2017 15:55:37 +0200"},{"sha":"9d1c83e87bfb346b45d604db19f41523d4fe5129","message":"Fix-missing-in-CreateButton-for-onlyUpdateForKeys","author":{"name":"Natrim","email":"maly@kinet.cz"},"date":"Fri, 22 Sep 2017 15:45:32 +0200"},{"sha":"c9ea6c8faa5ebec438cf49cac3f9b6f1669f259b","message":"add-valueSelected-so-RadioButtonGroup-will-update-its-value","author":{"name":"Michael Luk","email":"michaelluk503@gmail.com"},"date":"Fri, 22 Sep 2017 20:00:44 +0800"},{"sha":"1759df89a75c01ede2df20e3a151f898d26076bb","message":"review-2","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 22 Sep 2017 11:59:38 +0200"},{"sha":"b1e9e34e7e38133bde0c2dc98eb58619154c62ce","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 22 Sep 2017 11:24:24 +0200"},{"sha":"8cd8057b807dffc8217e57433ff526ef1c14fbf5","message":"Documentation","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 22 Sep 2017 11:11:08 +0200"},{"sha":"c11df7340beb7a7b610c39861f07286861a1c846","message":"Allow-function-as-a-child-returning-a-promise","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 22 Sep 2017 11:10:57 +0200"},{"sha":"855bc035cf7aafb68c6f76f9a3edeeb7cd8b49cd","message":"Merge-pull-request-1065-from-MhdSyrwan-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 21 Sep 2017 15:01:15 +0200"},{"sha":"83b9748406a20d7a95718d636f2125cb52130309","message":"Enhanced-aor-embedded-array-description","author":{"name":"Muhammad Al-Syrwan","email":"mhdsyrwan@gmail.com"},"date":"Thu, 21 Sep 2017 15:39:39 +0300"},{"sha":"4b5605fbfb214bd1b7e831c3f418705fbb4fd8e1","message":"RFR-Remove-aor-permissions-from-documentation","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Thu, 21 Sep 2017 13:27:25 +0200"},{"sha":"b4ddb855819fce7680d3ce6d4b0170d0190c980f","message":"Enhanced-aor-rest-client-router-description","author":{"name":"Muhammad Al-Syrwan","email":"mhdsyrwan@gmail.com"},"date":"Thu, 21 Sep 2017 13:57:29 +0300"},{"sha":"1de81314bcf06fa07dbc861c1cd20231520987cd","message":"Added-aor-embedded-array-and-aor-rest-client-router","author":{"name":"Muhammad Al-Syrwan","email":"mhdsyrwan@gmail.com"},"date":"Thu, 21 Sep 2017 13:53:37 +0300"},{"sha":"ad578d11f5b044c2daf49a311e168fd217c6b2c6","message":"WIP-Function-as-children-without-permissions","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Thu, 21 Sep 2017 09:52:49 +0200"},{"sha":"fe62e713492f53a2f5040968048454e9d8448b9e","message":"Update-changelog","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 20 Sep 2017 15:39:10 +0200"},{"sha":"b4b3770711902247a466345b7253bc12edb956a6","message":"Bump-version-to-1.3.1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 20 Sep 2017 15:33:55 +0200"},{"sha":"4f59af6fef5122defa637476b35b33354b6a70b7","message":"Merge-pull-request-1061-from-marmelab-delete_ie11","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 20 Sep 2017 15:27:51 +0200"},{"sha":"8b943fb1c3f178363b0322ce63a606064965bab7","message":"Fix-delete-reducer-on-IE11","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 20 Sep 2017 15:21:37 +0200"},{"sha":"96bb49e2f92b270ee39aff6b481687c5336a1890","message":"Merge-pull-request-1058-from-fizix-io-clean-before-build","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 20 Sep 2017 15:05:35 +0200"},{"sha":"c73785bb93eb309a5695d6984cb9ce25c452a009","message":"Add-clean-and-install-steps-before-building","author":{"name":"Arnaud Didry","email":"arnaud@fizix.io"},"date":"Wed, 20 Sep 2017 11:43:20 +0200"},{"sha":"c417ac3f8a17bb26783b6c486d4950ee67ebea53","message":"Merge-pull-request-1044-from-marmelab-fix_default_values_deep_paths","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 20 Sep 2017 14:09:26 +0200"},{"sha":"1e3e3431d884298971ae7d1bfb50594976dc09d0","message":"Merge-pull-request-1034-from-marmelab-fix_alwayson_filter_default_value","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 20 Sep 2017 14:08:44 +0200"},{"sha":"f6039279c92b0707e0a6359bddf40e1a6149b7a8","message":"Merge-pull-request-1052-from-Phocea-patch-6","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 19 Sep 2017 17:14:59 +0200"},{"sha":"b306477edce66095d112232dfb3e688293051c53","message":"Add-AUTH_GET_PERMISSIONS-to-import","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 19 Sep 2017 17:04:18 +0200"},{"sha":"3669a646429598f5d099a8a3acf03b3073a6cdb4","message":"Merge-pull-request-1045-from-marmelab-fix_boolean_input","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Mon, 18 Sep 2017 10:22:52 +0200"},{"sha":"c8ca400b418a1765d0a8850ca9346f8c50a12b9a","message":"Tests","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 18 Sep 2017 10:15:02 +0200"},{"sha":"4f149ac33bb9aeb6886b51913eabdf7c4b4dee89","message":"RFR-Fix-BooleanInput-onChange-with-false-value","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Sun, 17 Sep 2017 09:43:19 +0200"},{"sha":"6cc775c1a3a7d8f06e35a5f5a9639da2aeaccf87","message":"RFR-Fix-default-values-handling-for-deep-paths-with-dot-notation","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Sun, 17 Sep 2017 09:13:59 +0200"},{"sha":"00a1363509e97f2593a4a45fd27f49baa6142348","message":"Fix-initialValues-from-querystring-would-have-overidden","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 15 Sep 2017 18:15:43 +0200"},{"sha":"f8c40a03986af52aae0235c95a1f1ba7f4895185","message":"Merge-pull-request-1033-from-marmelab-fix_breaking_change_list_refresh","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 15 Sep 2017 17:57:25 +0200"},{"sha":"eb08ad020958313d8bc3a8c6db97752d6c655fb5","message":"Merge-pull-request-1035-from-marmelab-fix_date_filter","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 15 Sep 2017 17:47:18 +0200"},{"sha":"0ab9aace543e7eeed4a21feadc2988fd3abdacc1","message":"RFR-Fix-date-filters","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 15 Sep 2017 17:15:25 +0200"},{"sha":"3e5682b17a5fee57d6fc762bed254213f387b70d","message":"RFR-Fix-alwayson-filters-defaultValue-being-ignored","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 15 Sep 2017 16:46:17 +0200"},{"sha":"85be6b36c5eeb8d80f7591e0f06b084b04af41dc","message":"RFR-Fix-breaking-change-List-refresh","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 15 Sep 2017 16:12:10 +0200"},{"sha":"dc84a6dff9512463d2bec0f7cc3f60782fab3cc5","message":"Merge-pull-request-1030-from-RWOverdijk-patch-3","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 14 Sep 2017 15:11:18 +0200"},{"sha":"f6b378534ad4cbd4277f1a8e7e3ec55e3eefd63c","message":"update-location-of-resource-state","author":{"name":"Wesley Overdijk","email":"r.w.overdijk@gmail.com"},"date":"Thu, 14 Sep 2017 14:57:34 +0200"},{"sha":"428ed8b6819139885158269259c2baff6926f349","message":"bump-version","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 13 Sep 2017 15:12:57 +0200"},{"sha":"49a616c93d1ee5ea0bfa3c5f7abea0bb29c8d01c","message":"Merge-pull-request-1022-from-marmelab-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 13 Sep 2017 15:10:12 +0200"},{"sha":"1722863c2cc72ad0d8c285ca9bf4c7b38b5c0f05","message":"Reorder-changes","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 13 Sep 2017 14:53:06 +0200"},{"sha":"7264600a67213b5401a80db5642ea7230c30d75c","message":"Updated-changelog","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 13 Sep 2017 14:24:35 +0200"},{"sha":"fe727c65441453ba51b557bd58bf686d93e2547f","message":"Fixes-after-rebase","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 13 Sep 2017 12:02:47 +0200"},{"sha":"bc78f64d0c5e6510027bb0ffdc9125d5b34472b7","message":"Revert-Code-formatting","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 12 Sep 2017 18:16:32 +0200"},{"sha":"e68476806d2d56fbc64ae96d9807816e40d756a2","message":"Code-formatting","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 12 Sep 2017 17:50:12 +0200"},{"sha":"549dd3ed1ad978362882fae73a3693d5af71c3a6","message":"Fix-loader","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 12 Sep 2017 17:41:48 +0200"},{"sha":"c85d3768aa5240583a2590acffb54c7abc0ddb0d","message":"Run-prettier-to-fix-lint-line-length-warning","author":{"name":"Graham Lyus","email":"grahamlyus@gmail.com"},"date":"Mon, 28 Aug 2017 01:16:28 -0700"},{"sha":"69dba01ee05086103916d7f12b709c4796db9f62","message":"update-RestClient-docs-for-data-previousData","author":{"name":"Graham Lyus","email":"grahamlyus@gmail.com"},"date":"Fri, 25 Aug 2017 22:14:26 -0700"},{"sha":"84c904c3fcb88364e051b9041f2dd464292ee311","message":"968-add-previousData-to-crudDelete","author":{"name":"Graham Lyus","email":"grahamlyus@gmail.com"},"date":"Fri, 25 Aug 2017 22:13:34 -0700"},{"sha":"77ab8e1a5bf670527a4566c56a4d266962c758c3","message":"Fixed-ugly-code-formatting-y-introducing-another-component","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 25 Aug 2017 12:17:19 +0200"},{"sha":"db51391e64dafd2cae789adaba6a20abe90f95f9","message":"Optimized-resource-reducer-and-added-tests-for-it","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 25 Aug 2017 11:42:38 +0200"},{"sha":"9048bb77586f5e50803050da1538e4d62f24690a","message":"Added-warning-about-missing-authClient-when-using-a-function-as-child","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Thu, 24 Aug 2017 10:17:50 +0200"},{"sha":"4bb832f86a7c832b3ae139b06e12d170326f43e5","message":"Removed-withResources-HOC-in-favor-of-a-selector","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Thu, 24 Aug 2017 10:00:29 +0200"},{"sha":"0036d24e73586f6289277cb60f80ed70904d63a0","message":"Review-doc","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 23 Aug 2017 23:39:53 +0200"},{"sha":"b0335f6ad04749797008da8be4614c0a12577d35","message":"Review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 23 Aug 2017 23:30:41 +0200"},{"sha":"79285872d19dcf368f17186160785becc04964e5","message":"Typo-fix-s-show-shows","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 23 Aug 2017 20:09:29 +0000"},{"sha":"b93887861f2f71728929668f2690eef19d6132f7","message":"Typo-fix-s-hide-hides","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 23 Aug 2017 20:09:27 +0000"},{"sha":"c4abffc4a29b337245c1d0efdd5dc6264172e96a","message":"Typo-fix-s-Show-shows","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 23 Aug 2017 20:09:25 +0000"},{"sha":"3b309eb734bff17657d19403d65f7a63aa1d2ae2","message":"Typo-fix-s-Hide-hides","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 23 Aug 2017 20:09:22 +0000"},{"sha":"778df3c07f16e48f9379c1cce353ee43acd413b6","message":"Typo-fix-s-and-Filter-components-and-Filter-components-It-works-there-too","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 23 Aug 2017 20:09:19 +0000"},{"sha":"3ac0eb6c2889bbb04ef7fa554bacd713be35f729","message":"Typo-fix-s-with-a-TabbedForm-and-you-can-hide-with-a-TabbedForm-and-you-can-hide","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 23 Aug 2017 20:09:17 +0000"},{"sha":"c54805b1eb0905699290978db963eac6ce8bfad3","message":"Typo-fix-s-It-s-possible-to-do-so-the-same-way-you-can-restrict-access-to-resources.-Just-like-for-resources-pass-a-function-as-only-child-of-the-component-instead-of-a-set-of-Fields-and-Inputs","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 23 Aug 2017 20:09:15 +0000"},{"sha":"f8661f0044c4f33798d805b4b3458e1bec5e2412","message":"Typo-fix-s-in-the-other-resources-views-too-in-the-other-resource-views-too","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 23 Aug 2017 20:09:13 +0000"},{"sha":"c69d9690cd187a6f5baa157c814f92940392b494","message":"Typo-fix-s-like-we-did-with-the-categories-like-with-the-categories-resource","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 23 Aug 2017 20:09:11 +0000"},{"sha":"70f5ecc803d8749ce22397177f7939ea6481fe9f","message":"Typo-fix-s-which-store-the-user-s-role-upon-authentication-and-return-it-for-the-permissions-check-where-the-authClient-stores-the-user-s-role-upon-authentication-and-returns-it-when-called-for-a-permissions-check","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 23 Aug 2017 20:09:09 +0000"},{"sha":"5b021dab3888967ce42a0be8c0d8acbad11b1209","message":"Typo-fix-s-something-a-component","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 23 Aug 2017 20:09:07 +0000"},{"sha":"96ca90ec6d4f0a637e221d70b64de33c75bfb69e","message":"Typo-fix-s-it-will-relies-it-will-rely","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 23 Aug 2017 20:09:05 +0000"},{"sha":"8c54bd4bbac440857797ce2c9b4a12a5d3f67ec7","message":"Documentation-and-removal-of-the-default-Loading-component","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 23 Aug 2017 17:52:14 +0200"},{"sha":"ff98a249e75ef3a149d9a1a828263d942173dfa3","message":"e2e-tests-and-some-fixes","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 23 Aug 2017 15:38:41 +0200"},{"sha":"96ee0e64d885543395c4879360572fa6918cca55","message":"Fixed-Toolbar-TabbedShowLayout.-Added-users-to-example-app-to-showcase-permissions.-That-will-be-used-for-e2e-too","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 23 Aug 2017 14:17:20 +0200"},{"sha":"8ff877cafe7a3e86e65033e26a1370e0f846e508","message":"linting","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 23 Aug 2017 12:21:43 +0200"},{"sha":"5a5bb7cb4d90b2d643ebe910ed6eeffc305d0483","message":"Fix-handling-of-children-in-withPermissionsFilteredChildren","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 23 Aug 2017 12:19:21 +0200"},{"sha":"f6b6d1fb3a6b64b5be5a0d47a2e7e0991b2bbc8d","message":"Ensure-we-don-t-have-to-specify-keys-for-children","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 23 Aug 2017 11:55:18 +0200"},{"sha":"b39fbd7092295b9e0d70e6ffa897393556e49437","message":"Fix-show-view","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 22 Aug 2017 17:50:54 +0200"},{"sha":"62e7af2f1439fae7879cf4137d7e951e480cf589","message":"Converted-all-views-to-accept-a-function-as-their-children","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 22 Aug 2017 17:41:37 +0200"},{"sha":"8b91d7e21d25e521abb295d8d26049339a139c14","message":"Included-aor-permissions-components","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 22 Aug 2017 15:10:47 +0200"},{"sha":"06331a662e169d4e4b3bcaabf09319c10e0d0eed","message":"linting","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 22 Aug 2017 13:34:03 +0200"},{"sha":"d6eddb23e22b33448a86657acf89302e1f05b197","message":"Reverted-Admin-to-its-function-component-form","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 22 Aug 2017 13:33:03 +0200"},{"sha":"c129b52368c2a724ad469f7ee5de2ddf8ae8c54b","message":"WIP-Integrate-permissions-into-core","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 22 Aug 2017 13:26:05 +0200"},{"sha":"f5d354c32de58347e04b48d6734ccaf22df6b76a","message":"Updated-material-ui-chip-input-to-0.17.0","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 21 Aug 2017 17:16:58 +0200"},{"sha":"9836464ca275b1fbf84d932e27b4d7f3fb35d374","message":"WIP-Upgrade-dependencies","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 18 Aug 2017 11:17:40 +0200"},{"sha":"abed63d65e976e5900116fad5bd7e8e09132b13f","message":"Remove-unused-parameter-for-refreshView-action-creator","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Thu, 17 Aug 2017 17:25:01 +0200"},{"sha":"50c165610bde93536543336be0f2d0a6b1af2d05","message":"RFR-Ability-to-refresh-views-using-a-redux-action","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Thu, 17 Aug 2017 17:16:45 +0200"},{"sha":"bf406f5960a88dc54467c5f5288e641c39ef7017","message":"Delete-package-lock.json","author":{"name":"Marc Weistroff","email":"marc@weistroff.net"},"date":"Wed, 9 Aug 2017 15:47:47 +0200"},{"sha":"bc9f040ed59d635dff5dfb7781b05e9a97f28fde","message":"Support-nested-filter-object","author":{"name":"Takayuki Maeda","email":"mtakayuki1209@gmail.com"},"date":"Sun, 6 Aug 2017 22:33:53 +0900"},{"sha":"9f9e2ca92fb1242e6da84452bb621e84fed63534","message":"RFR-Refactor-forms-default-values-handling","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 2 Aug 2017 12:40:38 +0200"},{"sha":"e02ee64a92762dba252ef87794ac8daa28618a12","message":"Add-layoutless-routes","author":{"name":"Marc Weistroff","email":"marc@weistroff.net"},"date":"Sun, 30 Jul 2017 16:44:07 +0200"},{"sha":"57dbd86128037096a445f152f4f339113c0aada7","message":"Add-response-body-to-HttpError","author":{"name":"Marc Weistroff","email":"marc@weistroff.net"},"date":"Mon, 17 Jul 2017 17:11:08 +0200"},{"sha":"f2e6b4bd03e74d0559559d5541a66964097637bd","message":"move-webpack-loaders-to-example","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Jul 2017 18:40:02 +0200"},{"sha":"feef9267ed0cd9f876707ed9559836c773855e0d","message":"Move-webpack-to-example","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Jul 2017 18:34:44 +0200"},{"sha":"12c42ea538b0edda48930057bd80444864fa8132","message":"Update-eslint-version","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Jul 2017 14:23:45 +0200"},{"sha":"cb73cb807d62065f5cd570ed078b88dd185a240d","message":"Tweak-no-unused-var-to-avoid-cumbersome-formatting","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Jul 2017 09:48:27 +0200"},{"sha":"6728e4fa104c088ea725def70202be19c140807e","message":"Re-add-eslint-recommended-rules-and-fix-errors","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 4 Jul 2017 23:42:02 +0200"},{"sha":"32f38c6f61fb9f6a8c6daa6935048544f7cc68c4","message":"Rename-notFound-to-catchAll","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 4 Jul 2017 23:00:53 +0200"},{"sha":"d1234825721af3278c7eba3c35625e5ac05fe3ad","message":"Fix-Unused-import","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 4 Jul 2017 22:52:25 +0200"},{"sha":"ed788735f8a0e3fde2594b51cdc151a76b7522dd","message":"Add-ability-to-customize-NotFound-page","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 4 Jul 2017 17:24:23 +0200"},{"sha":"e4711d140c770f06ec5104701a98c4c98332b073","message":"Add-NotFound-route","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 4 Jul 2017 16:39:38 +0200"},{"sha":"dec16318fe548d1995e1c95c18920d50a40fc088","message":"update-imports-and-add-resources-level-to-the-admin-state","author":{"name":"lutangar","email":"johan.dufour@gmail.com"},"date":"Tue, 4 Jul 2017 13:38:29 +0200"},{"sha":"3caaa89e8465d14b57498e8b505fa44ced9a0eba","message":"create-admin-reducer-directory-and-move-related-reducers-into-it","author":{"name":"lutangar","email":"johan.dufour@gmail.com"},"date":"Wed, 3 May 2017 15:53:47 +0200"},{"sha":"cdacf4eb8c6752c5f540f5c62c36e3c1c295821f","message":"run-unit-tests-before-linter","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 3 Jul 2017 15:50:41 +0200"},{"sha":"ecd6681e896539609ed951d00a463a8152de0022","message":"Add-make-prettier-command","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 3 Jul 2017 15:47:53 +0200"},{"sha":"0b35a89403a2f2a58572da2dc7502ed4a74d2d2c","message":"Add-linting-to-CI","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 3 Jul 2017 15:33:39 +0200"},{"sha":"9f318b4ac4fa860b0f6e899e3e22084685008605","message":"Use-prettier-for-code-formatting","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 3 Jul 2017 14:47:02 +0200"},{"sha":"fc1524e80e4588539287cbd572adc3b44c5c877b","message":"Add-explicit-error-message-when-decorating-aor-Input-components","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 3 Jul 2017 11:26:13 +0200"},{"sha":"d9acce34b7a5784ec324b0026e82f0ae589ee039","message":"Use-stringify-to-generate-a-query-string","author":{"name":"Takayuki Maeda","email":"mtakayuki1209@gmail.com"},"date":"Thu, 29 Jun 2017 21:26:12 +0900"},{"sha":"a56dfaf34d6d53ec810ef6b06cf6a3cbf86c29c2","message":"Merge-pull-request-1020-from-Phocea-patch-5","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 12 Sep 2017 12:19:56 +0200"},{"sha":"28767401a0a963c6c082655c3bea40df9605da89","message":"Update-Resource.md","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 12 Sep 2017 12:11:15 +0200"},{"sha":"a23d32b62d5e9347a0e0705060d39a33bc61bce6","message":"Update-index.md","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 12 Sep 2017 12:10:57 +0200"},{"sha":"f9ca52ee1ab1caefdbaa865a632896ad83d3c0b8","message":"Update-Theming.md","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 12 Sep 2017 12:10:01 +0200"},{"sha":"f89eb0c07773b6cf108c529f30fae88a011f5ecf","message":"Update-Show.md","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 12 Sep 2017 12:09:41 +0200"},{"sha":"e19550f27a85e2e4cc850e470276403176b748fc","message":"Merge-pull-request-1019-from-Phocea-patch-3","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 12 Sep 2017 12:02:31 +0200"},{"sha":"0d832f76c7db29edcc7c441279448bf472888ba8","message":"Update-List.md","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 12 Sep 2017 12:01:02 +0200"},{"sha":"865a7298f35fa4fc731214483b8e96d7d939b30a","message":"Update-Inputs.md","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 12 Sep 2017 12:00:28 +0200"},{"sha":"26c58a936c221db45d676e4ad95ed526f207b2d7","message":"Update-Fields.md","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 12 Sep 2017 11:59:31 +0200"},{"sha":"376afa0137482ed2badbe4767310105571e74338","message":"Merge-pull-request-1018-from-Phocea-patch-2","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 12 Sep 2017 11:59:08 +0200"},{"sha":"b6a48f0c1365c803ccaefdc717a8c62825e0e91e","message":"Update-FAQ.md","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 12 Sep 2017 11:58:46 +0200"},{"sha":"d108f9f13a1e592cf80cca1653048f3c44838fa2","message":"Update-CustomApp.md","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 12 Sep 2017 11:58:11 +0200"},{"sha":"1c16bc406904c4c754a15fc01193736e71045d9d","message":"Update-CreateEdit.md","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 12 Sep 2017 11:57:50 +0200"},{"sha":"9b278ff3d6af8fd5b6e3af66dea692b843c8b8b1","message":"Update-Admin.md","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 12 Sep 2017 11:57:00 +0200"},{"sha":"dac8886f36d719d40f61cca6d8019c827c815ffb","message":"Fix-internal-links","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 12 Sep 2017 11:49:13 +0200"},{"sha":"2a4aa78c7f14a8531e2b2394699da2be4b06f594","message":"Fix-internal-md-links","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 12 Sep 2017 11:46:17 +0200"},{"sha":"2895e04835aace86bcf51a6151b23fe419301b2a","message":"Fix-md-link","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Tue, 12 Sep 2017 11:43:53 +0200"},{"sha":"152cac18c5bff71244dc55c35804e1c7658f30b9","message":"Merge-pull-request-1004-from-vitivs-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 12 Sep 2017 11:35:00 +0200"},{"sha":"ec9a06da2e6374f4823a32ccab37b00be0c1d037","message":"Merge-pull-request-1017-from-Phocea-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 11 Sep 2017 15:27:54 +0200"},{"sha":"4166b186b902987483660b1d8a977fba725e363b","message":"Fix-translation-page-link","author":{"name":"Greg","email":"phocea04500@hotmail.com"},"date":"Mon, 11 Sep 2017 15:03:19 +0200"},{"sha":"bc33b6d5b8e5dfb832fd1e332b98ca7e548a3a56","message":"add-Ukrainian-translation","author":{"name":"vitiv","email":"vitivs@gmail.com"},"date":"Wed, 6 Sep 2017 19:57:14 +0300"},{"sha":"438a7f90031f15ece363ab6b608340231efaf69f","message":"Merge-pull-request-995-from-jf248-hotfix-docs-update","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 5 Sep 2017 21:10:32 +0200"},{"sha":"670ab542321615fb3e60b1f0748031bf597022cb","message":"Remove-changes-to-Admin.md","author":{"name":"Joshua Freedman","email":"jf248@users.noreply.github.com"},"date":"Tue, 5 Sep 2017 10:10:21 -0700"},{"sha":"93735459ff720d7d788e624fa8726a6d8b3f0508","message":"Third-time-lucky","author":{"name":"Joshua Freedman","email":"jf248@users.noreply.github.com"},"date":"Mon, 4 Sep 2017 19:46:31 -0700"},{"sha":"ed5c1eddff67c5f6320692a7f853b9f1470f1143","message":"Fix-alignment","author":{"name":"Joshua Freedman","email":"jf248@users.noreply.github.com"},"date":"Mon, 4 Sep 2017 19:30:34 -0700"},{"sha":"5ffc5930e22449a148d2ee2053a3736f99ab6e1c","message":"Ensure-Sidebar-always-specifies-an-onMenuTap-prop","author":{"name":"Joshua Freedman","email":"jf248@users.noreply.github.com"},"date":"Fri, 1 Sep 2017 19:12:32 -0700"},{"sha":"439777065b2b39bed373aebe558f34c67f4f3ef1","message":"Fix-typo","author":{"name":"Joshua Freedman","email":"jf248@users.noreply.github.com"},"date":"Sun, 3 Sep 2017 23:03:25 -0700"},{"sha":"d2cd346a7de37efaac31b96eb922074c1ef14ad1","message":"Correct-the-Menu.js-example-in-Admin.md","author":{"name":"Joshua Freedman","email":"jf248@users.noreply.github.com"},"date":"Fri, 1 Sep 2017 19:12:32 -0700"},{"sha":"30f4ac13400a46845e3ff2240c14ae5718ab086f","message":"Merge-pull-request-993-from-zifnab87-master","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 1 Sep 2017 20:48:47 +0200"},{"sha":"7346afc45ed8d4f197db0151046e81460f2ccc77","message":"change-gr-to-el-according-to-official-documents","author":{"name":"Michail Michailidis","email":"mmichaelid@gmail.com"},"date":"Fri, 1 Sep 2017 20:01:58 +0300"},{"sha":"68cf8670f968a5aeb618f6550078a511f72b93a3","message":"add-greek-translation-entry","author":{"name":"Michail Michailidis","email":"mmichaelid@gmail.com"},"date":"Fri, 1 Sep 2017 20:00:02 +0300"},{"sha":"84f452b4e5f6c224bf4b6db7ec617b22f3d15610","message":"Merge-pull-request-990-from-fab1an-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 31 Aug 2017 13:35:27 +0200"},{"sha":"c598bd03cb571e793d97fa51dae35225a724e096","message":"Update-SelectInput.js","author":{"name":"Fabian Zeindl","email":"fabian.zeindl@gmail.com"},"date":"Thu, 31 Aug 2017 12:57:35 +0200"},{"sha":"b9a7dd1d5dcf8fa5e9e99cbac2ecb772f6be9fed","message":"Prepare-v1.2.3","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 30 Aug 2017 11:58:19 +0200"},{"sha":"e18fde22d88c9f0dd2b961b58cdf7ec3edbb3311","message":"Merge-pull-request-978-from-dunghuynh-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Sun, 27 Aug 2017 17:38:30 +0200"},{"sha":"1cb8e553fc77560bf2648136f0acec62947d2ab0","message":"Add-Epilogue-Client","author":{"name":"Dung Huynh","email":"huynhquangdung@gmail.com"},"date":"Mon, 28 Aug 2017 01:11:19 +1000"},{"sha":"e919cf9a7ede2c2e764a28bdd2cb42caeb08fe7f","message":"Merge-pull-request-972-from-marmelab-fix_selectinput_keyboard_selection","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Fri, 25 Aug 2017 15:44:20 +0200"},{"sha":"f714e98a2b79f645a92cca569a417ac90db19d1c","message":"RFR-Fix-SelectInput-selection-via-keyboard","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 25 Aug 2017 15:29:10 +0200"},{"sha":"0c94ad0cf498f5d4e0314110ecec8f0d9eaa320d","message":"Merge-pull-request-969-from-sGy1980de-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 25 Aug 2017 11:02:54 +0200"},{"sha":"319080b28d29fb484112fc951b99bf62a6fdfe24","message":"check-for-Content-Type-already-set-before-setting-automatically","author":{"name":"Silvio Ginter","email":"silvio.ginter@googlemail.com"},"date":"Fri, 25 Aug 2017 10:52:00 +0200"},{"sha":"f554814aed664211b8d337545e11024f41ba5323","message":"Merge-pull-request-962-from-marmelab-tabbedform_validation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 23 Aug 2017 20:42:11 +0200"},{"sha":"069695ab007fdf92180eccc5e94bc9f5214b056a","message":"RFR-Fix-TabbedForm-errors-are-hidden-for-inactive-tabs","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 23 Aug 2017 10:59:16 +0200"},{"sha":"25d5d67ba3cb8640dc02444e7f65253f45de4043","message":"Merge-pull-request-954-from-marmelab-fix_file_input_single_file","author":{"name":"Julien Demangeon","email":"julien@marmelab.com"},"date":"Tue, 22 Aug 2017 16:04:31 +0200"},{"sha":"18fb096a7aa611166ce7db6f4cf5da030c4a2286","message":"Merge-pull-request-956-from-marmelab-fix_numeric_validators","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Tue, 22 Aug 2017 16:02:52 +0200"},{"sha":"faa4b7f8b9e852ff636e1c57e8b6bb76d2aa6e2d","message":"RFR-Fix-numeric-validators","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 21 Aug 2017 17:41:32 +0200"},{"sha":"e4fc53ae40266a2d81225472bdaa3f1419670521","message":"RFR-Fix-FileInput-handling-when-allowing-only-a-single-file","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 21 Aug 2017 09:29:45 +0200"},{"sha":"2208295788c9f12ff102668c648832315b6ca6cb","message":"Merge-pull-request-947-from-marmelab-pagination_chevrons","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sun, 20 Aug 2017 14:04:18 +0200"},{"sha":"2549fd400f8d8c0b83fc3904152384776647dd98","message":"Merge-pull-request-948-from-marmelab-fix_selectinput_bidirectional_binding","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sun, 20 Aug 2017 14:02:02 +0200"},{"sha":"aacb78e22cdbac5ca1b8b80a3a822ad3ce22e433","message":"Merge-pull-request-949-from-marmelab-fix_fileinput_validation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sun, 20 Aug 2017 14:00:44 +0200"},{"sha":"a465931f82317224bcd80e6e357f258629904419","message":"Fix-tests","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 18 Aug 2017 16:33:27 +0200"},{"sha":"39992edd53d10ac636e124f94d5dadc70b8f5446","message":"RFR-Ensure-FileInput-validation-messages-are-displayed","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 18 Aug 2017 16:20:28 +0200"},{"sha":"f2e7499721f75dced8c0121dee150526daefbf58","message":"RFR-Fix-SelectInput-Bidirectional-binding","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 18 Aug 2017 15:33:53 +0200"},{"sha":"dd47456d6237de4bc2137086bdc5fc87b375e3f9","message":"fix-tests","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 18 Aug 2017 12:41:47 +0200"},{"sha":"94ff3fc015a0a5238dbf5390da350fc0226d4471","message":"linting","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 18 Aug 2017 12:38:14 +0200"},{"sha":"a10c91da8ea4edcab1e74aa7b096160b840f7743","message":"RFR-Use-colors-from-MUI-theme-for-pagination-chevrons","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 18 Aug 2017 12:37:02 +0200"},{"sha":"444fe5696da9c6d733423fe45e67531527cdbc8b","message":"Merge-pull-request-937-from-SSA111-master","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 15 Aug 2017 14:11:36 +0200"},{"sha":"cbe0992382f8c4ed7d644d4074d395d8543de410","message":"Added-danish-translation","author":{"name":"SSA111","email":"Sesa111@gmail.com"},"date":"Tue, 15 Aug 2017 13:07:23 +0200"},{"sha":"036b90cfd2b521970b6fdc170d16343505ac0d1e","message":"Merge-pull-request-931-from-melaniedavila-fix-typo","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 10 Aug 2017 23:45:26 +0200"},{"sha":"85f060bd3c2a4e63ab2620cc14e5c008c9cd27f5","message":"Change-calls-to-call","author":{"name":"Melanie Davila","email":"davilam91@gmail.com"},"date":"Thu, 10 Aug 2017 15:40:33 -0400"},{"sha":"638ce4e657fd2cb440e4abe01fbe425a077d2deb","message":"Merge-pull-request-923-from-zeusbaba-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 9 Aug 2017 16:09:42 +0200"},{"sha":"9038bbb1a29a9e4a25ee098c689611e62e0945ee","message":"Update-Translation.md","author":{"name":"Yilmaz Guleryuz","email":"yilmaz@guleryuz.net"},"date":"Wed, 9 Aug 2017 10:52:33 +0200"},{"sha":"261a73cb9d7f4acc6ecb6045357b3bff305a4075","message":"added-Norwegian-translations","author":{"name":"Yilmaz Guleryuz","email":"yilmaz@guleryuz.net"},"date":"Tue, 8 Aug 2017 11:00:40 +0200"},{"sha":"84441be149994990d1c57ed0f92c2b9307ab4ab1","message":"Merge-pull-request-921-from-marmelab-fix_checkboxgroupinput","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 7 Aug 2017 10:12:47 +0200"},{"sha":"e9f42c6c1233687e1814a8174096ef74d03cdfc8","message":"Check-inclusion-using-non-strict-equality","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 7 Aug 2017 10:01:31 +0200"},{"sha":"b04750c3dade91cdee38ca50e112ebc5711cfc4a","message":"Merge-pull-request-916-from-dimitrovs-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 3 Aug 2017 08:52:56 +0200"},{"sha":"38fcc6e862127cac59b9c611df80e6cb5198bf84","message":"Fix-PropTypes-field-typo","author":{"name":"Stefan Dimitrov","email":"stefan@dimitrov.li"},"date":"Wed, 2 Aug 2017 22:57:07 -0400"},{"sha":"38e30220fbb264a5791d6b299e35b9454a94d455","message":"Prepare-1.2.2-release","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 2 Aug 2017 16:52:10 +0200"},{"sha":"98ba07b56b077a156c209d93a3b4368cb8911cfd","message":"Merge-pull-request-897-from-dervos-update-full-icu","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 2 Aug 2017 15:06:55 +0200"},{"sha":"7005715484c452056e9ca6d88e05b881d34cc6c9","message":"Merge-pull-request-907-from-swarms-tech-fix-login-form-lock-loading","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 2 Aug 2017 15:06:17 +0200"},{"sha":"cce45da63e2a6bd29ef1d814a17275a4886db4d2","message":"Merge-pull-request-908-from-marmelab-fix_custom_headers_doc","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 31 Jul 2017 19:39:21 +0200"},{"sha":"a7d14e04b90f671de13c8de26b0aac4c5a9970d9","message":"Fix-Custom-Headers-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 31 Jul 2017 17:44:00 +0200"},{"sha":"7bf3133f930f4dbeace65f6d0a7ccbdbe0954afb","message":"Fix-login-form-lock-and-loader-after-saga-refactoring","author":{"name":"Aristotelis Dossas","email":"teldosas@gmail.com"},"date":"Sun, 30 Jul 2017 21:53:22 +0300"},{"sha":"2559cfca7772775755d17af7fc66132ad8df307e","message":"updated-full-icu-to-1.1.3","author":{"name":"Reinhard van Apeldoorn","email":"reinhard@dervos.nl"},"date":"Wed, 26 Jul 2017 15:03:11 +0200"},{"sha":"6aa3e61c83e66413c8acaa04e3da7d6f18490e60","message":"Merge-pull-request-893-from-marmelab-number_input_step_doc","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 25 Jul 2017 18:31:25 +0200"},{"sha":"9af26de3f46bf3237a872f37139c7e2e1b086bcf","message":"Merge-pull-request-892-from-marmelab-document_history","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 25 Jul 2017 18:30:38 +0200"},{"sha":"accb1f3a62821f6787bc51f3d2283e3976f143ae","message":"Allow-numeric-value-in-NumberInput-step-prop","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 25 Jul 2017 18:14:51 +0200"},{"sha":"56f8b36d6f0eedce017f1d491a24df115435c895","message":"Document-admin-history-prop","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 25 Jul 2017 18:01:45 +0200"},{"sha":"c72d1fd373f12022bea2cfb892b0de35b87b29af","message":"Merge-pull-request-866-from-leesei-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 25 Jul 2017 08:48:27 +0200"},{"sha":"8e151a9657f0914d0e0701706b54208544fa3e22","message":"Merge-pull-request-885-from-cornhundred-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 25 Jul 2017 08:38:32 +0200"},{"sha":"9e4711684d5eaed59b3dac0b7c846c2e24483f80","message":"changed-build-to-built","author":{"name":"Nicolas Fernandez","email":"cornhundred@users.noreply.github.com"},"date":"Mon, 24 Jul 2017 11:53:17 -0400"},{"sha":"abbc14016315d8ae0e7dc1aea25cc29f3d2e9a7f","message":"updated-link-will-update-link-on-Tutorial.md","author":{"name":"Nicolas Fernandez","email":"cornhundred@users.noreply.github.com"},"date":"Mon, 24 Jul 2017 11:51:29 -0400"},{"sha":"df7d25f8883a31556523dfdf0f96f7c686e09bc4","message":"Updated-link-to-Creation-and-Editing","author":{"name":"Nicolas Fernandez","email":"cornhundred@users.noreply.github.com"},"date":"Mon, 24 Jul 2017 11:50:20 -0400"},{"sha":"9df758e48d23be1dc4dc401e037f86d3508e44f7","message":"amend-wording-store-record","author":{"name":"leesei","email":"leesei@gmail.com"},"date":"Mon, 24 Jul 2017 23:10:32 +0800"},{"sha":"97659da142740dad58c54e1a2087cee429120353","message":"Changed-Edition-to-Editing-or-Edit-etc","author":{"name":"Nicolas Fernandez","email":"cornhundred@users.noreply.github.com"},"date":"Fri, 21 Jul 2017 16:00:38 -0400"},{"sha":"e000639ea951a12351d4dde936445f499c6322d9","message":"Merge-pull-request-884-from-cornhundred-master","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 21 Jul 2017 21:00:15 +0200"},{"sha":"a8d7e8ab219cd4df1684397f4f4d57848c23ac3c","message":"Fixed-Tutorial.md-typo","author":{"name":"Nicolas Fernandez","email":"cornhundred@users.noreply.github.com"},"date":"Fri, 21 Jul 2017 13:03:58 -0400"},{"sha":"7fadfe1cc8805e38cd8c902c3f84c77a346181fb","message":"Merge-pull-request-879-from-arlair-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 20 Jul 2017 16:59:09 +0200"},{"sha":"64f3a2619e6c9190cda19b2b618f9962eb96c090","message":"Update-RestClients.md","author":{"name":"Arlair","email":"arlair@yahoo.com"},"date":"Thu, 20 Jul 2017 22:53:33 +0800"},{"sha":"ab1b5d0aba62f28fe4e132d5ce0d73adb67747eb","message":"Merge-pull-request-865-from-hamidfzm-master","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 19 Jul 2017 23:38:10 +0200"},{"sha":"b55b0c2ad248981b4291a6d0cf7abd4b3f7053aa","message":"Insert-farsi-in-list-in-alphabetical-order","author":{"name":"Hamid FzM","email":"hamidfzm@gmail.com"},"date":"Thu, 20 Jul 2017 01:37:26 +0430"},{"sha":"301595f16ef0d58119ff84a86047d35a2e01b471","message":"fix-doc-for-ISO-date-input","author":{"name":"leesei","email":"leesei@gmail.com"},"date":"Mon, 17 Jul 2017 14:14:23 +0800"},{"sha":"11632539239943ba4c26acee9b8c8649bfd73bdd","message":"Merge-pull-request-862-from-freeznet-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 14 Jul 2017 07:26:07 +0200"},{"sha":"26d10a85da1df95c06b2bd5aae93fad167313a9f","message":"Add-farsi-translation-package","author":{"name":"Hamid FzM","email":"hamidfzm@gmail.com"},"date":"Fri, 14 Jul 2017 01:50:55 +0430"},{"sha":"faa00722684ef78527d481c4b1748e04127cc75c","message":"Fix-translation-warning-on-TabbedShowLayout-s-tab-names","author":{"name":"Rui Fu","email":"freeznet@users.noreply.github.com"},"date":"Thu, 13 Jul 2017 17:46:49 +0800"},{"sha":"8c9ef1f9b663b1a9fa6464dda98b480a71a4980f","message":"Merge-pull-request-859-from-RWOverdijk-patch-2","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 12 Jul 2017 13:47:38 +0200"},{"sha":"63e63dfe145294dd5878f8c660b445ff95016fd0","message":"Change-dependency-location-in-code-example","author":{"name":"Wesley Overdijk","email":"r.w.overdijk@gmail.com"},"date":"Wed, 12 Jul 2017 09:52:03 +0200"},{"sha":"54eea7b7b5b4a14fddf8e90578aed6af97d1fd3f","message":"Merge-pull-request-856-from-RWOverdijk-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 11 Jul 2017 16:48:44 +0200"},{"sha":"f276f36dbfe8e4d0065fb24ffc337c49ddb65d4f","message":"fix-typo-impot","author":{"name":"Wesley Overdijk","email":"r.w.overdijk@gmail.com"},"date":"Tue, 11 Jul 2017 16:14:15 +0200"},{"sha":"e19c0113fcb70ebce51466c9b3ba26fbb5fcff07","message":"Add-changelog-for-1.2.1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 11 Jul 2017 13:13:13 +0200"},{"sha":"e1ac2a39f580840d594529d71f3f286272897492","message":"Merge-pull-request-839-from-marmelab-fix_tabbed_form_default_values","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 11 Jul 2017 13:00:53 +0200"},{"sha":"ee8adab5bca9b935b85a8b902579cf756128f5ee","message":"Merge-pull-request-841-from-lucasfevi-fix-radio-button-group-input-label-translation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 11 Jul 2017 13:00:10 +0200"},{"sha":"e6d70fe4d3ad3cd8844d9ac94cbbc12649f8d48a","message":"Merge-pull-request-852-from-ismailbaskin-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 11 Jul 2017 12:37:07 +0200"},{"sha":"7b207f7057ab55b3ab3dd236c659b5ed739d2927","message":"Add-Turkish-translation-package","author":{"name":"ismail BASKIN","email":"ismailbaskin@users.noreply.github.com"},"date":"Tue, 11 Jul 2017 13:33:11 +0300"},{"sha":"c35fafeb8a71371f91397f30d86112264a3eae67","message":"Merge-pull-request-849-from-doananh234-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 11 Jul 2017 11:10:22 +0200"},{"sha":"95088f882ca866cf61280d793a8b6b4160ec3837","message":"Improve-app-fix-multi-select","author":{"name":"DoanAnh","email":"doananh234@gmail.com"},"date":"Tue, 11 Jul 2017 14:10:01 +0700"},{"sha":"cb6ccc79caa887e00b3f0f59c1b693bd383aa2a4","message":"Remove-defaultProps-previously-added","author":{"name":"Lucas Vieira","email":"newlucasfevi@gmail.com"},"date":"Sun, 9 Jul 2017 16:12:05 -0300"},{"sha":"364a561edc32c1de0f6a81e0cf8bf43cfbf430bd","message":"Add-missing-resource-prop-to-the-Labeled-element-inside-RadioButtonGroupInput","author":{"name":"Lucas Vieira","email":"lucas.vieira@possible.com"},"date":"Sat, 8 Jul 2017 16:38:06 -0300"},{"sha":"ebf68312c72f859a174e757924b65397ec1ecf95","message":"Fix-propTypes-of-RadioButtonGroupInput","author":{"name":"Lucas Vieira","email":"lucas.vieira@possible.com"},"date":"Sat, 8 Jul 2017 16:10:44 -0300"},{"sha":"385a48cb02619eb3e8ef6de752434668eabed66d","message":"RFR-Fix-TabbedForm-initialValues-gathering","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 7 Jul 2017 17:45:14 +0200"},{"sha":"b3c549050449ae27161e716c4680f9d6cac1aec4","message":"Merge-pull-request-831-from-cleany-fix_827","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 6 Jul 2017 11:00:40 +0200"},{"sha":"453c69abf21cdf226f1b6272351b77fe00ef35e5","message":"code-review","author":{"name":"Philippe Saint Jacques","email":"philippe@cleany.fr"},"date":"Thu, 6 Jul 2017 10:45:50 +0200"},{"sha":"aa005815c22bb23ca07a624d28026699969ff8e8","message":"Merge-pull-request-830-from-marmelab-fix_reference_array_field_datagrid","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 5 Jul 2017 18:16:53 +0200"},{"sha":"9af764a8469e6dce9a7b0df893fc1d2394a515be","message":"Fix-ReferenceArrayField-used-with-Datagrid-child","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Jul 2017 18:00:17 +0200"},{"sha":"9c4b1abf360dd5ba6bd29c6dee66cb31f3f00546","message":"referenceField-properly-handle-default-props","author":{"name":"Philippe Saint Jacques","email":"philippe@cleany.fr"},"date":"Wed, 5 Jul 2017 16:18:19 +0200"},{"sha":"fab05fd44870e711e9d3075e45dc9f4ca53084a1","message":"Update-from-marmelab","author":{"name":"Sébastien Boulle","email":"sebastien@cleany.fr"},"date":"Wed, 5 Jul 2017 10:47:21 +0200"},{"sha":"9080c31284c8b9e744e8d3495d64d787c3a4d4ff","message":"Merge-pull-request-801-from-marmelab-add-code-of-conduct-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 3 Jul 2017 15:52:30 +0200"},{"sha":"dfc9f43bb018af023a606c303d9dc7b09cedfc29","message":"Merge-pull-request-820-from-marmelab-fix_saga_doc","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 3 Jul 2017 15:28:31 +0200"},{"sha":"5c0c25b24e2e8269d0ee242381cee6f7843f8d0f","message":"Fix-custom-saga-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 3 Jul 2017 12:05:18 +0200"},{"sha":"c5c3a7ca9e24962bb9d8544afc37aa7d093f0180","message":"Merge-pull-request-812-from-remi13131-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 3 Jul 2017 11:58:13 +0200"},{"sha":"32b460a2b6b4046e783a7f342193d0fa314fcacd","message":"Wording-fix","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 3 Jul 2017 11:57:56 +0200"},{"sha":"30a8524fc25bdb34e552a3463d2e34ef64d10d2b","message":"Add-Doc-about-the-addLabel-prop-for-ReferenceField","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Fri, 30 Jun 2017 14:49:00 +0200"},{"sha":"7f68d6d5b98511ddc514d5c7ffac6889da9d7e45","message":"Add-link-to-announcement-articles-on-the-marmelab-blog","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 30 Jun 2017 09:47:40 +0200"},{"sha":"26c8acc650e746e943ec4110f331e5fc385fd317","message":"Merge-pull-request-808-from-vmattos-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 30 Jun 2017 09:45:07 +0200"},{"sha":"3db5d29b794bdde297842940a539ef73b4968f18","message":"Fixes-documentation-on-ReferenceArrayList","author":{"name":"Vitor Mattos","email":"mattos.trk@gmail.com"},"date":"Thu, 29 Jun 2017 11:54:41 -0300"},{"sha":"482b4ddf32f153259f4f36b077e02e2afa62c60c","message":"Create-CODE_OF_CONDUCT.md","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 28 Jun 2017 23:08:13 +0200"},{"sha":"0622e8c8c54d128dabc49518e0ba7bf6d3cca62b","message":"Merge-pull-request-745-from-marmelab-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 28 Jun 2017 23:01:10 +0200"},{"sha":"83a5f7e9dbe1bd110398d8d4f34093d4a6e8c4bb","message":"Prepare-1.2.0","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 28 Jun 2017 23:00:21 +0200"},{"sha":"d214df776d8a9f9334fbe8bc4bd780e8f469ab7e","message":"Add-link-to-StackOverflow","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 28 Jun 2017 21:59:47 +0200"},{"sha":"1becc8078aefedd9b62599a70f5e748f98f15a3c","message":"Add-link-to-StackOverflow-to-README","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 28 Jun 2017 21:59:04 +0200"},{"sha":"1b00e07f54059ceed239482b1974e4eebb8ec175","message":"Merge-pull-request-799-from-diegohaz-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 28 Jun 2017 21:56:39 +0200"},{"sha":"d8a2120a69ea7a2098588a40a9e066a03114a0cd","message":"JSX-highlighting-on-README.md","author":{"name":"Haz","email":"hazdiego@gmail.com"},"date":"Wed, 28 Jun 2017 14:09:58 -0300"},{"sha":"f33277be2d60b0af56eb68b35b81712d8877fca2","message":"Merge-pull-request-798-from-marmelab-custom_validator_messages","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 28 Jun 2017 18:24:09 +0200"},{"sha":"6b693f3c80d91eba794c50dc25a2f2949bb9bb10","message":"Merge-branch-master-into-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 28 Jun 2017 18:20:06 +0200"},{"sha":"e37472e270013ff26939ee293625568bf88c7b55","message":"Add-ability-to-override-validator-error-messages","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 28 Jun 2017 17:13:32 +0200"},{"sha":"1fada97ab8e8100d12b241462d4e2813458eeb22","message":"Merge-pull-request-797-from-mtakayuki-deep-paths","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 28 Jun 2017 17:01:43 +0200"},{"sha":"ff5657a67dc28a04666214ad2e5641f160cf3099","message":"Handle-deep-paths-for-optionText-and-optionValue","author":{"name":"Takayuki Maeda","email":"mtakayuki1209@gmail.com"},"date":"Wed, 28 Jun 2017 23:07:39 +0900"},{"sha":"9369847733b04f994f0e846f5eacf2300c9273b9","message":"Merge-pull-request-742-from-marmelab-simpleshowlayout_styles","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 28 Jun 2017 15:26:16 +0200"},{"sha":"0ddc32e385efb72de42912214a9b7452e19db34f","message":"Merge-pull-request-692-from-wesley6j-redirect_path_option_after_data_change_success","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 27 Jun 2017 16:27:58 +0200"},{"sha":"be380d8ab4c65514c3ad3651e892e7107ac2974e","message":"Finnishing-touches","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 27 Jun 2017 16:08:57 +0200"},{"sha":"8205b626b336b96208e99c5f93364dc00d9ca94d","message":"Fix-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 27 Jun 2017 15:53:03 +0200"},{"sha":"489dcfbd16ba54e31486f9b17c8d05db9480afaf","message":"Remove-the-need-to-pass-the-required-prop-down-to-the-Toolbar","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 27 Jun 2017 15:21:42 +0200"},{"sha":"9139c35a6471cc8539cfff87416f692a93c65c51","message":"Avoid-rerendering-caused-by-new-function-literal-passed-as-prop","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 27 Jun 2017 10:22:35 +0200"},{"sha":"5dc35090af10bd7aa52ae6a0dbd91c5f8b56af26","message":"Change-submit-method-names-to-avoid-confusion","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 27 Jun 2017 09:11:47 +0200"},{"sha":"a90df9dd6be5146c0fbad1337acbd313b2a4b08f","message":"Remove-useless-default-form-submit-action","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 27 Jun 2017 08:48:35 +0200"},{"sha":"cf1e7bcd487473b0b7cb8e08513d0de47f9372e7","message":"Add-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 27 Jun 2017 00:37:10 +0200"},{"sha":"ac63c572e8496d690203156c9003965511eb5759","message":"Allow-redirection-change-set-from-form","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 26 Jun 2017 23:49:08 +0200"},{"sha":"b3c9e1556efca4ee8f1ed6b9eefefa0c3a27a5a6","message":"rename-submitWithRedirect-to-onSubmitWithRedirect","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Wed, 21 Jun 2017 14:29:48 -0300"},{"sha":"b9a3503af381adc0709f6b4710033eedacf61737","message":"compose-submitWithRedirect-from-handleSubmit-and-onSubmit","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Wed, 21 Jun 2017 12:31:57 -0300"},{"sha":"a96df9bfce6174d68061e50f78f03bc074b956b8","message":"update-saving-proptypes","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Mon, 19 Jun 2017 10:15:51 -0300"},{"sha":"167e572809b5116ed1c106f862971f7e27d16149","message":"save-button-that-triggers-form-submit-spins-during-saving-other-save-buttons-don-t","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Sun, 11 Jun 2017 14:17:04 -0300"},{"sha":"b30c10440dbec328c0c60acbe1c6d53c01970395","message":"example-secondary-button-should-appear-different","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Sun, 11 Jun 2017 13:45:53 -0300"},{"sha":"2bc4fdd9f476369ddb99ed32ae04e6bb42718849","message":"test","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Fri, 9 Jun 2017 16:05:27 -0300"},{"sha":"9b4e477b3a28ce9e973984693b552c482df29f1f","message":"SaveButton-should-respect-custom-props","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Fri, 9 Jun 2017 16:04:42 -0300"},{"sha":"4b979ef0921ec663fc0fcb53d0d8b2aab2c8a9f5","message":"clean-up","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Fri, 9 Jun 2017 16:03:27 -0300"},{"sha":"d8b714a35846cded358b9b34f56e67eeb81c5021","message":"example","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Sat, 3 Jun 2017 22:33:30 -0300"},{"sha":"d553727be2242dd7c6d0f09e6fe74e3dc5c04131","message":"save-button-always-handle-submit-explictly-using-handleSubmit-and-onSubmit","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Sat, 3 Jun 2017 22:25:33 -0300"},{"sha":"45665de4943c7e202c0af6ebe3a57b8ad8ecb490","message":"pass-handleSubmit-and-onSubmit-from-form-to-toolbar-then-to-save-button","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Sat, 3 Jun 2017 22:04:16 -0300"},{"sha":"80a62b95d9d553d1172cee8f3a75f3043643dcfb","message":"handleSubmit-accepts-redirect-as-second-argument","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Sat, 3 Jun 2017 21:14:16 -0300"},{"sha":"162232773250cbe241c9ea694debd010de7b2204","message":"keep-the-current-redirect-defaults","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Mon, 29 May 2017 17:18:17 -0300"},{"sha":"33c9aed23c6e4611988b52c292fea36f2b21c0bd","message":"rename-redirectTo-to-getRedirectRoute","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Mon, 29 May 2017 17:07:43 -0300"},{"sha":"74da0b1e8265e09cf2f03e335cbfa0aa15699eaa","message":"If-afterSuccess-prop-is-empty-redirect-to-an-existing-page-automatically","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Tue, 23 May 2017 12:52:48 -0300"},{"sha":"263e774650302120395058eeeff6536adcdd7043","message":"afterSuccess-prop-for-Create-and-Edit","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Tue, 23 May 2017 12:31:55 -0300"},{"sha":"0578e69b8ff7a0ec0154a2158728f3eb127cb131","message":"Merge-pull-request-795-from-marmelab-custom-rest-clients","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 26 Jun 2017 19:53:49 +0200"},{"sha":"4bfa4278a74657177b275e841864266b62a58f83","message":"Reformat-custom-REST-client-list-for-better-readability","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 26 Jun 2017 18:28:55 +0200"},{"sha":"ad2b3eeb771267fb499836efae16dda762cd429b","message":"Merge-pull-request-794-from-SidFerreira-aor-firebase-client","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 26 Jun 2017 18:19:07 +0200"},{"sha":"3a7d3f81b564fe84bca7135fa23b254568672aac","message":"Adds-aor-firebase-client","author":{"name":"Sid Ferreira","email":"sid@ferreiraz.com.br"},"date":"Mon, 26 Jun 2017 13:17:51 -0300"},{"sha":"9a67494cd640f2af194fcafe9d67e6c6ba739f27","message":"Merge-pull-request-789-from-marmelab-fix_reference_input_filter","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 26 Jun 2017 18:11:02 +0200"},{"sha":"44b9253f27160db49a2f3f0181a93edf75799fa9","message":"Prepare-v1.1.2","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 26 Jun 2017 16:35:24 +0200"},{"sha":"0413bd45231ffb4e8e9182a384ee6f7c6835e773","message":"Fix-Yarn-command-line-utility-name","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 26 Jun 2017 12:29:42 +0200"},{"sha":"9a47a7116519b380f6d56878f67a9400c29e8378","message":"Merge-pull-request-791-from-calebhaye-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Sat, 24 Jun 2017 09:07:53 +0200"},{"sha":"d43ef3bb3ce411a971df42cdac513329c3501168","message":"Fix-a-typo-in-tutorial","author":{"name":"Caleb Adam Haye","email":"caleb@fire.coop"},"date":"Fri, 23 Jun 2017 15:33:27 -0700"},{"sha":"b1160d83a426d3065cef2b78d999e61214a1ca1a","message":"RFR-Fix-ReferenceInput-filter","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 23 Jun 2017 09:32:41 +0200"},{"sha":"77116448a854f97b1ed071c3b61ea3c45ccdbb80","message":"Merge-pull-request-782-from-marmelab-fix_sidebar_mobile","author":{"name":"JulienDemangeon","email":"julien@demangeon.fr"},"date":"Fri, 23 Jun 2017 09:19:45 +0200"},{"sha":"07565a957b3b64680d868c2cf3a25c6df03910d1","message":"Merge-pull-request-783-from-ferhatelmas-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 21 Jun 2017 23:01:25 +0200"},{"sha":"e43fa9aaca5ecf6cc0dd8d49f73c94b7ef8154d6","message":"Merge-pull-request-784-from-KamilDzierbicki-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 21 Jun 2017 23:00:03 +0200"},{"sha":"1613d96f89c142dc041a2b62619ca600e236a221","message":"Fix-a-typo-in-tutorial","author":{"name":"ferhat elmas","email":"elmas.ferhat@gmail.com"},"date":"Wed, 21 Jun 2017 20:30:24 +0200"},{"sha":"9a1002e3834ca5c1f59c7a1fb0a44f1a9d4ddc4d","message":"add-polish-language-to-list","author":{"name":"Kamil Dzierbicki","email":"dzierbicki.kamil@outlook.com"},"date":"Wed, 21 Jun 2017 20:30:10 +0200"},{"sha":"631bf1a22fe2dbe0245774fcdd8c8d15825fc548","message":"RFR-Fix-mobile-menu-unwanted-effects","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 21 Jun 2017 17:06:25 +0200"},{"sha":"e3c23850e5c415dcc33b2e43e6c1ce2c8190f09f","message":"Merge-pull-request-777-from-marmelab-action-types-prefix","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 21 Jun 2017 16:48:16 +0200"},{"sha":"05e66775314262a96693e31b823908315ab85913","message":"Merge-pull-request-781-from-marmelab-show_refresh","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 21 Jun 2017 16:46:56 +0200"},{"sha":"e3ab8e953aa41d926ded14f438026009fff1f615","message":"Merge-pull-request-780-from-marmelab-show_translate_to_children","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 21 Jun 2017 16:45:18 +0200"},{"sha":"b5dff4814e90b4ab57dddf1908b9006501a8b4e6","message":"RFR-Show-has-a-refresh-action-like-Edit","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 21 Jun 2017 15:47:50 +0200"},{"sha":"4e34e0843c651cd3ea65b09eae07514471b5e82c","message":"RFR-Show-now-passes-translate-to-its-children","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 21 Jun 2017 15:41:26 +0200"},{"sha":"13c52bab374675aa082e2c906bc5b18d19e89c21","message":"Merge-pull-request-756-from-cleany-fix_marmelab_754","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 21 Jun 2017 15:33:02 +0200"},{"sha":"22200f17249fbb0bf2d5c995b08a958431237b8b","message":"Merge-pull-request-778-from-marmelab-fix_SelectArrayInput_defaultvalue","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 21 Jun 2017 15:02:56 +0200"},{"sha":"3891a1de3f52ce9ce6921ecd10eaef6a6a0e12a2","message":"remove-package-lock.json","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 21 Jun 2017 14:57:09 +0200"},{"sha":"3d752bcf2d4d720887a649060b4a0409e9d6e2db","message":"RFR-Fix-SelectArrayInput-default-value-for-filters","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 21 Jun 2017 14:55:55 +0200"},{"sha":"501eca98d3ac0ff253cd5cb21abd98b9c6c0b04b","message":"prefix-aor-actions-with-AOR","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 21 Jun 2017 12:29:41 +0200"},{"sha":"aa476fc2e88de3955ce875f0d2dfbe08500e96ab","message":"Merge-pull-request-762-from-wesley6j-fix_example_tags_do_not_support_custom_value","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 21 Jun 2017 10:11:08 +0200"},{"sha":"ab5bdae55fde8a528f8338688ec0050062289f6a","message":"Merge-pull-request-776-from-liverbool-master","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 20 Jun 2017 23:16:28 +0200"},{"sha":"f270c3b6527f2ceac213fcc23d7cc4e85894659c","message":"Add-Thai-Translations","author":{"name":"Ishmael๛","email":"nukboon@gmail.com"},"date":"Wed, 21 Jun 2017 04:09:50 +0700"},{"sha":"aea87d755d6e1079b1324a7507a5c5df34ec879d","message":"Merge-pull-request-772-from-thiagoterleski-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 19 Jun 2017 23:39:43 +0200"},{"sha":"3df60169e18a96583f56007fbbe81be5b2b8bda2","message":"Fix-duplicate-propType-resource","author":{"name":"Thiago Terleski","email":"thiagoterleski@gmail.com"},"date":"Mon, 19 Jun 2017 15:44:47 -0300"},{"sha":"8589867c900a41a6cd1630f317ba871b870c84e4","message":"Merge-pull-request-761-from-wesley6j-fix_reference_many_field_sort_delayed","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 16 Jun 2017 19:46:46 +0200"},{"sha":"6e4171fa74856ca8b18833c1962afe36b284484e","message":"Because-example-does-not-support-custom-tag-creating-new-tag-by-pressing-enter-should-be-disabled","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Fri, 16 Jun 2017 14:04:59 -0300"},{"sha":"c87d0bfb741134867b4d0af6393e978719f175fc","message":"fix-delayed-sorting","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Fri, 16 Jun 2017 13:55:45 -0300"},{"sha":"0083eda7ac30842e8722ed8a67b86fa0f417e856","message":"list-use-autoprefix-for-list-header-styles","author":{"name":"Sébastien Boulle","email":"sebastien@cleany.fr"},"date":"Thu, 15 Jun 2017 15:40:52 +0200"},{"sha":"af1218d662ad080f6df61a0de74a1966acbbc657","message":"list-use-flexbox-for-all-the-header-items","author":{"name":"Sébastien Boulle","email":"sebastien@cleany.fr"},"date":"Tue, 13 Jun 2017 12:00:54 +0200"},{"sha":"e3970406802ceee4d9692915ba1fd54b206a88b7","message":"Merge-pull-request-752-from-wesley6j-add_sort_to_reference_many_field","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 12 Jun 2017 15:25:00 +0200"},{"sha":"570290ec1cf447ec388b8cb342ac86747ba6dbb7","message":"setSort-in-ReferenceManyField","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Sun, 11 Jun 2017 19:18:39 -0300"},{"sha":"266f6e8c8b3ee3d00c7a30462d2c479e9d76d81a","message":"Document-the-style-prop","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 9 Jun 2017 14:00:38 +0200"},{"sha":"7f11fc57635395cc81e15e5e548e1c5073da7115","message":"RFR-Allow-to-override-SimpleShowLayout-container-styles","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Fri, 9 Jun 2017 09:25:41 +0200"},{"sha":"0c59fbea45edb5a4f4ca7cf77bec66708ce30ec8","message":"Merge-branch-master-into-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 9 Jun 2017 12:00:53 +0200"},{"sha":"a7ec45eb0d406eb4123f29ab5c46230ffb9fb47a","message":"Merge-pull-request-743-from-iamsimakov-next","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 9 Jun 2017 11:09:13 +0200"},{"sha":"98f717b7d13f37bdd79de9c47da50700e12ffd62","message":"Pass-options-to-BooleanInput-for-Toggle","author":{"name":"Alexey Simakov","email":"a.simakov@inventos.ru"},"date":"Tue, 6 Jun 2017 18:51:59 +0300"},{"sha":"7091b6ce5f1efd6e945d979366b9116db164b124","message":"Prepare-changelog-for-v1.1.1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 9 Jun 2017 08:13:10 +0200"},{"sha":"e3556eeb20bd425fd3ae946ceb32ad4b98243b38","message":"Fix-warning-in-TabbedShowLayout","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 8 Jun 2017 17:12:31 +0200"},{"sha":"931f74b4ad998b3433980ee2897390d7c5901303","message":"Merge-pull-request-741-from-marmelab-custom_history","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 8 Jun 2017 16:53:11 +0200"},{"sha":"a594661effcf47ed676192fdac950f1ce7e86011","message":"Do-not-use-browser-history-in-example","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 8 Jun 2017 16:46:27 +0200"},{"sha":"e7b9bdfe4a68a5dbf5c9d29e4e5dcf65d2ff538c","message":"Allow-to-use-custom-histiry-object","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 8 Jun 2017 16:43:32 +0200"},{"sha":"1cc44d9a2cf8900e722c22518097300c3192ead0","message":"Merge-pull-request-739-from-marmelab-split_admin_resource","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 8 Jun 2017 11:12:11 +0200"},{"sha":"65ddd0786233552465e1898e0d85fb6e5a6ba3de","message":"Split-Admin-and-Resource-docs-for-better-readability","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 8 Jun 2017 09:41:30 +0200"},{"sha":"4a425df731d249b19a02dc0ec3017a0c735c2212","message":"Merge-pull-request-569-from-remi13131-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 8 Jun 2017 09:03:11 +0200"},{"sha":"f34148cbfcbfae898304cd662286868c70380d07","message":"Merge-pull-request-736-from-dervos-fix-e2e","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 8 Jun 2017 08:59:00 +0200"},{"sha":"a804ee39744e4d0a341bc91c75babaca7acff434","message":"Merge-pull-request-729-from-wesley6j-fix_disabled_input_defaultValue_not_displayed","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 8 Jun 2017 08:46:24 +0200"},{"sha":"fcf0de6fc7bcbebf68fabf5e96698e7f77917a5b","message":"Merge-pull-request-721-from-wesley6j-reference_array_field_empty_references_situation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 8 Jun 2017 08:42:46 +0200"},{"sha":"077301eda1997ae6810957a1dbac01eeaacbd43c","message":"fixed-malformed-urls","author":{"name":"Reinhard van Apeldoorn","email":"reinhard@dervos.nl"},"date":"Wed, 7 Jun 2017 15:31:19 +0200"},{"sha":"4fa73f7266ffbeea4e8e8ed18ed4e43cdefec1d4","message":"Added-sleep-to-wait-until-the-filter-value-is-applied","author":{"name":"Reinhard van Apeldoorn","email":"reinhard@dervos.nl"},"date":"Wed, 7 Jun 2017 15:19:12 +0200"},{"sha":"79d678f97ac515f3eb53c3d89e4abc3816109546","message":"downgraded-extract-text-webpack-plugin-for-webpack1","author":{"name":"Reinhard van Apeldoorn","email":"reinhard@dervos.nl"},"date":"Wed, 7 Jun 2017 15:17:37 +0200"},{"sha":"6115380d73136430f1d53bb94e105c5f0af82256","message":"Merge-pull-request-730-from-marmelab-fix-selectarrayinput-proptypes","author":{"name":"JulienDemangeon","email":"julien@demangeon.fr"},"date":"Mon, 5 Jun 2017 14:17:53 +0200"},{"sha":"050ea0265342514cd81ed97b6ebde6f71d81769c","message":"Fix-SelectArrayInput-prop-types","author":{"name":"Florian FERBACH","email":"florian@putsch.io"},"date":"Mon, 5 Jun 2017 10:28:20 +0200"},{"sha":"0c437f86bb38685253b9f96a37f8955305e4df7c","message":"DisabledInput-takes-value-from-redux-form","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Sun, 4 Jun 2017 09:46:12 -0300"},{"sha":"e1017b4352ce346550c922cb659beafbde83bc0a","message":"less-re-render-with-const-empty-array","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Fri, 2 Jun 2017 16:57:10 -0300"},{"sha":"52892b21bc0fc6fba049d2ba17d5d740e6bd3121","message":"Restoring-CreateEdit.md-from-next-branch-no-modification-needed-in-the-end","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Fri, 2 Jun 2017 14:18:09 +0200"},{"sha":"47deefb5c1042c131c2f8d9ecfd0ea4c0c5367a1","message":"Working-version-with-two-components-instead-of-1-as-requested","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Fri, 2 Jun 2017 12:21:29 +0200"},{"sha":"364872b9873c315e3ef8eb4be0039b31bbe7f920","message":"Resolving-merge-conflict-in-posts.js","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Fri, 2 Jun 2017 10:37:14 +0200"},{"sha":"05e0c3a2705df776bae16e03396aefbfbf7b7eca","message":"Make-doc-TOC-easier-to-scan","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 2 Jun 2017 10:10:52 +0200"},{"sha":"7f1614b5bfea9d79ce6b2d0f8d4d3be2281b7e10","message":"Merge-pull-request-693-from-wesley6j-fix_date_input_inconsistent_value","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 1 Jun 2017 18:58:30 +0200"},{"sha":"34d006c264dfc13d78690e77f408b68b532a3236","message":"Update-DateInput.js","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 1 Jun 2017 18:58:12 +0200"},{"sha":"d5b564e3fd87d43c1d5d884c8b5b0cda3c4e37df","message":"Merge-pull-request-705-from-wesley6j-select_input_value_switch_between_null_and_false","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 1 Jun 2017 17:39:35 +0200"},{"sha":"0db61a0e13213b288480493f8d69d94b02b968e0","message":"Add-comment-to-explain-the-code","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 1 Jun 2017 17:39:07 +0200"},{"sha":"c6242513878b9408b02bbfa1c99ba9da0b5c9c2a","message":"Merge-branch-next-of-https-github.com-marmelab-admin-on-rest-into-next","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Thu, 1 Jun 2017 11:57:30 +0200"},{"sha":"97bb6cf1962176fa59902b0f1406d632527bfcdb","message":"if-backend-is-not-kind-enough-to-provide-empty-array","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Wed, 31 May 2017 14:03:52 -0300"},{"sha":"c7dd9f7d01d073dc4a8a8078cdae1f830bdb5077","message":"Merge-pull-request-719-from-dervos-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 31 May 2017 18:01:52 +0200"},{"sha":"b3dc81692178a04a548eb86db5c36b1720960f37","message":"Merge-pull-request-718-from-marmelab-documentation_show","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 31 May 2017 16:38:06 +0200"},{"sha":"8d11f943cd3bb9d1f1f166c9d4c754139f9a76a7","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 31 May 2017 16:36:38 +0200"},{"sha":"030ae82ef2df3ff6c895d57ddcce020a0f662746","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 31 May 2017 16:27:38 +0200"},{"sha":"096d7a5c5d336697217b2557afc6b558b5c71713","message":"bumped-version-of-redux-saga-and-removed-useless-yield-all-put","author":{"name":"Reinhard van Apeldoorn","email":"reinhard@dervos.nl"},"date":"Wed, 31 May 2017 15:48:31 +0200"},{"sha":"a6f1f24cec57c66681b68f51449c58f4aa32182b","message":"added-the-all-import-from-redux-saga","author":{"name":"Reinhard van Apeldoorn","email":"reinhard@dervos.nl"},"date":"Wed, 31 May 2017 15:23:06 +0200"},{"sha":"ca65104a4be3130644996f83a523a3cd1fab55ca","message":"Edited-the-action-doc","author":{"name":"Reinhard van Apeldoorn","email":"reinhard@dervos.nl"},"date":"Wed, 31 May 2017 15:19:00 +0200"},{"sha":"540795d764a304428c35ca3f1221219b79ae446b","message":"added-all-.effects-to-yield-.effects","author":{"name":"Reinhard van Apeldoorn","email":"reinhard@dervos.nl"},"date":"Wed, 31 May 2017 14:56:30 +0200"},{"sha":"331759550d2a854c1576b3d55fc0e306ebd2f1cb","message":"Support-null-and-false-coexist-in-options","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Sun, 28 May 2017 11:11:00 -0300"},{"sha":"bb6a12948dda51a33b72e0e02852b0dfafac33e9","message":"test-e2e","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Sat, 27 May 2017 13:55:31 -0300"},{"sha":"faf76594afd30c670f8145c0ef6f139609eb485b","message":"pass-the-test","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Wed, 24 May 2017 16:23:49 -0300"},{"sha":"76e093c9299a8b5eb036a31e3939ca3a23e38580","message":"improve","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Wed, 24 May 2017 15:43:52 -0300"},{"sha":"c1fe531cbf87309df83fa117b81b981ad637a591","message":"Fix-a-redux-form-onBlur-related-issue","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Tue, 23 May 2017 16:34:14 -0300"},{"sha":"42ae3d5516899cb5dbd88a4288a3543bae477f11","message":"Added-images","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 31 May 2017 10:03:04 +0200"},{"sha":"09359e3156fe5dc9bfe30833fe889d7ccf4f09ac","message":"WIP-Documentation-Show","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 31 May 2017 09:43:18 +0200"},{"sha":"b5eed7daf04a71363006a675e144547862ccf281","message":"Merge-pull-request-717-from-marmelab-file_input_reference","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 31 May 2017 09:27:28 +0200"},{"sha":"c89e643927935bea2a413b58dcccea6332e7be99","message":"RFR-Documentation-fixes-for-FileInput","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 31 May 2017 09:22:18 +0200"},{"sha":"5fbfcce5fb6f47fe56c96f50b7f0826a3739fb76","message":"Merge-pull-request-716-from-marmelab-documentation_translations","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Wed, 31 May 2017 09:17:21 +0200"},{"sha":"9fd166de28d23ca8f90de7b42da1603362f534b1","message":"RFR-Remove-translations-list-from-Ecosystem","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 31 May 2017 09:05:44 +0200"},{"sha":"086793a49cbfa23528153d5a4b5ba9853f1a460a","message":"Merge-pull-request-715-from-martjanz-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 31 May 2017 08:13:19 +0200"},{"sha":"29bd0b9f1669b7e491d3f26a00e61268925761db","message":"Minor-fixes-on-external-link-and-method-name","author":{"name":"Martín Anzorena","email":"martin.anzorena@gmail.com"},"date":"Tue, 30 May 2017 21:26:19 -0300"},{"sha":"310e42e5e92a19ee40d782e0a41f7d6e57c4c8e6","message":"Merge-pull-request-712-from-marmelab-default_asterisk","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 30 May 2017 17:38:10 +0200"},{"sha":"a1659283609e481710289c17de2e07fc2c24b67e","message":"Merge-pull-request-684-from-marmelab-file-inputs","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 30 May 2017 17:31:35 +0200"},{"sha":"86c2ceec741f989ba903bb6532729cb01f89cf31","message":"Add-support-for-required-label-to-all-input-components","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 30 May 2017 17:27:13 +0200"},{"sha":"fe30d0a4067be124c4ad7d88e8c2ab3a2a737b1b","message":"Add-unit-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 30 May 2017 17:19:05 +0200"},{"sha":"4f6d46c01b2db4ad13f55171042666b92f379c85","message":"Show-asterisk-for-required-TextInput","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 30 May 2017 11:30:37 +0200"},{"sha":"99b610cd67b7a97f98f4a44e73f990b804b429b0","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 30 May 2017 10:48:02 +0200"},{"sha":"6c09b2dfc788c314d4f3f215b8dcdbf73a8e86af","message":"Merge-pull-request-711-from-marmelab-revert-659-fix_optimistic_rendering","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 29 May 2017 23:22:53 +0200"},{"sha":"ce361f8930bea07984cc2f4220e0779696d68297","message":"Remove-reverted-change","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 29 May 2017 23:17:55 +0200"},{"sha":"1fc5cc275aa21b38462b4cac798ebb5b416e5bc1","message":"Revert-RFR-Fix-list-optimistic-rendering","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 29 May 2017 23:14:56 +0200"},{"sha":"02a674f9f0a2a200e4efa8debe9683bbca7a6ea1","message":"Merge-pull-request-710-from-marmelab-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 29 May 2017 22:58:17 +0200"},{"sha":"dc48d8cd279b07a9e2bae46be9364ca258e79a59","message":"Add-changelog-for-1.1.0","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 29 May 2017 22:45:40 +0200"},{"sha":"f4e179481139492e91ab3d366e74d6f7a8308121","message":"Fix-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 29 May 2017 21:54:08 +0200"},{"sha":"1a91bb78b4b8f070a6fb16b1d2497e849b4686cb","message":"Merge-branch-master-into-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 29 May 2017 21:43:30 +0200"},{"sha":"bee06c0b74e485a588963fe4134b1b288d4403f3","message":"Merge-pull-request-696-from-marmelab-e2e_stabilization","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 29 May 2017 18:37:43 +0200"},{"sha":"a4083d2b1ac85556e8aab96ea8edbcfe972a270b","message":"Merge-pull-request-699-from-StefanWallin-patch-1","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 29 May 2017 09:21:17 +0200"},{"sha":"f846d48af044194ce61a930a8d053bf30cbef243","message":"Update-Ecosystem.md-aswell","author":{"name":"Stefan Wallin","email":"github@stefan-wallin.se"},"date":"Fri, 26 May 2017 11:46:06 +0200"},{"sha":"81eb89e6b698209b1f58fcfdffc002281a7624c8","message":"Add-Swedish-translations","author":{"name":"Stefan Wallin","email":"github@stefan-wallin.se"},"date":"Fri, 26 May 2017 08:10:06 +0200"},{"sha":"0468476bff5d4d4b817c2f86dd32c21f5ffaf3ca","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 24 May 2017 16:36:21 +0200"},{"sha":"5638a43f19b0dc6cc0e46257bdbec624cffd3e84","message":"Ensure-we-also-catch-when-app-loader-disapearance-before-checking-its-stalness","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 24 May 2017 15:31:10 +0200"},{"sha":"6cc3759e09861f149786485c306fc0437c8fe09f","message":"fix-typo","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 24 May 2017 14:47:11 +0200"},{"sha":"ae517906ecc52ac63226985da8f14bb5b0a2c86d","message":"Increase-time-out-on-loaded-page-detection.-Use-webdriver-conditions-to-check-for-url-changes","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 24 May 2017 14:38:13 +0200"},{"sha":"b33e195207a6e2ca7dfe9cb18328f94c5ef189d8","message":"RFR-FileInput","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 24 May 2017 11:27:16 +0200"},{"sha":"b4c896bdbbf642e8a18aca7b765412569a5c8cb2","message":"WIP-Stabilize-e2e-tests","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 24 May 2017 11:18:33 +0200"},{"sha":"fea3fd0bcbc35228b9949069c250ff312b6dc76c","message":"Merge-pull-request-694-from-wesley6j-fix_example_comment_typo_default_value","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 24 May 2017 09:15:28 +0200"},{"sha":"c4172a0de7f1cf290fae1821f7191d3f7d67e71a","message":"Merge-pull-request-659-from-marmelab-fix_optimistic_rendering","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 24 May 2017 09:12:35 +0200"},{"sha":"6254d6be71f9ad3a0b7c07596c3fc519d6ab4b64","message":"fix-defaultValue-typo","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Tue, 23 May 2017 16:45:15 -0300"},{"sha":"d08ac197167494e7aedbdd732e2de66c296f956e","message":"Try-to-make-list-of-components-display-into-one-single-screen","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 23 May 2017 08:59:19 +0200"},{"sha":"2fa1be802fc9d3a31ef6bc2e13bafdc00c01b29e","message":"Add-missing-components-to-reference","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 23 May 2017 08:57:12 +0200"},{"sha":"1f1962d77b4006b0a0c546a5ce1d54927775f78b","message":"Add-missing-component-in-reference-list","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 23 May 2017 08:47:09 +0200"},{"sha":"c085a4919bf1a0ef76d4cc0b8f57031c90d2efee","message":"Merge-pull-request-671-from-wesley6j-fix_show_edit_button_in_item_page","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 22 May 2017 09:50:24 +0200"},{"sha":"09f66ba83f5c4894331a093a9953b93532d89d60","message":"Merge-pull-request-687-from-wesley6j-add_elstyle_to_disabledinput","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 22 May 2017 09:25:12 +0200"},{"sha":"2a3393c5f4becd3334a50ec7b4d3ed760c75b17a","message":"Merge-pull-request-597-from-marmelab-reference_many_input","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 22 May 2017 09:13:48 +0200"},{"sha":"1d6fc35b95c70a864b2b4cc594b4e01b4ffaa5f7","message":"add-elStyle-to-DisabledInput","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Sun, 21 May 2017 16:46:02 -0300"},{"sha":"755f935304298ef917bfe327107a78c34176a619","message":"Fix-value-ordering-bug","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sun, 21 May 2017 08:17:55 +0200"},{"sha":"0075d3288f83c1a1bca000c051f0481276064953","message":"Avoid-mutating-state","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sun, 21 May 2017 07:32:37 +0200"},{"sha":"e67313373e4cff7f168582b5d8a3ff5e54c421cc","message":"Fix-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 20 May 2017 00:00:14 +0200"},{"sha":"006dba9fee5d4145edd747ced05737a15459b00a","message":"Fix-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 19 May 2017 19:37:38 +0200"},{"sha":"aad99fe8a1989216a3fec6629cd977d99b9bca9c","message":"Test-redraw-case","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 18 May 2017 09:05:27 +0200"},{"sha":"0ebc532af7757cdeb81a21cf78c3c9ea35e4265c","message":"Fix-first-render-does-not-show-optionText","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 18 May 2017 08:57:43 +0200"},{"sha":"bba9b1abfc2cb8703e87082fa891583f61be613c","message":"Add-unit-tests-for-SelectArrayInput","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 18 May 2017 08:33:19 +0200"},{"sha":"174c3e1d53a289f2c5ecf00c8962205811f7e698","message":"Add-unit-tests-for-ReferenceArrayInput-component","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 18 May 2017 07:59:12 +0200"},{"sha":"bf752c6cea0ab117d77633ab01b557a0dcb0b81a","message":"Typo-fix-s-component-component","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Fri, 28 Apr 2017 11:45:52 +0000"},{"sha":"df35a3dc601e13c8d3a6dffced036c3ccdf1d976","message":"Document-auto-translation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 25 Apr 2017 20:01:50 +0200"},{"sha":"01ba8a48c5866db184d33999210d76d9e510966e","message":"translate-choices-by-default","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 25 Apr 2017 19:53:00 +0200"},{"sha":"41233de1337f4846a983ec30edefc04114e2ede3","message":"Add-docs","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 25 Apr 2017 18:59:31 +0200"},{"sha":"c1119551f43feb6a3ac8d232983c99f9ca7bee2d","message":"Refactor-getPossibleReferences-to-work-for-scalar-and-array-values","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 25 Apr 2017 17:56:15 +0200"},{"sha":"bde81d4851a6e7e2ab0b753f7e3c76bdddb17d45","message":"Update-dependency-to-the-latest-version","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 25 Apr 2017 17:35:22 +0200"},{"sha":"04430688214c36be41b298090827ec23dbcc3cdb","message":"Coding-standardsn-rewrite-phpDoc-and-selectors","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 25 Apr 2017 17:32:23 +0200"},{"sha":"20ed653e9176e9084e8d626e6acdca1fa2793089","message":"Use-new-input-in-example","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 25 Apr 2017 17:31:57 +0200"},{"sha":"85a2ce04afc6c369ae68bf02b33f71c1ec6eab5d","message":"Rename-components","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 25 Apr 2017 13:59:49 +0200"},{"sha":"bf6168e7d4a1ff24c092643ada44fd8199e0e472","message":"Using-prop-types-package-for-proptypes","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 25 Apr 2017 13:56:47 +0200"},{"sha":"4d9a0cdd2a21149a86aa6473266bfc612340e927","message":"Add-ReferenceManyInput","author":{"name":"Nguyễn Kim Kha","email":"nkimkha@gmail.com"},"date":"Tue, 25 Apr 2017 13:48:54 +0200"},{"sha":"5414be20190bbc7fa31a0c06188bfe6f0e025752","message":"Merge-pull-request-596-from-leesei-429","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 19 May 2017 23:19:43 +0200"},{"sha":"ebdbff33a3571ca3d6ac6655309122aae7e3ec3e","message":"Rewrite-docs-for-more-clarity","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 19 May 2017 23:16:48 +0200"},{"sha":"12e345ffbed237e5f7164cba9e9705a2ce898b86","message":"rename-referenceActions-to-accumulateActions","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 19 May 2017 21:47:58 +0200"},{"sha":"af345b81d83164be7a2c45d1ee6f69a0597672fb","message":"Make-accumulate-saga-generic","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 19 May 2017 21:44:04 +0200"},{"sha":"9f6032037c96189441c9fb4715642c95cd04859a","message":"rename-CRUD_GET_ONE_REFERENCE-to-CRUD_GET_MANY_ACCUMULATE","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 19 May 2017 21:30:23 +0200"},{"sha":"68a13b13ec2b6ca7887d538da66afda8165626d2","message":"rename-CRUD_DEBOUNCED_GET_MANY-to-CRUD_GET_MANY_ACCUMULATE","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 19 May 2017 21:11:16 +0200"},{"sha":"80fbb0aa4571788d1f5f2fa38b1b55d7c4d68ade","message":"Fix-fetching-of-simple-references","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 19 May 2017 20:27:51 +0200"},{"sha":"214479c75c80946cef0055b5b63d39764fc03bef","message":"Add-example-in-post-list","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 19 May 2017 20:27:37 +0200"},{"sha":"345caf0da8b7b2427b0cd61b814a488b259fae99","message":"add-docs-TOC","author":{"name":"leesei","email":"leesei@gmail.com"},"date":"Wed, 26 Apr 2017 23:06:48 +0800"},{"sha":"c582c9ceb091aae89e4850e0c355a4c6475b6c96","message":"use-a-single-accumulate","author":{"name":"leesei","email":"leesei@gmail.com"},"date":"Wed, 26 Apr 2017 22:11:45 +0800"},{"sha":"c8abe0ea6297ba6704f9cc815a5e9f0881afbd65","message":"feat-add-ReferenceArrayField","author":{"name":"leesei","email":"leesei@gmail.com"},"date":"Tue, 25 Apr 2017 14:39:30 +0800"},{"sha":"1600240d3ee5d86267fc6d31818e155ecb556333","message":"Merge-pull-request-534-from-jkrnak-submit-on-enter","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 17 May 2017 10:59:05 +0200"},{"sha":"9d99ddeb73eafd1b0ed8ebf9c2f4ac1a29538e5d","message":"Merge-pull-request-676-from-bodo22-feature-reset-state-on-logout","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 17 May 2017 10:50:59 +0200"},{"sha":"c6b6f65a33e467b6f975ae4d8ea906e96f0b3599","message":"Refactor-clean-up","author":{"name":"Wilhelm Herbrich","email":"herbrich@sensape.com"},"date":"Wed, 17 May 2017 09:49:46 +0200"},{"sha":"ce10eaca628ac325d92488177fe89f05687a1275","message":"Adding-comment-to-code-to-make-savebutton-submission-logic-more-understandable","author":{"name":"Janos Krnak","email":"janos.krnak@gmail.com"},"date":"Wed, 17 May 2017 06:55:57 +0100"},{"sha":"2e83a7092c411c11f15e5f4bd25a60664c3e3e63","message":"Extracting-submit-logic-from-component-to-redux-connect","author":{"name":"Janos Krnak","email":"janos.krnak@gmail.com"},"date":"Tue, 16 May 2017 22:11:20 +0100"},{"sha":"3175f53f9b54ca349c81e98487adb827243fefe8","message":"Correcting-wording-of-test-cases","author":{"name":"Janos Krnak","email":"janos.krnak@gmail.com"},"date":"Sat, 15 Apr 2017 11:46:24 +0100"},{"sha":"7ece0aff7434d0bf4b7c0fde09ca988dbe17a9f0","message":"Moving-definition-of-default-value-for-submitOnEnter-to-forms","author":{"name":"Janos Krnak","email":"janos.krnak@gmail.com"},"date":"Sat, 15 Apr 2017 11:40:10 +0100"},{"sha":"ae86a8f90e5c34513f07ace4cdea2e88e5421c42","message":"Removing-simple-mock-as-sinon-is-already-included","author":{"name":"Janos Krnak","email":"janos.krnak@gmail.com"},"date":"Thu, 30 Mar 2017 21:48:19 +0100"},{"sha":"efab6aed1b949c0da511454096508b59fdb93593","message":"Fixing-tests","author":{"name":"Janos Krnak","email":"janos.krnak@gmail.com"},"date":"Thu, 30 Mar 2017 17:39:31 +0100"},{"sha":"f38040064605bf5bbcb9f5ed26a7f45820db3be0","message":"Adding-switch-to-submit-on-enter-behaviour-to-SimpleForm-and-TabbedForm","author":{"name":"Janos Krnak","email":"janos.krnak@gmail.com"},"date":"Thu, 30 Mar 2017 17:16:03 +0100"},{"sha":"9df182f963d60cd9b16e40201fac8ad334e3f613","message":"Add-reset-state-after-logout","author":{"name":"Wilhelm Herbrich","email":"herbrich@sensape.com"},"date":"Tue, 16 May 2017 16:45:56 +0200"},{"sha":"eb717a4bafa097a3ab925d9203f5309c89c1be3f","message":"Merge-pull-request-674-from-marmelab-deep_clean_filters","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 16 May 2017 11:54:17 +0200"},{"sha":"2cca157cabf077eb241a71081feaafe9a5914a53","message":"RFR-Clean-filters-when-using-deep-paths","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 May 2017 11:48:34 +0200"},{"sha":"dbdf2c1114e0f1f37f6d7422ee7cd75d399f98f9","message":"Merge-pull-request-673-from-marmelab-docs_ecosystem","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 16 May 2017 10:32:00 +0200"},{"sha":"83cf01298535bc472b7f4d7aaeff6e5effe5f8cb","message":"RFR-Documentation-Ecosystem","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 May 2017 10:19:25 +0200"},{"sha":"121c60ceca648542b29b7163fff872bb3e7cb752","message":"Merge-pull-request-672-from-marmelab-faq","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 16 May 2017 09:54:46 +0200"},{"sha":"e35c6e6aa0ba3520cc4513a3e2892fdc3e126eb6","message":"Clarify-primary-key-mapping","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 16 May 2017 09:17:00 +0200"},{"sha":"7db1cdeb47e16c081a321bd73466f5d1198fdb7d","message":"WIP-FAQ","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 May 2017 09:09:11 +0200"},{"sha":"12a43688d158c0ad131314e284eb43a7445a37ce","message":"fix-show-edit-button-in-edit-show-page","author":{"name":"Weijie JIN","email":"wesley6j@gmail.com"},"date":"Mon, 15 May 2017 14:02:52 -0300"},{"sha":"fcfbfce3422d61ef833bd146cc4c08bdc1a2db9d","message":"Add-v1.0.2-changelog","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 12 May 2017 14:37:22 +0200"},{"sha":"4487757928d7b01efe2de8c1d97a72a7a1f43fc0","message":"1.0.2","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 12 May 2017 14:24:01 +0200"},{"sha":"4ed2a76ff8acb2c9eeeff82988c414f72775db30","message":"Merge-pull-request-664-from-DjLeChuck-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 12 May 2017 12:36:20 +0200"},{"sha":"96ba408d026a1d7dd36a337c3246b61360dd1c7e","message":"Fix-typo","author":{"name":"Vivien DE BONA","email":"djlechuck@gmail.com"},"date":"Fri, 12 May 2017 12:17:23 +0200"},{"sha":"e7956868101b999226e47e7b19d1977c467c4d20","message":"Merge-pull-request-628-from-faviouz-faviouz-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 12 May 2017 11:07:21 +0200"},{"sha":"f260fb5cff873e503ca725d7b9b7654db47b5336","message":"Merge-pull-request-653-from-marmelab-fix_clearfilter","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 11 May 2017 17:36:44 +0200"},{"sha":"4b57ed72512b6edd78cf581644e2508c76854390","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Thu, 11 May 2017 17:24:54 +0200"},{"sha":"93ce2d1b26e4bbef674fb6184e77a5ee901d27fd","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Thu, 11 May 2017 14:48:40 +0200"},{"sha":"632ce3d30c0bdbcc00a9f9feb47ff5adf15897bb","message":"Revert-unwanted-changes","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Thu, 11 May 2017 14:36:03 +0200"},{"sha":"502521d80efc36a26774e5792508fd68b70e2886","message":"Merge-pull-request-658-from-marmelab-fix_sidebar_styles","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 11 May 2017 13:59:58 +0200"},{"sha":"d3c55124c9d7a019cb0faf6322b51f1ba3337af0","message":"WIP-Fix-list-optimistic-rendering","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Thu, 11 May 2017 11:50:08 +0200"},{"sha":"b08af935d34d956fd500dd5ddff7dfedbd2109ba","message":"RFR-Fix-sidebar-styles","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Thu, 11 May 2017 10:11:05 +0200"},{"sha":"4da505d84fb7ec1f627ea47602e65e1903456093","message":"better-tests","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 May 2017 18:54:38 +0200"},{"sha":"47daa434330afc80f04492ac78acfd3f9d5449db","message":"remove-only-in-tests","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 May 2017 18:46:52 +0200"},{"sha":"28c8a0cdc71d7e7d395389f4b706111551646a91","message":"Added-tests","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 May 2017 18:45:21 +0200"},{"sha":"18942cd7aaa0d848db4ebc5e90d281f3dc1328fe","message":"Merge-pull-request-647-from-marmelab-fix_reference_field_fetch_null","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 10 May 2017 18:23:20 +0200"},{"sha":"54d2e74b2703d3e02dc117b34c0513a45100718e","message":"Merge-pull-request-649-from-marmelab-auth_documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 10 May 2017 18:17:17 +0200"},{"sha":"8b3be1675b0f858460b171311c5d6efdc9c3603a","message":"RFR-Fix-clear-filter","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 May 2017 18:16:18 +0200"},{"sha":"68749c07d01f732a1f8f9743a1c53d09a4a3772a","message":"Merge-pull-request-646-from-marmelab-fix_filterform_typo","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 10 May 2017 18:16:01 +0200"},{"sha":"a525cf7034b9bba0abc5a5aefbdde14c10d3eb8b","message":"Merge-pull-request-651-from-marmelab-sidebar_styles","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 10 May 2017 18:15:09 +0200"},{"sha":"2e5a03525a1f7e300e70c3046d157a535a0b741e","message":"Use-correct-mui-theme-key-for-drawer-component","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 May 2017 14:11:48 +0200"},{"sha":"179c17e54298b890949cff3a0a799bab7641ec31","message":"RFR-Make-sidebar-themable","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 May 2017 14:00:43 +0200"},{"sha":"ef6684576061e2cbd1f489190096d898f719d86b","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 May 2017 13:49:43 +0200"},{"sha":"ad37b5d924848d074b928e0e2c3e9d27a2e931ff","message":"RFR-Added-example-about-using-auth-action-creators","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 May 2017 12:13:45 +0200"},{"sha":"845a0c50db2926751aa5dd4b5b127b8fe8fce795","message":"added-tests","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 May 2017 11:56:42 +0200"},{"sha":"5cf273aa6929f56f772fa903b4629f207e8c9fdc","message":"RFR-Fix-ReferenceField-should-not-fetch-null-values","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 May 2017 11:49:35 +0200"},{"sha":"b25c70a438153a35d0cd1bff53bf4ca621b38015","message":"RFR-Fix-FilterForm-typo","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 May 2017 11:13:08 +0200"},{"sha":"e056c675e6a7cd47af1913fda3ec9ce57edaedfc","message":"Merge-pull-request-644-from-marmelab-fix_edit","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 10 May 2017 10:53:40 +0200"},{"sha":"ca65e4c8f4ea205d6697e704bfb10df667e1616a","message":"updated-show-view-too","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 May 2017 10:45:01 +0200"},{"sha":"47ab5fbebc7746b698ff79cbaa30aec56b21e929","message":"Merge-pull-request-643-from-marmelab-fix_datefield_tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 10 May 2017 10:36:08 +0200"},{"sha":"d59b2f6affa47be65987a084d2194feb70bb9824","message":"RFR-Ensure-Edit-updates-when-fields-change","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 May 2017 10:13:34 +0200"},{"sha":"27b7fcae828b387f7abc5ddc88ecc28226fc98d3","message":"RFR-Ensure-DateField-tests-can-pass-on-all-systems","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 10 May 2017 10:02:05 +0200"},{"sha":"d81339cfa003f86b4f83b1c148a095df4845cb14","message":"Merge-pull-request-629-from-juanda99-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 9 May 2017 15:59:31 +0200"},{"sha":"fb774ef4daa0c17e07423d8f4ab4731b8f0edd46","message":"Update-README.md","author":{"name":"juanda","email":"juandacorreo@gmail.com"},"date":"Fri, 5 May 2017 23:01:56 +0200"},{"sha":"367df5f338fc11dce80e18e114f7c64510d412a5","message":"Merge-pull-request-622-from-SidFerreira-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 4 May 2017 17:03:12 +0200"},{"sha":"d469224b8ec23e58c1eee78e915a48b783ac4ffc","message":"Update-README.md","author":{"name":"juanda","email":"juandacorreo@gmail.com"},"date":"Thu, 4 May 2017 10:10:38 +0200"},{"sha":"4266e44d70eecead7454cbbc814de39a7f77ff08","message":"Fix-edge-case-in-RichTextField-when-string-is-falsey-value","author":{"name":"Fábio Maia","email":"fabiu.maia@gmail.com"},"date":"Wed, 3 May 2017 18:48:04 +0100"},{"sha":"89e50b0364366373638f5e00d9b1a2acd73b4af1","message":"Prepare-v1.0.1-release","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 3 May 2017 17:26:19 +0200"},{"sha":"b2ebd03743495526c7f27a6ed5b5cff05f8c743e","message":"Merge-pull-request-626-from-marmelab-fix_numberinput_clear","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 3 May 2017 16:57:25 +0200"},{"sha":"c90945bdc650e0747872a71aea136d0102153e5c","message":"Merge-pull-request-625-from-marmelab-fix_filters_refresh","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 3 May 2017 16:56:28 +0200"},{"sha":"34f6aa630caf6fc3c1e881c4810c5a3fcb12e0bd","message":"RFR-Fix-filters-on-refresh","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 3 May 2017 16:29:51 +0200"},{"sha":"6f7abdd0952a148041ee447f4c714097b5b53acd","message":"RFR-Ensure-numberinput-never-send-null","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 3 May 2017 16:17:59 +0200"},{"sha":"ef67413f47cfcd0e08a8ae115fb9475c71a66eaf","message":"Merge-pull-request-623-from-marmelab-fix_checkboxgroup_ie","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 3 May 2017 15:11:44 +0200"},{"sha":"6094483328a4a10b1895ab9406a2829206ab99d8","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 3 May 2017 15:08:03 +0200"},{"sha":"cf29b35dc356b7236fac2765384ce5eb8cdee716","message":"fix-tests","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 3 May 2017 11:44:37 +0200"},{"sha":"bbade6fdbe9190166d83bbf790d28558ded375e1","message":"RFR-Fix-CheckboxGroupInput-on-IE","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 3 May 2017 11:27:42 +0200"},{"sha":"d37836601bb38027bfda5e2dfb97f72da8414393","message":"Adds-the-AUTH_LOGIN-s-resolve-payload-to-AUTH_LOGIN_SUCCESS","author":{"name":"Sid Ferreira","email":"sid@ferreiraz.com.br"},"date":"Tue, 2 May 2017 16:53:06 -0300"},{"sha":"f45b75116d48762c09c16201ec6048e3ed81e66e","message":"Merge-pull-request-621-from-marmelab-avoid_warning_for_title_prop","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 2 May 2017 18:11:54 +0200"},{"sha":"d3b69143dd60b7e3a1e8c3894369cf8c76c6ec46","message":"Merge-pull-request-610-from-marmelab-reference_input_resource_doc","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 2 May 2017 18:02:23 +0200"},{"sha":"fa968644f0809c6f3c60f9c74c527531124bb077","message":"Merge-pull-request-619-from-abarani-url-decode","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 2 May 2017 17:50:47 +0200"},{"sha":"e803754ef9cac625f38ffcb1db88948e80414b36","message":"Update-auth.js","author":{"name":"Sid Ferreira","email":"sid@ferreiraz.com.br"},"date":"Tue, 2 May 2017 12:47:01 -0300"},{"sha":"db341c9698b75fb80ab7661ec56935601a38b55b","message":"Merge-pull-request-611-from-tacoo-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 2 May 2017 17:33:39 +0200"},{"sha":"b5f4afef11fa9f99365b9b562d4f87558907d098","message":"Fix-example-REST-client-in-tutorial","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 2 May 2017 17:24:53 +0200"},{"sha":"cc70905fdc6f308faacb8880fdb665b6065f9354","message":"Merge-pull-request-591-from-grahamlyus-pagination-params-as-ints","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 2 May 2017 17:02:28 +0200"},{"sha":"028fd0a13b2868f3665c01e958a5f286e4f31b52","message":"Change-title-proptype","author":{"name":"Julien","email":"julien@marmelab.com"},"date":"Tue, 2 May 2017 15:38:47 +0200"},{"sha":"b8a5d7857ea1e7d52c3dc04b639238679d149ca2","message":"decode-id-uri-component-matched-from-react-router","author":{"name":"Andrea","email":"a.barani@vubai.com"},"date":"Mon, 1 May 2017 18:39:35 +0200"},{"sha":"e3d91daa806722cc63a3230a4cc2ec577dd8f5c1","message":"set-error-as-error-message-if-the-type-is-string","author":{"name":"Tatsuya Shimoda","email":"tatsuya.fuga@gmail.com"},"date":"Fri, 28 Apr 2017 11:37:31 +0900"},{"sha":"d0998181e686fa4f5b8990076e56ef120dabfefc","message":"Forgot-to-delete-one-line-that-was-created-by-the-merge-conflict","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Thu, 27 Apr 2017 18:11:27 +0200"},{"sha":"5cf1f0b602c77f3fe71b9d0b8163617f664de024","message":"Mention-obligation-to-declare-a-resource-for-ReferenceInput","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 27 Apr 2017 17:44:21 +0200"},{"sha":"ec59df53f52af60868ad51f8c4e96ffccacd5f9a","message":"Resolved-Merge-conflict","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Thu, 27 Apr 2017 17:15:37 +0200"},{"sha":"a760e43c13ace3b0bcb5f8f68226ad46d5cd5018","message":"Merge-pull-request-606-from-marmelab-theme-button-logout","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 27 Apr 2017 14:00:00 +0000"},{"sha":"749ab329f6c5d7c3e2becaeaaeb6728da19515a7","message":"oneline-code","author":{"name":"zyhou","email":"richard.maxime9@gmail.com"},"date":"Thu, 27 Apr 2017 15:53:18 +0200"},{"sha":"84498e8db20f913b538793b3c725523ac514bd88","message":"Merge-pull-request-607-from-tacoo-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 27 Apr 2017 11:56:16 +0200"},{"sha":"e6c9fffe76a9fe4b3c09ea558c112efa3a1f76ed","message":"Merge-pull-request-603-from-leesei-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 27 Apr 2017 11:53:17 +0200"},{"sha":"a2a4818ed7827eb9f4bdb386d1739eff51c083e1","message":"reflect-validation-changes-to-docs-and-prop-types-for-input-form","author":{"name":"Tatsuya Shimoda","email":"tatsuya.fuga@gmail.com"},"date":"Thu, 27 Apr 2017 11:17:52 +0900"},{"sha":"2bfb6eb64be8d2c570669b0c34956067474c3780","message":"correction-action-logout","author":{"name":"Maxime","email":"richard.maxime9@gmail.com"},"date":"Wed, 26 Apr 2017 21:44:36 +0200"},{"sha":"8f4cc75c043d6bd50d79322c369fff169ac13a2b","message":"connect-theme-logout-button","author":{"name":"Maxime","email":"richard.maxime9@gmail.com"},"date":"Wed, 26 Apr 2017 21:32:57 +0200"},{"sha":"084b066e71a1f81b44ace9e61d5eab04e3d776e8","message":"Fix-bottom-margin-in-pre-blocks","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 18:38:39 +0200"},{"sha":"00835284317b5438687b9f987f3d633ade7521cf","message":"Fix-margin-under-code-samples","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 18:35:06 +0200"},{"sha":"5deff75174cbba344f5d851bbf4802e98f56c78d","message":"Fix-more-syntax-highlighling-in-jsx","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 18:27:15 +0200"},{"sha":"e961ffa0233c594d43c2684dec8517d047fe8bb7","message":"Fix-syntax-highlighting-in-jsx","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 18:23:07 +0200"},{"sha":"eaa3f2c6dec3b0f84cdb23a872cd01a116e35094","message":"Adding-client-side-support-for-jsx-syntax-highlighting","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 18:08:03 +0200"},{"sha":"627c5629840b70143963e58062971bea838a8eea","message":"Revert-Fix-syntax-highlighting-in-tutorial","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 17:47:03 +0200"},{"sha":"3db6599da857efc4320e8265aade395c0d2d8cf8","message":"Fix-syntax-highlighting-in-tutorial","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 17:45:45 +0200"},{"sha":"fb87b70d46fb2af1270752e370850fce76de9ac2","message":"add-info-on-docs-TOC","author":{"name":"leesei","email":"leesei@gmail.com"},"date":"Wed, 26 Apr 2017 23:12:05 +0800"},{"sha":"550e66590f256956e240b33501c79994f538ab29","message":"Merge-pull-request-602-from-leesei-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 16:54:36 +0200"},{"sha":"c713b37195b491c0b4879f7c6b7532727a3052e2","message":"add-Traditional-Chinese-translation","author":{"name":"leesei","email":"leesei@gmail.com"},"date":"Wed, 26 Apr 2017 22:42:00 +0800"},{"sha":"7f718c250f25c9fa3945a115f6f5def513c5b3d5","message":"add-link-to-chapter-in-Input","author":{"name":"leesei","email":"leesei@gmail.com"},"date":"Wed, 26 Apr 2017 22:41:26 +0800"},{"sha":"eda0e59fa101a57bcc33345f74fb600661d7e8e8","message":"Fix-bugs-in-doc-parsing","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 16:25:52 +0200"},{"sha":"f102a4c849e83c3ca23f5577a2b0ea7b4a9bb54a","message":"Update-CONTRIBUTING.md","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 16:22:27 +0200"},{"sha":"9edbc72c6b6b38dba93238c31998fd7d7e45a808","message":"Update-French-translations-package","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 11:38:58 +0200"},{"sha":"1ccc7215d31cf26f740ec992a9b75fd1a8d8722f","message":"Prepare-1.0.0","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 11:12:48 +0200"},{"sha":"6bdb56dd6b41035f53b875ee10b43da49e0dc55c","message":"Merge-pull-request-600-from-marmelab-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 11:11:31 +0200"},{"sha":"cd31bf53dec5cfa93bf238c85b36fe141b297513","message":"Increase-e2e-test-timeout-to-avoid-false-fails","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 11:01:50 +0200"},{"sha":"79b9b097a56f3fd47ad2999b1c9f6b3bb15884c7","message":"Fix-deps-version-in-changelog","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 10:52:50 +0200"},{"sha":"c3b09d8a67d713a5b7298e5bb7a64ad0b8c2f59c","message":"Upgrade-react-dropzone-to-3.13.1-to-remove-deprecation-warnings","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 10:50:45 +0200"},{"sha":"e113408650898301ececd5cc13d63c14d6725f0b","message":"Upgrade-redux-form-to-6.6.3-to-remove-deprecation-warnings","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 10:47:39 +0200"},{"sha":"31ea716026616b4a7f682f464fe13965b5b0bfa3","message":"Upgrade-material-ui-to-0.17.4-to-remove-deprecation-warnings","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 10:44:27 +0200"},{"sha":"f8fa6af28c5e7309c0752ece3d4ad9eaf53ea52e","message":"Add-changelog-for-1.0","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 10:40:24 +0200"},{"sha":"0b1bea906d6ccf4be715cbcdd17959f582b4b593","message":"Re-fix-563-after-rebase","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 10:04:53 +0200"},{"sha":"fd0056a8bbe9834ac33c8161186fd42d4d78cb6d","message":"Fix-bad-merge","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 09:59:20 +0200"},{"sha":"efccc73d1794e9b35690b7d1227d5b783bf0a3fe","message":"Merge-branch-master-into-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 09:25:09 +0200"},{"sha":"e0f5fd6211458a10ce6d7c4445fba4968885f401","message":"Fix-e2e-test-refs-572","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 09:10:21 +0200"},{"sha":"fce75670604b6e16d396dfb46cfbfb32952dcb6a","message":"Merge-pull-request-572-from-marmelab-create-post-selenium","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 26 Apr 2017 08:45:05 +0200"},{"sha":"18a32c6a55ff31391ef300414a19725a02dbe055","message":"Ensure-pagination-params-are-integers","author":{"name":"Graham Lyus","email":"graham.lyus@focusatwill.com"},"date":"Sun, 23 Apr 2017 19:30:56 -0700"},{"sha":"f18c05669fbc8386b0b45e8a73f72689c9aad504","message":"Merge-pull-request-580-from-marmelab-non_sortable_fix_and_doc","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sun, 23 Apr 2017 10:14:12 +0200"},{"sha":"14ef965f882029432364500c13ad6d665f03000c","message":"Merge-pull-request-586-from-valueshimoda-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sun, 23 Apr 2017 09:58:59 +0200"},{"sha":"180e68c896330599e89c9f284c235e4dc535a0ab","message":"Merge-pull-request-589-from-magikMaker-feature-czech-language","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sun, 23 Apr 2017 09:56:46 +0200"},{"sha":"a721ebb2e2b6263b7b71dec348b3836244935cba","message":"added-Czech-language-file-link","author":{"name":"Bjørn Wikkeling","email":"bjorn@wikkeling.com"},"date":"Fri, 21 Apr 2017 22:08:24 +0200"},{"sha":"57f51404adbe8143f0c3c481302ac3212260b4f3","message":"fixed-backticks","author":{"name":"Bjørn Wikkeling","email":"bjorn@wikkeling.com"},"date":"Fri, 21 Apr 2017 22:07:07 +0200"},{"sha":"0590066badde22a0f46fa760b5db1e3d61fda86e","message":"Add-Japanese-language","author":{"name":"tshimoda","email":"shimoda@value-it.co.jp"},"date":"Fri, 21 Apr 2017 13:42:37 +0900"},{"sha":"e3a56f4c037f0a698266532dcc6fccdd578521fb","message":"Merge-pull-request-585-from-pimschaaf-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 20 Apr 2017 10:59:47 +0200"},{"sha":"cab7ed3e318a610f90db1634a951c5b815524dee","message":"Add-Dutch-language","author":{"name":"Pim Schaaf","email":"Pimschaaf@gmail.com"},"date":"Wed, 19 Apr 2017 23:38:18 +0200"},{"sha":"a6413a894227583371665e535ecc4627f118f374","message":"Code-review","author":{"name":"Dylan Demougin","email":"dylandemougin@Mac-mini-de-Gildas.local"},"date":"Wed, 19 Apr 2017 10:43:42 +0200"},{"sha":"75bbed3a05ab1e03ed8fd88b7645e0baed9ce2cb","message":"RFR-Fix-ability-to-disable-sort-for-a-field","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 18 Apr 2017 15:37:29 +0200"},{"sha":"aa78bcdcc13cbc2b0bca0b0969fb0f186d6c1bf3","message":"Merge-remote-tracking-branch-upstream-next-into-next","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Tue, 18 Apr 2017 14:09:41 +0200"},{"sha":"b1ff61f62f40130df6cb06fff7adf74a23544bf6","message":"Shame-on-me-I-forgot-to-git-add-src-mui-detail-Tab.js-so-obviously-not-working","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Tue, 18 Apr 2017 14:06:47 +0200"},{"sha":"3dd46fd147ae09a360d4a1e823d54ea3d5663fff","message":"Some-corrections","author":{"name":"Dylan Demougin","email":"dylandemougin@Mac-mini-de-Gildas.local"},"date":"Fri, 14 Apr 2017 18:19:50 +0200"},{"sha":"054c005c4df6ac84be03c61026233721ce3a87c9","message":"Merge-pull-request-576-from-marmelab-fix_no_auth","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 14 Apr 2017 17:04:13 +0200"},{"sha":"deef01e5ee07913a7dfa231ec35ea15677643468","message":"Merge-pull-request-575-from-marmelab-update_tutorial","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 14 Apr 2017 16:55:00 +0200"},{"sha":"d720227d78bdccfbc40c98e55568da8638252e73","message":"Fix-admin-when-it-has-no-auth","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 14 Apr 2017 16:28:42 +0200"},{"sha":"3099d91b0afc32b776392d181a0be30c8cf85035","message":"Update-tutorial-screenshots-proofreading","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 14 Apr 2017 16:27:03 +0200"},{"sha":"dfc2f70e8adbcd19106c707cbb7356fe109ade34","message":"Add-some-tests-into-create-and-replace-afterEach","author":{"name":"Dylan Demougin","email":"dylandemougin@Mac-mini-de-Gildas.local"},"date":"Fri, 14 Apr 2017 16:13:27 +0200"},{"sha":"672e00a9f58d9b9135fa544f17dddabfe215c641","message":"add-a-test-which-check-if-the-date-into-create-post-form-is-the-same-that-the-current-date","author":{"name":"Dylan Demougin","email":"dylandemougin@Mac-mini-de-Gildas.local"},"date":"Fri, 14 Apr 2017 15:07:41 +0200"},{"sha":"edd2d5eb7715dbfecb6f54bb25e4f25231d97da3","message":"Add-one-test-into-create-page","author":{"name":"Dylan Demougin","email":"dylandemougin@Mac-mini-de-Gildas.local"},"date":"Fri, 14 Apr 2017 10:57:40 +0200"},{"sha":"793e44f13006b57208735353f9206eb475d2e1a4","message":"Merge-pull-request-573-from-marmelab-fix_tab_translation_warning","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 14 Apr 2017 10:35:24 +0200"},{"sha":"4a90f523ab055a18d77fe9bf77e899d8af50f88c","message":"add-setValues-method-into-create-page","author":{"name":"Dylan Demougin","email":"dylandemougin@Mac-mini-de-Gildas.local"},"date":"Fri, 14 Apr 2017 10:25:40 +0200"},{"sha":"a31afde1edaa3869870cde480cd501a722d8d442","message":"Add-class-into-SimpleShowLayout-FormTab-and-SimpleForm","author":{"name":"Dylan Demougin","email":"dylandemougin@Mac-mini-de-Gildas.local"},"date":"Fri, 14 Apr 2017 10:05:24 +0200"},{"sha":"c0c638d67c765bdbd049c4c9eec466eb8f42d54c","message":"Add-beforeEach-method-into-create-test-for-delete-the-created-post","author":{"name":"Dylan Demougin","email":"dylandemougin@Mac-mini-de-Gildas.local"},"date":"Fri, 14 Apr 2017 09:59:18 +0200"},{"sha":"f6e53da6c4d20d6ebabfce3b23564b1a709f0eee","message":"Fix-translation-warning-on-tab-names","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 13 Apr 2017 17:55:11 +0200"},{"sha":"9a70558550febe8595a0e728f1e4002b9650c787","message":"Fix-paginations-test","author":{"name":"Dylan Demougin","email":"dylandemougin@Mac-mini-de-Gildas.local"},"date":"Thu, 13 Apr 2017 17:33:35 +0200"},{"sha":"f39807bda2472ef7dcd0e0ebebe03b116b8f28f6","message":"refs-515-569","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Thu, 13 Apr 2017 15:59:46 +0200"},{"sha":"dca04ab083f6a77b21768429dd9d2929b6cb22a1","message":"refs-515-569","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Thu, 13 Apr 2017 15:32:06 +0200"},{"sha":"a9a2b7fe69dff990a5f146ac8c527d220f3604f4","message":"Add-first-test-for-post-creation","author":{"name":"Dylan Demougin","email":"dylandemougin@Mac-mini-de-Gildas.local"},"date":"Thu, 13 Apr 2017 15:24:02 +0200"},{"sha":"e80e4012781145a100d9864fce78b6af2a659f75","message":"refs-515-569","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Thu, 13 Apr 2017 15:19:39 +0200"},{"sha":"4bad572b4661316ba2bc67168e17359688ddd88b","message":"Refs-515","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Thu, 13 Apr 2017 14:13:59 +0200"},{"sha":"1f0cfc5a8fc7ab13db381731dcd83c893e7eaeeb","message":"Merge-pull-request-566-from-marmelab-upgrade_deps","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Wed, 12 Apr 2017 17:02:23 +0200"},{"sha":"a010c59400ff53e1efc51a55e89f0018e9a0a497","message":"Downgrade-chrome-driver-for-Travis","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 12 Apr 2017 16:36:42 +0200"},{"sha":"aaf541dfd0d83e3a8dc997b3df465bb6be1fadd0","message":"react-router-now-accepts-empty-element-in-Switch","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 12 Apr 2017 12:19:56 +0200"},{"sha":"81e7d11f6c3aacc82f37a23620e0e3fb1d892b7a","message":"Merge-pull-request-563-from-larriereguichet-bugfix-dynamic-resources","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 12 Apr 2017 12:13:52 +0200"},{"sha":"faf0a96df108ef31b71753071f9e5e7c1bf6637a","message":"Fix-doc","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 12 Apr 2017 12:12:16 +0200"},{"sha":"0b50aeba17fb8f11a112ec1a225a6123733f4d60","message":"Require-PropTypes-from-standalone-package","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 12 Apr 2017 12:03:00 +0200"},{"sha":"722e14a2c7a58664df919366efbea5e74e376d76","message":"Upgrade-all-deps","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 12 Apr 2017 11:35:03 +0200"},{"sha":"fb31c7473328a88825b9a4c66e25671ff6a8d603","message":"Upgrade-dependencies","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 12 Apr 2017 08:45:51 +0200"},{"sha":"72c2522ef6059087398698ee02a7248c7bdeaf99","message":"set-resources-default-value-to-empty-array-if-no-children-were-specified","author":{"name":"lutangar","email":"johan.dufour@gmail.com"},"date":"Tue, 11 Apr 2017 17:54:44 +0200"},{"sha":"b9167bc09f491eb139b25a7af304b5cf95fec750","message":"fix-crash-occurring-when-the-first-resource-could-nt-yet-be-found","author":{"name":"lutangar","email":"johan.dufour@gmail.com"},"date":"Tue, 11 Apr 2017 17:53:03 +0200"},{"sha":"6044e29cddecf587273c794253d2303f181892ae","message":"Merge-pull-request-556-from-leesei-552","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 7 Apr 2017 09:01:44 +0200"},{"sha":"28044246e63042facaaa61d9e53db70544ed9cb1","message":"Merge-pull-request-557-from-maxschridde1494-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 7 Apr 2017 09:01:08 +0200"},{"sha":"852e9b7a4ff10a6d5e7cdfd4a8093fb3a36dab56","message":"Update-RestClients.md","author":{"name":"maxschridde1494","email":"maxschridde1494@users.noreply.github.com"},"date":"Thu, 6 Apr 2017 15:22:51 -0700"},{"sha":"fe8ac34818bc77a59ce36925a5126a248437e885","message":"add-link-for-ImageInput","author":{"name":"leesei","email":"leesei@gmail.com"},"date":"Fri, 7 Apr 2017 00:17:28 +0800"},{"sha":"d1d61fa5a0e72af55d313bc9ec4dfe3c5e1e4620","message":"Merge-pull-request-555-from-leesei-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 6 Apr 2017 18:10:25 +0200"},{"sha":"a0cc7169f57de342c56bcb796f5a02960812a020","message":"add-parse-and-format-usage","author":{"name":"leesei","email":"leesei@gmail.com"},"date":"Thu, 6 Apr 2017 23:47:21 +0800"},{"sha":"1ef944fe228bb13dda420d863170150209bb62af","message":"Remove-raw-marks-from-GitHub-README","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 6 Apr 2017 08:48:24 +0200"},{"sha":"47431cdcb6dbd7e03ed35d7fefdddb513d75949d","message":"Remove-empty-file","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Apr 2017 17:01:00 +0200"},{"sha":"4b7fd891538ebf2941515e0a8874286b3bbff5d7","message":"Merge-pull-request-545-from-marmelab-material-ui-0-17","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 5 Apr 2017 16:30:09 +0200"},{"sha":"e386fd3573a8ae9a86412b6657beae7d69b0a872","message":"Upgrade-material-ui-version","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Apr 2017 16:21:45 +0200"},{"sha":"4067a5c4301081d295c63ed6348c83d5a0fc57cf","message":"Add-mention-of-tiyMCEInput","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Apr 2017 15:40:27 +0200"},{"sha":"2bb4df0e097003dc9dde0993f2fd2b3b9de9189a","message":"Various-doc-fixes","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Apr 2017 15:38:28 +0200"},{"sha":"cb82efe5560442b497fcb4c4c1762c06f1505daa","message":"Prepare-v0.9.4","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Apr 2017 15:26:52 +0200"},{"sha":"57dd44331794fa9b32f364462a3da1798339a5bc","message":"Merge-pull-request-544-from-marmelab-ReferenceManyField_needs_resource","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 5 Apr 2017 14:50:24 +0200"},{"sha":"ca846827ad8f0fdb178731857fc338853e15880c","message":"Merge-pull-request-543-from-marmelab-fix_dashboard_title_example","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 5 Apr 2017 14:49:55 +0200"},{"sha":"55b79a40140f56351098b3026882b0a6ee87f78e","message":"Add-warning-about-Resource-required-for-ReferenceManyField-usage","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Apr 2017 14:46:59 +0200"},{"sha":"5a98731b4a5397f75df40b08bde20d4166969e26","message":"Fix-Custom-dashboard-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Apr 2017 14:31:18 +0200"},{"sha":"8c6df9dcadda37a9985a90aade917571935ee3ed","message":"Merge-pull-request-540-from-remi13131-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Apr 2017 13:47:02 +0200"},{"sha":"bfaa5735e0540597a34763660d746cd481af2c20","message":"Merge-pull-request-542-from-marmelab-http_error_mapping","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 5 Apr 2017 11:47:29 +0200"},{"sha":"835022efdb6fe88ab45baa06aee3b75444d00643","message":"Remove-unit-tests-that-can-only-be-tested-e2e-now","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Apr 2017 09:54:19 +0200"},{"sha":"463552be500118949b0ce80b7a17cc9523e1e972","message":"Trying-to-overcome-Travis-build-errors","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Apr 2017 08:57:52 +0200"},{"sha":"a415a3540974423d0890f03592cc9626812355f2","message":"Update-docs","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Apr 2017 00:49:41 +0200"},{"sha":"4275594e74ef3d7f9ed9f1a8cd475cbd67f3b65e","message":"Redirect-to-required-page-after-USER_CHECK-error","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 5 Apr 2017 00:25:12 +0200"},{"sha":"4a9ba3c54abe2ac00818ecb0eb0898382c2e8aec","message":"Fix-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 4 Apr 2017 23:58:30 +0200"},{"sha":"46a34be29e304d84d51efdfc6345ba608a577ab7","message":"Display-login-errors","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 4 Apr 2017 23:53:25 +0200"},{"sha":"544e08ae3d7aa9ede21eb7f9c0f1964e8a4e21c8","message":"Move-HTTP-to-REST-error-mapping-to-AUTH-client","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 3 Apr 2017 17:35:08 +0200"},{"sha":"f7622fd3c767a08167e68794e94a614096b4e16d","message":"Merge-pull-request-541-from-marmelab-filter_onChange","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 3 Apr 2017 16:50:46 +0200"},{"sha":"f946ad9bc91b4cc2e7ecfc52e50a72afc1e35586","message":"Remove-empty-filters","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 3 Apr 2017 16:42:28 +0200"},{"sha":"c88f52685a4787e7ec28d348d237c8a4d45a2efb","message":"Fix-push-to-same-location-bug-due-to-redux-onChange","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 3 Apr 2017 16:31:33 +0200"},{"sha":"ff728c95082703b76f16c51a94ac410673b7856b","message":"Fixes-539","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Mon, 3 Apr 2017 14:43:16 +0200"},{"sha":"3f91c25a20a767d3358bbd42211f0867b9c64693","message":"Merge-pull-request-537-from-kulakowka-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 3 Apr 2017 13:51:10 +0200"},{"sha":"4f9e6fa1588d472f00036a402971ece76807f41d","message":"Use-redux-form-onChange-for-filters-live-update","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 3 Apr 2017 08:36:10 +0200"},{"sha":"23d6bf3baf0c27ab3fef1a79db74e9ae727a5536","message":"Update-RestClients.md","author":{"name":"Anton Kulakov","email":"kulakowka@gmail.com"},"date":"Sun, 2 Apr 2017 17:27:17 +0300"},{"sha":"a4dd91fda85aaf596d9ad3eadb33c0169d61445d","message":"Merge-pull-request-513-from-marmelab-redux-form-v4","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Sat, 1 Apr 2017 11:48:23 +0200"},{"sha":"a8da76ece986134b40e0ffba93ba7c3cb13dd8ff","message":"Merge-pull-request-533-from-marmelab-fix_edit_refresh_2","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 31 Mar 2017 19:11:08 +0200"},{"sha":"ea036ee01af44781584beeebd789f6d398f43dbe","message":"Fix-typo","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 30 Mar 2017 17:02:03 +0200"},{"sha":"841e3696fc1ad5983b68f23926e62f5bed05cb8d","message":"Manage-to-avoid-hiding-the-form-upon-refresh","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 30 Mar 2017 17:00:08 +0200"},{"sha":"8b5e4e128fa1266038a97e48af05433adffafd8d","message":"Fix-Full-Refresh-in-Edit-view","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 30 Mar 2017 16:35:00 +0200"},{"sha":"5ccc2935fffe57b955d7e961cb439dd428b7bab6","message":"Merge-pull-request-531-from-marmelab-revert-527-fix_edit_refresh","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 30 Mar 2017 15:27:02 +0200"},{"sha":"cbb86bb62f5282dd2556643fb7e2e2238c1ff2d0","message":"Revert-RFR-Fix-refresh-on-Edit-clears-data","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 30 Mar 2017 15:26:38 +0200"},{"sha":"705a3b67c85a5d8a7ae322aa6aff922c1f5620b7","message":"Code-review","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 30 Mar 2017 11:23:04 +0200"},{"sha":"061f2154f8b1989f497124e6dad61c871e957089","message":"Merge-pull-request-527-from-marmelab-fix_edit_refresh","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 30 Mar 2017 09:01:11 +0200"},{"sha":"9e8c4aaaf16450aa25d47fb778b4a82c0cc6bf64","message":"Merge-pull-request-526-from-marmelab-hide_unauthorized_notification","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 30 Mar 2017 09:00:19 +0200"},{"sha":"b0500bac3b5763f8566e18dfd7fcd5c331c22896","message":"Fix-refresh-on-Edit-clears-data","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 30 Mar 2017 08:34:29 +0200"},{"sha":"9521a0669928c26a0bf0943b15ce10bc2b29fb22","message":"Hide-notification-before-redirecting-to-login","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 30 Mar 2017 07:21:51 +0200"},{"sha":"2ead60406fbd9a7a0fd28e466573af1fdc820fc2","message":"Merge-pull-request-521-from-vysakh0-patch-1","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 29 Mar 2017 15:58:07 +0200"},{"sha":"750bc6a191ffa2cda9cad87adaa0a3f9e746e393","message":"Add-tests-for-AdminRoutes","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 29 Mar 2017 15:46:26 +0200"},{"sha":"f559b9a6f896d4f6c5b7431b44bfba39feaedcb7","message":"README-fix-Send-a-component-to-the-title-props","author":{"name":"Vysakh Sreenivasan","email":"diplomatv@gmail.com"},"date":"Wed, 29 Mar 2017 19:16:17 +0530"},{"sha":"ca87641fcd2a87fc771f1c1e497649d5ae8b6312","message":"Merge-pull-request-522-from-faviouz-faviouz-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 29 Mar 2017 15:13:24 +0200"},{"sha":"7f0af3ae5a4cecbe2b6bc8d3f05bad97a67c6463","message":"Fix-typo-in-Authentication.md","author":{"name":"Fábio Maia","email":"fabiu.maia@gmail.com"},"date":"Wed, 29 Mar 2017 13:51:19 +0100"},{"sha":"5edb8dcdcbb24ab9e21a6b8aaf53f21ee3ead744","message":"Update-Custom-Layout-docs","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 29 Mar 2017 14:47:52 +0200"},{"sha":"6db1d1f02b7802370c4f21a2705542e8553dbe7e","message":"Add-e2e-tests-for-authentication-process","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 29 Mar 2017 14:33:41 +0200"},{"sha":"6b7bde8ba785e7dd21306b60e68e772b134906b7","message":"Add-test-on-Restricted-component","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 29 Mar 2017 14:03:00 +0200"},{"sha":"2e8f5a951432da7685de4269a96ff515dc5682a3","message":"Merge-pull-request-520-from-remi13131-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 29 Mar 2017 11:47:59 +0200"},{"sha":"2cf134b15ca6cedf0f85c2f9395fe99f2c64fef1","message":"Fix-dashboard-rendering","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 29 Mar 2017 09:51:52 +0200"},{"sha":"8ebadf8ba4f275541b176a9bde1f6b7d79e63b34","message":"Merge-pull-request-519-from-marmelab-readme_explain_branches","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 29 Mar 2017 09:04:11 +0200"},{"sha":"d9f6273dcce3b291ee1f8b1dba70059e78a58b76","message":"Typo-fix-s-Most-PRs-should-be-made-to-next-Bugfix-PRs-that-don-t-break-BC-should-be-made-against-master-.-All-other-PRs-new-features-bugfix-with-BC-break-should-be-made-against-next","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 29 Mar 2017 07:03:35 +0000"},{"sha":"b639245e8b5c5cdc4559b4868cb690d53adac9bf","message":"RFR-Explain-branches-in-README","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 29 Mar 2017 08:58:18 +0200"},{"sha":"8ecce0db35614191c666053f49abf2c8948ff237","message":"Document-Restricted-component","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 29 Mar 2017 00:26:49 +0200"},{"sha":"91d04110573a6c48baacfcdb6e7cf9eda90e4e36","message":"BC-Break-Update-Custom-App-doc","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 29 Mar 2017 00:03:46 +0200"},{"sha":"3eb3fc4f63dfe89b19e304bcde32e4a776c387ac","message":"Move-main-routing-logic-to-new-AdminRoutes-component","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 28 Mar 2017 23:28:12 +0200"},{"sha":"13f89bc125f15c2a9b5ae2aeb23a2f2304721878","message":"Closes-504","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Tue, 28 Mar 2017 18:53:19 +0200"},{"sha":"f21d8b1307e515eb813fa53663bc623b68c4123c","message":"Closes-504","author":{"name":"DIPAOLA Remi","email":"remi.dipaola@univ-lille3.fr"},"date":"Tue, 28 Mar 2017 16:51:20 +0200"},{"sha":"1de6ae729a6718db3bc37f9ffa9d287736b506f6","message":"Remove-unused-import","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 28 Mar 2017 18:03:55 +0200"},{"sha":"4c7efc3a1059eb7f125edc8ead941d311a366dec","message":"MAke-authentication-work-again","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 28 Mar 2017 18:01:44 +0200"},{"sha":"ad21f5036ebb13bc43d3a0d6bd53a94c0c7c90d6","message":"BC-Break-customRoutes-must-now-be-an-array-of-Routes","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 28 Mar 2017 15:19:24 +0200"},{"sha":"837930aa8ac79a4a490f6fab52a82e92846b31ba","message":"Fix-errors-in-ReferenceField-and-SimpleList","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 28 Mar 2017 14:57:30 +0200"},{"sha":"d8cff87a23664c846aa67cf21d79e252b3b68f22","message":"Merge-pull-request-508-from-marmelab-fix_nullable_input","author":{"name":"JulienDemangeon","email":"julien@demangeon.fr"},"date":"Tue, 28 Mar 2017 08:57:06 +0200"},{"sha":"a59aa7dc3a45d37775d49c89a63be117888471dd","message":"Fix-custom-dashboard","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 27 Mar 2017 22:13:23 +0200"},{"sha":"fa7192e3bb4305f560f53a1d97d1aba74e8d762b","message":"Fix-filter-behavior","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 27 Mar 2017 22:03:07 +0200"},{"sha":"5510f919021d92fc1740e0a66760a0b034c1c8f2","message":"use-render-with-createEleemnt-everywhere","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 27 Mar 2017 21:47:30 +0200"},{"sha":"fffed4bc97dba93720aec9780abf87937abd39cd","message":"Enable-all-CRUD-views","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 27 Mar 2017 18:55:43 +0200"},{"sha":"0092a02461da911e34be047ce8d5fd742f49aef8","message":"Add-edit","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 27 Mar 2017 18:41:40 +0200"},{"sha":"7ef43174cccf6cfe06f0da26794a7d9bb4b9525d","message":"Displaying-the-list","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 27 Mar 2017 18:21:32 +0200"},{"sha":"d2ecc4049259387256158ed4b649052ae7f9a405","message":"Fix-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 27 Mar 2017 14:09:34 +0200"},{"sha":"8e187489b8a4cfdcc7a88bef6173cd401d069765","message":"Fix-NullableBooleanInput","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 24 Mar 2017 08:22:10 +0100"},{"sha":"8109cb6bd42f3fcdde2c0f2d24d871de6e4f4b63","message":"Initial-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 23 Mar 2017 11:15:51 +0100"},{"sha":"94facaa386c25029a09da49e45fb7000b81eb017","message":"Merge-pull-request-501-from-marmelab-select_field","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Thu, 23 Mar 2017 09:36:18 +0100"},{"sha":"2a315e096ce89d0f758654e8976bb7ef8b85c17e","message":"Code-review","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 23 Mar 2017 09:16:40 +0100"},{"sha":"4a01d6eb5861f02d0fac9f63027213f5a092c093","message":"Translate-CheckboxGroupInput-options-by-default","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Mar 2017 23:48:08 +0100"},{"sha":"657e688191b789f3d50f9ec421b015a9806fb9c4","message":"nslate-RadioButtonGroupInput-options-by-default","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Mar 2017 23:35:56 +0100"},{"sha":"354302a6d4628af3beecdacc911cfbec6528f666","message":"Fix-double-decoration-by-translate","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Mar 2017 23:15:14 +0100"},{"sha":"3431671864c5ba35bc6fb899267db9d32b5290d2","message":"Add-tests-for-translateChoices-prop","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Mar 2017 23:08:45 +0100"},{"sha":"c339f9dcf35b4b5c589359fe65df68dca352e23b","message":"Translate-AutocompleteInput-choices-too","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Mar 2017 23:02:31 +0100"},{"sha":"a488d7d2de38b1aa4d0801b82c89b62533b56c0d","message":"Remove-default-decoration-by-Chip-in-SelectField","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Mar 2017 22:45:05 +0100"},{"sha":"16bdba941d5d5710d4be75b01789543161f63e68","message":"Update-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Mar 2017 22:30:45 +0100"},{"sha":"b8673a210c02e48467a48d8090f356c0c1940ae5","message":"Translate-SelectInput-choices-by-default-except-in-ReferenceInput","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Mar 2017 22:17:08 +0100"},{"sha":"a7dd0acc7f1b785b2e1c10fcefb37d632bf0f249","message":"Prettify-data","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Mar 2017 21:58:12 +0100"},{"sha":"75021f2e14562fb232d1fda40c63599e339d47e8","message":"Add-SelectField-component","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Mar 2017 21:57:39 +0100"},{"sha":"dbda95f4a90d335211517710f89a5b846c63712c","message":"Merge-pull-request-490-from-marmelab-leesei-247","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 23 Mar 2017 09:04:06 +0100"},{"sha":"1630276163cdc43abf192cb8db017ac2fd874d14","message":"Prepare-v0.9.3","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Mar 2017 07:53:20 +0100"},{"sha":"d2ad613796ad636743a0c317f703d9c85b11acf6","message":"Handle-true-linkTrue-value","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 21 Mar 2017 18:35:59 +0100"},{"sha":"e1d884397aadbe09fee4cab209774c276a83dd46","message":"Fix-typo","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 21 Mar 2017 18:35:17 +0100"},{"sha":"98ff5627b19da4fe9f90f1c930fbf01c4c4c4cee","message":"Merge-pull-request-489-from-marmelab-bad_rest_client_data","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 21 Mar 2017 10:21:30 +0100"},{"sha":"b278800ae8d8a6fa8dbc5020c1debf011014a356","message":"Merge-pull-request-488-from-marmelab-fix_filter_layout","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 21 Mar 2017 10:21:09 +0100"},{"sha":"c1072674358d1a61c2241118ad6df79f50d4c5cd","message":"Fix-linkType-PropType","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Mar 2017 23:15:44 +0100"},{"sha":"bfec089ebeac29747188916c26b8ad59f98bf1bd","message":"Add-test-for-ReferenceField","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Mar 2017 23:07:26 +0100"},{"sha":"e006077cf88f7c18d07452de8aae5da24d7c18c6","message":"Coding-style","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Mar 2017 22:54:35 +0100"},{"sha":"806bc656a099dd02f87bc4597fb8fefa7e9e4b0d","message":"add-linkType-to-ReferenceField","author":{"name":"leesei","email":"leesei@gmail.com"},"date":"Tue, 21 Mar 2017 02:46:28 +0800"},{"sha":"e38ad4fa3647bb8192e4a4ab433949aedd3c0d0b","message":"Merge-branch-mantis-445-into-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Mar 2017 22:27:24 +0100"},{"sha":"6c8a7d84291ab22ee58dc2a09b865b588345ea27","message":"USe-normal-caps","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Mar 2017 22:26:08 +0100"},{"sha":"f9333469b9867cece887247bb5f0b886804f7405","message":"Refactor-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Mar 2017 22:21:21 +0100"},{"sha":"c5af78a399a15da82a558235bd0adf117f185f65","message":"Throw-error-when-REST-response-does-not-contain-the-error-key","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Mar 2017 22:00:09 +0100"},{"sha":"54e064e6570f6bf7590022a2f9e96e1a0f201f05","message":"Fix-list-layout-breaking-when-there-are-more-than-3-filters","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Mar 2017 21:52:07 +0100"},{"sha":"eb5a39ba756962c010127494118f5a56f3e5c0af","message":"Filter-Display-Empty-Result","author":{"name":"Paul Richards","email":"paul@issue-track.org"},"date":"Mon, 20 Mar 2017 19:00:17 +0000"},{"sha":"e5fc84b713431ba762a38c3c97498da9e645e195","message":"Make-endpoint-name-tip-clearer","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Mar 2017 18:03:20 +0100"},{"sha":"b9047aed84cb95a2681c39940dae38e106cf9921","message":"Merge-pull-request-483-from-leesei-docs","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Mar 2017 17:49:20 +0100"},{"sha":"66926b9a6a31c5c285c69307095bddb587aaeb21","message":"Merge-pull-request-472-from-marmelab-allow-image-removal","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Mar 2017 17:45:55 +0100"},{"sha":"9fcb6774901daeb7203659bf3c45144f14cfccbe","message":"Fix-tests","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 20 Mar 2017 17:33:30 +0100"},{"sha":"e4974374d005717f96c10d55d29b2917ecf1339d","message":"Merge-branch-next-into-allow-image-removal","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 20 Mar 2017 17:02:12 +0100"},{"sha":"e16e2e7b4b065aa2b4e9fc7aed6c2fdda6452f63","message":"Merge-branch-master-into-next","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 20 Mar 2017 16:58:02 +0100"},{"sha":"95d91c069954bc4fcce8d92d5a6ba0f9e638e671","message":"Code-review","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 20 Mar 2017 16:35:15 +0100"},{"sha":"1b69005b10a7abb5811fc882319f11d21cf20373","message":"update-Actions-docs","author":{"name":"leesei","email":"leesei@gmail.com"},"date":"Mon, 20 Mar 2017 23:16:39 +0800"},{"sha":"7c0a5821e15d945f728c09d0397eed49c15cd6c6","message":"fix-typo","author":{"name":"leesei","email":"leesei@gmail.com"},"date":"Mon, 20 Mar 2017 23:16:11 +0800"},{"sha":"6662c6d23b53618f8f674be1e61f585769605ab7","message":"fix-semicolon","author":{"name":"leesei","email":"leesei@gmail.com"},"date":"Mon, 20 Mar 2017 23:15:55 +0800"},{"sha":"467013832a26f8f4857f3ee206fccd7082f0ca0d","message":"Merge-pull-request-480-from-damiansimonpeter-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Mar 2017 16:00:02 +0100"},{"sha":"760de21e4d5678f4aff04fcf047dadf727f2df73","message":"Point-Users-link-to-the-URI-on-JSONPlaceholder","author":{"name":"Damian Simon Peter","email":"simon.peter@andela.com"},"date":"Mon, 20 Mar 2017 13:36:49 +0100"},{"sha":"26ff7b3522980e5e49367f5d39c28910588ff3e2","message":"Improve-design-of-image-input-preview-delete-button","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 20 Mar 2017 11:06:08 +0100"},{"sha":"bd0ddef8cc7b48843bca0edc4eed6785ee879d23","message":"Replace-carrets-by-tildes","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 20 Mar 2017 09:27:31 +0100"},{"sha":"55efe08dbd961672328955ae411d9bcd3f8e9204","message":"Add-some-unit-tests","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Sun, 19 Mar 2017 22:31:46 +0100"},{"sha":"a0c0c9545cf3292e9245fdf3e762bff3db0463be","message":"Polyfill-File-API-for-tests","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 17 Mar 2017 17:04:19 +0100"},{"sha":"6fc5a9366d5337d95cb8b500790836126da5257c","message":"Merge-pull-request-462-from-DjLeChuck-input-image-custom-label","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 17 Mar 2017 17:03:42 +0100"},{"sha":"a877c18b7bf7567165ddc5553ead02bb016d880c","message":"Update-doc-to-specify-the-new-prop","author":{"name":"Vivien","email":"vivien@lechaudron.io"},"date":"Fri, 17 Mar 2017 16:43:34 +0100"},{"sha":"dfb654ba9214095f9b76f78eaa03b07be4d98291","message":"Rename-dropAreaLabel-to-placeholder","author":{"name":"Vivien","email":"vivien@lechaudron.io"},"date":"Fri, 17 Mar 2017 16:32:19 +0100"},{"sha":"6854823d01b256398647013fa62259bbdf11e7db","message":"Allow-use-of-custom-label-for-ImageInput-drop-area","author":{"name":"Vivien","email":"vivien@lechaudron.io"},"date":"Fri, 17 Mar 2017 09:58:41 +0100"},{"sha":"ee2363c028711e2895384cdc1d8575e7e15749ed","message":"Prepare-v0.9.2","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 17 Mar 2017 16:36:25 +0100"},{"sha":"86e674f357462b8b6b722d11ee242753e5e1a829","message":"Merge-pull-request-465-from-marmelab-fix_middleware_order","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 17 Mar 2017 16:29:08 +0100"},{"sha":"a23f4c80bb2e47c8c07009217b750e7efd47d2db","message":"Merge-pull-request-461-from-marmelab-mobile_pagination","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 17 Mar 2017 16:25:16 +0100"},{"sha":"d8c34b4a39018fdc3d3ca3b6cb397d7af286dd86","message":"Merge-pull-request-466-from-s33m4nn-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 17 Mar 2017 16:24:15 +0100"},{"sha":"f791e006aef65b575e380798adbc0fb86a38f9c0","message":"Allow-to-remove-a-picture-from-image-input-previews","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 17 Mar 2017 16:24:00 +0100"},{"sha":"55f7b76c8e8a23d1b53e415765d2fa07854adce9","message":"Merge-pull-request-468-from-LoicMahieu-fix-ie","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 17 Mar 2017 16:21:14 +0100"},{"sha":"86353582f217fb9c9c048c1fd4715ce1720f7987","message":"Layout-fix-IE11-compatibility","author":{"name":"Loïc Mahieu","email":"mahieuloic@gmail.com"},"date":"Fri, 17 Mar 2017 15:17:20 +0100"},{"sha":"48f730b8f0b8a1a1312102bec5edaee0df40059a","message":"Add-mention-of-Hungarian-translations","author":{"name":"Zéman Gábor","email":"zeman.gabor@gmail.com"},"date":"Fri, 17 Mar 2017 15:09:08 +0100"},{"sha":"43e9c746a5749835d9ea4fadfb25072c4852c4fa","message":"Add-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 17 Mar 2017 14:30:38 +0100"},{"sha":"83107126d41b02961d9dfbd9ace1571da376ee5a","message":"Merge-pull-request-464-from-marmelab-image-drop-preview-fix","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 17 Mar 2017 12:14:36 +0100"},{"sha":"3fe492f712bb67e468cf87562795d4383a14f823","message":"apply-saga-before-router-to-be-sure-to-get-all-router-action","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Fri, 17 Mar 2017 11:25:08 +0100"},{"sha":"7bca5a14e4949d2ab8456b69a21ac1d01bbd4536","message":"Fix-image-input-previews-on-drop","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 17 Mar 2017 10:58:51 +0100"},{"sha":"26e1a0c0ae44ab43733f92fa2e9cb55eddacf181","message":"Merge-pull-request-457-from-marmelab-translate_error_messages","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 17 Mar 2017 09:40:26 +0100"},{"sha":"158b41d63dff000ed0b5c60eacf37e4717df978e","message":"Improve-look-and-feel","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 17 Mar 2017 09:11:55 +0100"},{"sha":"bcc55064685d4b404fcb4624317c0426055228d1","message":"Fix-pagination-on-mobile","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 17 Mar 2017 08:59:49 +0100"},{"sha":"4cc11b3b4b6adc26dfcab35826da6a37f02cfeaa","message":"Translate-error-messages","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 16 Mar 2017 17:41:20 +0100"},{"sha":"7ef255139d4f8c45092e5d2f727bf8766fdc75fc","message":"Merge-pull-request-453-from-marmelab-SelectInput_validation","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 16 Mar 2017 11:37:11 +0100"},{"sha":"6542c726db24dfe8d2e9dc9b058f787b40c40d60","message":"Fix-SelectInput-error-text-position","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 16 Mar 2017 09:27:38 +0100"},{"sha":"412d588195e41a49345b3a62de93384fe4029200","message":"Merge-pull-request-57-from-marmelab-e2e","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 15 Mar 2017 17:36:52 +0100"},{"sha":"5b2631f6752baa4819cbf3e9a5dad8fc5e7485b6","message":"Remove-useless-environment-variable","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 15 Mar 2017 15:36:21 +0100"},{"sha":"91dad392268d8d50520cab3683d758739d6672dd","message":"Add-more-logic-to-the-test-Pages","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 15 Mar 2017 15:33:14 +0100"},{"sha":"0a35a0c5a2b720de3a292021e9d4a47489104afd","message":"Move-navigate-function-on-top-of-page","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 15 Mar 2017 14:50:34 +0100"},{"sha":"6e60e21369f55b351574e30c2b46e99c0fc5adc3","message":"Add-basic-e2e-test-for-EditPage","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 15 Mar 2017 14:40:32 +0100"},{"sha":"bd3fa9bf9feedb0b9b685e76f9534bd0402af544","message":"Speed-up-build","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 15 Mar 2017 09:48:22 +0100"},{"sha":"a1ed3110083d99ece7f3830928208c0c98cc2182","message":"Trying-to-make-the-build-pass","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 15 Mar 2017 09:45:17 +0100"},{"sha":"a31c26df093637139254257f8d3a6cc42f201d1b","message":"Add-e2e-tests-to-build","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 15 Mar 2017 09:36:46 +0100"},{"sha":"eb331ef845f274d1035dbf4bbabd49b7942f93be","message":"Fix-last-test","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 14 Mar 2017 22:35:50 +0100"},{"sha":"3c907250353655d96d61a621f0821eeff809a915","message":"Fixing-e2e-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 14 Mar 2017 21:53:58 +0100"},{"sha":"ab8c350e0f6812c47196ab1485d8e43020ceb907","message":"More-import-goodness","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 4 Jan 2017 14:53:12 +0100"},{"sha":"b31c767d516ac30082ca9bf93eba68c6711a697b","message":"es7-FTW","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 4 Jan 2017 14:46:21 +0100"},{"sha":"4526683715f5d3757a2f29567305b8d22606b3f5","message":"Using-chromedriver-instead-of-selenium-standalone","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 4 Jan 2017 14:37:03 +0100"},{"sha":"12e1efb464c5197434923fcd3109e689aa2f3f27","message":"Allow-to-skip-build-in-e2e-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 4 Jan 2017 14:28:56 +0100"},{"sha":"cd77a45581b627e8ce5e6ed47806ef66e7de6676","message":"Remove-some-E2E-tests-randomness","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 3 Oct 2016 18:01:02 +0200"},{"sha":"899a5d3034ed4cec55b5e1bd57f3fb858997b99e","message":"Add-some-currently-failing-E2E-tests-for-list-filtering","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 30 Sep 2016 19:01:44 +0200"},{"sha":"131905e6c4f19a2227c40f58af4a452f0b99ee07","message":"Bootstrap-E2E-tests","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 30 Sep 2016 16:13:32 +0200"},{"sha":"893819ab51d9912b2f773f249e91e3feb85b3888","message":"Add-aor-parseserver-client","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 15 Mar 2017 14:27:47 +0100"},{"sha":"b181300ebacb593561519359a7bd0a6fb267e024","message":"Create-CONTRIBUTING.md","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 15 Mar 2017 12:13:08 +0100"},{"sha":"f8d405b33ac872216b165b13c65a31ea32789b2b","message":"Merge-pull-request-420-from-marmelab-field_validate_redux_form","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 14 Mar 2017 17:35:53 +0100"},{"sha":"625da5f69e90a459a50cef18390ce35c553b0d18","message":"Merge-pull-request-431-from-thedersen-initial-state","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Mar 2017 23:05:41 +0100"},{"sha":"fdc4645ad940ba71dd111c58afcedd9d6563d328","message":"Add-unit-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Mar 2017 22:44:41 +0100"},{"sha":"cd598cfe7f7c6aec4dee9b64a21ff91f8fbccba0","message":"Use-redux-form-native-validation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 10 Mar 2017 21:26:52 +0100"},{"sha":"f1b665a8df56a090c2277934ec08a90b57ed66ae","message":"Fixed-doc-title-again","author":{"name":"thedersen","email":"thedersen@gmail.com"},"date":"Mon, 13 Mar 2017 19:22:19 +0100"},{"sha":"1079c8fa9caccdc9487383b9a7bb288c94290ecd","message":"Fixed-doc-title","author":{"name":"thedersen","email":"thedersen@gmail.com"},"date":"Mon, 13 Mar 2017 19:20:04 +0100"},{"sha":"ce23cea38a49b8bd42366e08ce5f62c7b41f4feb","message":"Pass-initialState-to-createStore","author":{"name":"thedersen","email":"thedersen@gmail.com"},"date":"Mon, 13 Mar 2017 19:18:34 +0100"},{"sha":"8a9ef2b5a2b66d8fd57ddb68bd1f46329249cc4a","message":"Merge-pull-request-419-from-marmelab-export_mui_root","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Sat, 11 Mar 2017 19:09:17 +0100"},{"sha":"6da435518065caf54197bf782b452b9277f7f871","message":"Simplify-imports-by-exporting-mui-in-te-project-root","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 10 Mar 2017 17:52:01 +0100"},{"sha":"cda9bb35518cb856f46cf7abbd39d90e26d21f08","message":"Prepare-v0.9.1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 10 Mar 2017 17:09:50 +0100"},{"sha":"44f15e884fbb471fa5cb29fc9871ff9b7ba087b0","message":"Merge-pull-request-418-from-marmelab-fix_redirection_after_creation","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Fri, 10 Mar 2017 15:31:00 +0000"},{"sha":"14f497b5958231b75e6b360d39ee93c236c71c34","message":"Fix-redirection-after-creation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 10 Mar 2017 16:26:46 +0100"},{"sha":"46010e4f364da8e7640769ffe08c1e3c45bf71dc","message":"Merge-pull-request-412-from-kimkha-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 10 Mar 2017 11:24:02 +0100"},{"sha":"dd415380858afdbf7f1a250be0929e64e2d445bc","message":"Merge-pull-request-413-from-wadjeroudi-patch-2","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 10 Mar 2017 10:46:26 +0100"},{"sha":"1b00b29532adacd9b4eae5b5f39704ae1f194c13","message":"jsonServer-GET_MANY-implementation-with-new-format","author":{"name":"wadjeroudi","email":"wahid@vivisci.com"},"date":"Fri, 10 Mar 2017 10:14:28 +0100"},{"sha":"33b52e89baf8cf2de4677c944ad8f49a4b758db7","message":"Merge-pull-request-409-from-velociwabbit-master","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 10 Mar 2017 09:36:21 +0100"},{"sha":"5e79f4c84d429daa4f0784e5e453d567277e665f","message":"Add-Loopback-like-REST-client","author":{"name":"Nguyễn Kim Kha","email":"nkimkha@gmail.com"},"date":"Fri, 10 Mar 2017 14:08:33 +0700"},{"sha":"99978680bd3abccea0e4f2731f23076169adaca9","message":"Add-files-via-upload","author":{"name":"velociwabbit","email":"jimreillyemail@gmail.com"},"date":"Thu, 9 Mar 2017 15:32:53 -0800"},{"sha":"d6a020d921ddb71b0f70fd94dd720779b0618f4c","message":"Publish-v0.9.0","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Mar 2017 16:47:34 +0100"},{"sha":"ef3fafaa73427ea1e0a26d3f73a05f31cd7a0bcc","message":"Merge-pull-request-405-from-marmelab-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Mar 2017 16:45:28 +0100"},{"sha":"6a9f52078ff7d9bf471d76d3141f1f09b6e5b75c","message":"Update-changelog","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Mar 2017 16:37:03 +0100"},{"sha":"b8c3163352439fbbbf89004d1f531a8cfa10c078","message":"Merge-pull-request-406-from-kimkha-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Mar 2017 16:36:00 +0100"},{"sha":"9ca60fd15858c484e24af8559c5a7a99ae95c9a6","message":"Add-Vietnamese-language","author":{"name":"Nguyễn Kim Kha","email":"nkimkha@gmail.com"},"date":"Thu, 9 Mar 2017 22:33:07 +0700"},{"sha":"fac3b917f5c44e4a1248b5ec1e7023fa8eb067bf","message":"Reorder-changelog","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Mar 2017 16:26:07 +0100"},{"sha":"76c388581cb41b33d230fb2c7a853fe7a7a9ab7c","message":"Remove-duplication-in-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Mar 2017 16:25:41 +0100"},{"sha":"c309d60f4b376be46b05feb90e0d546a148f9335","message":"Add-Changelog","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Mar 2017 14:08:36 +0100"},{"sha":"86fb76637235c3c719141c05b030da77ea243211","message":"Merge-branch-master-into-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Mar 2017 13:52:48 +0100"},{"sha":"e4f99a9c87865e0c04cf871967b3e05bf4866b09","message":"Merge-pull-request-402-from-marmelab-better_custom_menu","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 9 Mar 2017 13:49:05 +0100"},{"sha":"ae8ada85b295fce28a33937e259bf0b64f0d77dc","message":"No-need-for-alink-to-dasboard-now-that-we-have-a-menu-for-that","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Mar 2017 11:48:29 +0100"},{"sha":"0f09afe72de5a1041da6a2b90056a9a16ff32392","message":"Add-dashboard-MenuItem-on-top-of-Menu-when-relevant","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Mar 2017 10:44:27 +0100"},{"sha":"4c0eab0a352b7591df326b33970318333facab46","message":"Refactor-Responsive-View-Title","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Mar 2017 23:46:55 +0100"},{"sha":"5d158bdce226ad3c63334d043d5ce63b50fd716f","message":"Mention-onMenuTap-in-the-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Mar 2017 21:50:03 +0100"},{"sha":"9d9b9adc7340391b5e8bc128c9a7265586b384ad","message":"Separate-Menu-and-Sidebar-components","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Mar 2017 21:45:19 +0100"},{"sha":"60eabe8af414ccf445125fdf823716866b97398a","message":"Remove-duplication-in-custom-layout-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Mar 2017 12:50:56 +0100"},{"sha":"fb277288f16b20a13273abeb45c8a76fa95d8f79","message":"Merge-pull-request-394-from-Natsuke-auth-login-ux-improvement","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Wed, 8 Mar 2017 11:28:00 +0100"},{"sha":"ec96035defb8176c860739bf74b2100890f24c1d","message":"Add-test-on-ui-reducer","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Mar 2017 11:18:57 +0100"},{"sha":"389a16292a279f02b462d6c947bd45b4631aa819","message":"Merge-pull-request-390-from-marmelab-responsive","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 8 Mar 2017 11:17:51 +0100"},{"sha":"9e74ae7e0c3e54053ebfb2990bdcb0424eb23aa6","message":"Login-page-imporve-UX-with-form-lock-and-loader","author":{"name":"Andy Vanbutsele","email":"andy.vanbutsele@gmail.com"},"date":"Tue, 7 Mar 2017 14:27:07 +0100"},{"sha":"6b85776412b2071648731c4ed41b656bd4f145b5","message":"Revert-test","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Mar 2017 11:12:21 +0100"},{"sha":"52067b817ce956f62a37c54f681905e3c7844dab","message":"Remove-inline-styles-from-Show-component","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Mar 2017 11:10:45 +0100"},{"sha":"98264cfc49d6162a47b7451d12cbc2e1b76c8557","message":"Add-Responsive-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Mar 2017 11:05:41 +0100"},{"sha":"75aa6a9021168753901bf81ea46853bcf85433a3","message":"Fix-test","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Mar 2017 10:04:43 +0100"},{"sha":"664e30c81fdd8e92a1e7428e943ea8003d652d7d","message":"Make-edition-toolbar-responsive","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Mar 2017 09:57:27 +0100"},{"sha":"50e3b9aea4943dafca78959077683e0a09730449","message":"Make-List-action-bar-responsive","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Mar 2017 09:09:51 +0100"},{"sha":"d8558778f10b00c5e06640be638a3dff5e3e924f","message":"Merge-pull-request-399-from-JonatanSalas-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Mar 2017 23:56:41 +0100"},{"sha":"10c3b046e4c5abc38e1a5d5dcb8930787131d473","message":"Prepare-v0.8.4","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Mar 2017 23:52:51 +0100"},{"sha":"6c9ab2ef0c6dd1683b53792d901c273c979d228d","message":"Update-translation.md","author":{"name":"Jonatan E. Salas","email":"jonatansalas@live.com.ar"},"date":"Tue, 7 Mar 2017 17:31:36 -0300"},{"sha":"5156651e5c41a0f643e29120fc1fe625f33492bd","message":"Fix-CustomApp-install-instructions","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Mar 2017 11:58:11 +0100"},{"sha":"7e7f05e8d40b4ae23c678ae60ece4957d79936a2","message":"Add-responsive-meta","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Mar 2017 10:44:24 +0100"},{"sha":"193554f40ee42d19ac775d90858a90fac4d5e218","message":"Coding-standards","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Mar 2017 10:43:52 +0100"},{"sha":"165093a0b7f38bc727a6e744177317cfaee344e3","message":"Merge-pull-request-388-from-cytomich-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Mar 2017 10:41:20 +0100"},{"sha":"2e2ad318874af09685cff970051a10c93ba9d137","message":"Merge-pull-request-380-from-thedersen-silent-actions","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Mar 2017 10:37:55 +0100"},{"sha":"f51f6a10aa72143c8899c273891d778f6b8c7189","message":"Merge-pull-request-368-from-marmelab-async_validation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Mar 2017 10:36:46 +0100"},{"sha":"609bac9df5dcb3dfb8b17c572ab97b305d2151cb","message":"Typo-fix-s-or-the-new-value-or-the-new-value","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Tue, 7 Mar 2017 09:35:58 +0000"},{"sha":"2dc4153160078be5ce8fe9fce1e3dabde6e8e313","message":"Typo-fix-s-or-the-current-value-or-the-current-value","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Tue, 7 Mar 2017 09:35:56 +0000"},{"sha":"f3461641b844e878340bf4284b512c68007d7d11","message":"Typo-fix-s-Hence-the-The","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Tue, 7 Mar 2017 09:35:53 +0000"},{"sha":"6f8986d8ae5b894d6876b11bbeab28931e577657","message":"Merge-pull-request-393-from-marmelab-better_image_preview","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Mar 2017 10:32:09 +0100"},{"sha":"058e673b30ca158f592fa9e9ccc51b3f29380756","message":"Update-image-preview-when-dispatching-new-form-value","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 7 Mar 2017 10:27:16 +0100"},{"sha":"db1dc7e35f0e0441b7dd9096d555296136df8f76","message":"Allow-responsive-alternative-for-datagrid","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Mar 2017 09:29:03 +0100"},{"sha":"35fb719cd8b4b182e67fa5727f52c470a7bf282f","message":"add-simple-test-for-getDefaultValues","author":{"name":"Ilya Akulenko","email":"cytomich@gmail.com"},"date":"Mon, 6 Mar 2017 23:15:30 +0300"},{"sha":"458e6e6302e32eb4b7736f69378a70af25e51683","message":"Always-show-notification","author":{"name":"thedersen","email":"thedersen@gmail.com"},"date":"Mon, 6 Mar 2017 20:37:51 +0100"},{"sha":"79198d6a16d6b720922ddf57ac1fb8944dba35d8","message":"Update-menu-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 6 Mar 2017 18:27:00 +0100"},{"sha":"9d9368b6f27983f46d360eaa47b075a4b45c308e","message":"Show-AppBar-in-Delete-view-mobile-version","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 6 Mar 2017 18:14:32 +0100"},{"sha":"335389cc0f06dff3ee18016bc963d07a1de62491","message":"Add-missing-file","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 6 Mar 2017 17:29:47 +0100"},{"sha":"dfc1d96e0e34eea134fd57cc5c2dee617aba4cf7","message":"Make-AppBar-responsive-ctd","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 3 Mar 2017 18:31:40 +0100"},{"sha":"66212b13fe2152db40eab3c02db50a17ddc5f80e","message":"Move-sidebar-state-to-Redux-store","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 3 Mar 2017 17:41:36 +0100"},{"sha":"0698fa4e5a8f816df44ddbcf8c10a779b5c22763","message":"Make-AppBar-responsive","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 3 Mar 2017 10:28:21 +0100"},{"sha":"045f03a2b0cd0442244e62d5389d50d93372a77c","message":"Make-menu-responsive","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 3 Mar 2017 09:35:40 +0100"},{"sha":"c8674637660ba147344d0cb1eca95e5c8902d7b9","message":"More-consistent-variable-renaming-with-redux-form","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 6 Mar 2017 17:50:35 +0100"},{"sha":"f94e70d4f846a1bdf4d2caec3acd207d6c597550","message":"Add-some-docs-about-onBlur-onFocus-and-onChange","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 6 Mar 2017 17:49:44 +0100"},{"sha":"17a2066ed18f19892952f715fb5e3f51b4f75132","message":"Merge-pull-request-385-from-marmelab-rest_data","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Mon, 6 Mar 2017 16:56:29 +0100"},{"sha":"be7d201b811467c0c0942a09baecde2d4d4fe420","message":"Merge-pull-request-387-from-thedersen-auth-redirect","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 6 Mar 2017 16:54:03 +0100"},{"sha":"9d4da3604ada5a8295546d084a41787e1cb8d0a8","message":"Merge-pull-request-391-from-thedersen-cancel-previous","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 6 Mar 2017 16:52:26 +0100"},{"sha":"12ad9fac6613029f682fc9250a1c62747fc97c73","message":"Merge-pull-request-392-from-FallDi-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 6 Mar 2017 16:42:06 +0100"},{"sha":"08f6ac3d3d16feae7c78beea3ec51771fa5ca303","message":"spellfix-tyle-type","author":{"name":"Nikita","email":"nikita.arykov@gmail.com"},"date":"Mon, 6 Mar 2017 17:31:32 +0200"},{"sha":"97b45dbc6d1abdd0c2e09a338288cd77dff85e07","message":"Allow-to-tune-onChange-onFocus-and-onBlur-on-NumberInputs","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 6 Mar 2017 15:17:35 +0100"},{"sha":"d7da2335a3b69fcefa0accbdbe63e2f83ffc8792","message":"Allow-overriding-cancelPrevious-on-crudGetList","author":{"name":"thedersen","email":"thedersen@gmail.com"},"date":"Mon, 6 Mar 2017 15:12:02 +0100"},{"sha":"d53bc54b01c88535096c938993fe35ab8b377156","message":"Revert-change-to-crudGetList","author":{"name":"thedersen","email":"thedersen@gmail.com"},"date":"Mon, 6 Mar 2017 15:10:19 +0100"},{"sha":"ef38dddd4fb340a7ee14ea68b644acf5b5e03fb0","message":"Documented-redirectTo-in-auth-check.-Added-a-couple-of-missing-imports","author":{"name":"thedersen","email":"thedersen@gmail.com"},"date":"Mon, 6 Mar 2017 15:07:26 +0100"},{"sha":"bb74f48adc015a5e186834ce893c1d3868db9e7c","message":"Merge-pull-request-389-from-josx-master","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 6 Mar 2017 09:14:20 +0100"},{"sha":"8d2b0e4ecb6841dc447c4d8960b7351080de541e","message":"RFR-Add-link-aor-feathers-client-in-doc","author":{"name":"José Luis Di Biase","email":"josx@interorganic.com.ar"},"date":"Sat, 4 Mar 2017 01:52:53 -0300"},{"sha":"742a5e7255f1aa2d16d68098784d62eefda0cb30","message":"Allow-to-override-TextInput-onChange-onBlur-and-onFocus","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 3 Mar 2017 14:57:58 +0100"},{"sha":"561a7f2edb38f6739494f325af0bab33965dde4b","message":"fix-incorrect-defaultValue-assignment-for-nested-resource-attributes-in-SimpleForm-input-components","author":{"name":"Ilya Akulenko","email":"cytomich@gmail.com"},"date":"Fri, 3 Mar 2017 14:56:22 +0300"},{"sha":"414dc36a4ab7e544bfcf604f5efe38fcfc554e7f","message":"Fixed-typo","author":{"name":"thedersen","email":"thedersen@gmail.com"},"date":"Fri, 3 Mar 2017 12:41:16 +0100"},{"sha":"0d7c39a7fd0737b0a61ae1338f869f7b93a47294","message":"Allow-to-override-redirect-path-when-auth-check-fails","author":{"name":"thedersen","email":"thedersen@gmail.com"},"date":"Fri, 3 Mar 2017 12:35:08 +0100"},{"sha":"b34240fd842f92520cf6fa053e2ec2ff9e5e0962","message":"Renamed-silent-to-redirect-and-changed-default-value-to-true","author":{"name":"thedersen","email":"thedersen@gmail.com"},"date":"Fri, 3 Mar 2017 12:23:19 +0100"},{"sha":"f9e6fa93d37baa101f48cd203d8d5d72e9b55ec1","message":"Fix-onBlur-and-onFocus-events-on-Number-and-Text-inputs","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 3 Mar 2017 11:30:56 +0100"},{"sha":"cd1b4fd0b3f02e8fb9c6b5e8358337a7ea672032","message":"use-new-jsonRestClient","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 3 Mar 2017 10:50:18 +0100"},{"sha":"4cafac4de7ed44ffbb858321ae0e4b08934b20b3","message":"BC-Break-Rest-response-always-contains-a-data-key","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 3 Mar 2017 09:00:30 +0100"},{"sha":"e9d9500f962d422728606d746782f12edabfe14f","message":"Merge-pull-request-381-from-mstmustisnt-patch-1","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Thu, 2 Mar 2017 16:31:52 +0100"},{"sha":"9f18b7bd4d266e874ca67665e02b62be1f4aea9c","message":"Add-Link-to-Hebrew-Translations","author":{"name":"Yevheniia Rakhmatova","email":"orristurmurminintur@gmail.com"},"date":"Thu, 2 Mar 2017 17:14:52 +0200"},{"sha":"05998ba52883c894d34870bc5e9bdb88395c1b36","message":"Allow-to-execute-crud-actions-silent","author":{"name":"thedersen","email":"thedersen@gmail.com"},"date":"Thu, 2 Mar 2017 14:01:07 +0100"},{"sha":"6536806f62016b8f8906e96ff31612d737531f61","message":"Merge-pull-request-378-from-marmelab-jpetitcolas-patch-2","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 2 Mar 2017 13:50:37 +0100"},{"sha":"e713cd867658a1d26fb1185ca368132087b00a75","message":"No-need-to-copy-CSS-anymore","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Thu, 2 Mar 2017 11:43:56 +0100"},{"sha":"1e33edf1a519467c3a8d19adb9e25be7b210229d","message":"Merge-pull-request-369-from-marmelab-custom_menu","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 28 Feb 2017 14:30:58 +0100"},{"sha":"329ad37c1b1f65f90a2a249bb820caa5527d6c43","message":"Allow-to-customize-menu-without-iverriding-the-layout","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 28 Feb 2017 00:11:39 +0100"},{"sha":"56afc3c96c8c92a184593ad4b1aac845e9e56f56","message":"Merge-pull-request-361-from-marmelab-notify_http_error","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 24 Feb 2017 09:56:33 +0100"},{"sha":"23304f4dce03a14402a6ba43db7db995f7af5ac0","message":"Show-notification-for-server-error-even-when-body-is-empty","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 24 Feb 2017 09:25:42 +0100"},{"sha":"b89098c87873d8b1691191aaf46682cd6b857da8","message":"Release-v0.8.3","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 23 Feb 2017 11:13:05 +0100"},{"sha":"7fab9142a14b6d4308456a612ad5f70da76f29e2","message":"Merge-pull-request-353-from-cytomich-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Feb 2017 23:59:46 +0100"},{"sha":"b11dc7b3b30eae6c2da22477de49e94343aa325b","message":"Merge-pull-request-352-from-SilentKernel-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Feb 2017 23:57:56 +0100"},{"sha":"48c440f23d6ed03d65e38f45e321daa4093f5ea5","message":"russian-translation-link","author":{"name":"Ilya Akulenko","email":"cytomich@gmail.com"},"date":"Wed, 22 Feb 2017 21:08:11 +0300"},{"sha":"3259f1be16717072c92109ea66513c0de54f4eb5","message":"One-forgot-in-the-tutorial-LOGIN_CHECK","author":{"name":"SilentKernel","email":"ludovic.frank@protonmail.com"},"date":"Wed, 22 Feb 2017 18:49:32 +0100"},{"sha":"38794ea2f67ee62a5704982745fb53a369689d2f","message":"Merge-pull-request-351-from-marmelab-update_patch","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 22 Feb 2017 18:13:44 +0100"},{"sha":"e2e9a66955e262627eb4b319d511276aaf5b77b9","message":"Pass-old-record-in-CRUD_UPDATE-action-payload","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Feb 2017 17:05:40 +0100"},{"sha":"2663a02033786f57141373526c898c517f9ae8f6","message":"Merge-pull-request-350-from-szappacosta-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Feb 2017 16:16:51 +0100"},{"sha":"57a8c5be24abc21b8339874817939b0c594e1cc0","message":"Fix-typo-on-Json-server-rest-link","author":{"name":"Sébastien Zappacosta","email":"sebastien.zappacosta@gmail.com"},"date":"Wed, 22 Feb 2017 16:03:20 +0100"},{"sha":"7c01407ebdec106df3231d0cf404080a7dfdab69","message":"Merge-pull-request-346-from-marmelab-refresh_on_edit","author":{"name":"JulienDemangeon","email":"julien@demangeon.fr"},"date":"Wed, 22 Feb 2017 10:47:45 +0100"},{"sha":"dfc904ea696d7d08460f7a8b589b309f50434f6d","message":"Merge-pull-request-348-from-marmelab-demo_video","author":{"name":"JulienDemangeon","email":"julien@demangeon.fr"},"date":"Wed, 22 Feb 2017 10:45:58 +0100"},{"sha":"eb1cec82214f9bbc20829411bfe64c34b1f90d6d","message":"Add-demo-video-in-doc-and-GitHub-homepage","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Feb 2017 09:50:43 +0100"},{"sha":"266c38be7d4d7d47c635d99328fb935adc4d1c5b","message":"Merge-pull-request-343-from-marmelab-faster_rendering","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 22 Feb 2017 09:42:17 +0100"},{"sha":"ee499a4aac4bb7ff8b73f1c99cc5ade677e26f9a","message":"Fix-Edit-view-shows-stale-data","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 22 Feb 2017 08:57:33 +0100"},{"sha":"6e82e3a6f47b6a74bf513370de30cb67f751e78a","message":"Prepare-v0.8.2-release","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 21 Feb 2017 23:20:57 +0100"},{"sha":"b82aa0983ec4a3b70e763f76ca96e773396f70e4","message":"Merge-branch-wadjeroudi-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 21 Feb 2017 23:10:30 +0100"},{"sha":"7099e8c741a3a7dce166cb14e5146cc8fcad2974","message":"Rename-HttpError-and-make-it-standalone","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 21 Feb 2017 23:07:29 +0100"},{"sha":"db46a08547eeda562ae8867f57ed096e43a67b1e","message":"Improve-loader-rendering-speed","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 21 Feb 2017 22:23:49 +0100"},{"sha":"4fc0eaddadc89f0df9a1a003ee8914aae6c267c5","message":"Fix-selectable-table","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 21 Feb 2017 18:07:25 +0100"},{"sha":"b164a8617044c7767d79e1d53fac71f863d8d5ad","message":"Fix-regression-in-logout-button-position","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 21 Feb 2017 16:52:39 +0100"},{"sha":"6c66539b18cedb275695cdff5611c6e4671df260","message":"Missing-status-in-fetch-when-error-is-thrown","author":{"name":"wadjeroudi","email":"wahid@vivisci.com"},"date":"Tue, 21 Feb 2017 12:35:04 +0100"},{"sha":"43f033eadb90834f2dee79108e84903a8bdcf72a","message":"Add-link-to-powershell-script-for-building","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Feb 2017 18:02:33 +0100"},{"sha":"ae8fcaa7c49247f78ff424290e981f049d30cb42","message":"Merge-pull-request-336-from-marmelab-default_locale","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Feb 2017 15:59:15 +0100"},{"sha":"cd6958099e7ceaf908baa1d8ef5e5f3029f49e0e","message":"Allow-to-specify-default-locale","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 20 Feb 2017 15:55:33 +0100"},{"sha":"a6e3d383a19e3dec75d360a4a4428582e9d05d37","message":"Merge-pull-request-334-from-marmelab-custom_app_doc","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Sun, 19 Feb 2017 15:57:04 +0100"},{"sha":"d61d0d2e97de45df0f1911104851b56e2ab96999","message":"Update-custom-app-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sun, 19 Feb 2017 15:42:31 +0100"},{"sha":"9a96a25b03b7b75af1b7b3f5a5901a2bc510adf8","message":"Merge-pull-request-332-from-marmelab-back_to_mui_table","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Sun, 19 Feb 2017 08:46:06 +0100"},{"sha":"7c4bcdb1ae52b6a90ab96381e144210ace8781c5","message":"Move-back-to-mui-Table","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 18 Feb 2017 10:17:08 +0100"},{"sha":"ffc752de99de80af324a7274a5b283fad0c9dbb2","message":"Merge-pull-request-328-from-marmelab-toggle_sidebar_2","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Sat, 18 Feb 2017 14:26:54 +0100"},{"sha":"a53022d1fb5479f49f18e8936935fc488eee90fd","message":"Merge-pull-request-331-from-marmelab-fix_select_arrow","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Sat, 18 Feb 2017 14:25:03 +0100"},{"sha":"533ff3ebd6bdd81e42b4f2861d97664241276b06","message":"Merge-pull-request-330-from-marmelab-onenter_customapp","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Sat, 18 Feb 2017 14:24:34 +0100"},{"sha":"3985a13b0c912badfaab4df0f9c0866d8aa32aee","message":"Merge-pull-request-329-from-marmelab-scroll_to_top","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Sat, 18 Feb 2017 14:24:01 +0100"},{"sha":"1af3598026e0ca183e56cba3aad8ba9c546fce0b","message":"Fix-SelectInput-arrow-click-hides-input","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 18 Feb 2017 11:33:27 +0100"},{"sha":"91711e1dac36f84bb45cb64c7977e5afdb90e174","message":"Simplify-cutsom-app-setup","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 18 Feb 2017 10:55:09 +0100"},{"sha":"042ecaa49d582f5c59afe191687208f69a4f0340","message":"Add-mention-of-German-translations","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 18 Feb 2017 10:49:31 +0100"},{"sha":"2325b6d68e010a00085ae4fe1b56ac4c154a0d90","message":"Fix-scroll-to-top-during-natigation-when-auth-is-disabled","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 18 Feb 2017 09:19:30 +0100"},{"sha":"d5cad5ce114fbb8afdf9fe4acacb69454df0e4fd","message":"Merge-pull-request-326-from-downup2u-master","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 18 Feb 2017 08:39:30 +0100"},{"sha":"7df40300780a53deccd4767d06e51096c81da1ea","message":"Adjust-margin-size","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 18 Feb 2017 08:36:55 +0100"},{"sha":"855451c085aad2c9a1702579a26bb6b71a4fde88","message":"Put-content-first","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 18 Feb 2017 08:35:23 +0100"},{"sha":"e71b77bef1ad8b2583df884477d736bdc90d18c5","message":"Handle-sidebar-toggle","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 18 Feb 2017 08:02:33 +0100"},{"sha":"c141a876345dc33070b37de9a77ced82b297bdfa","message":"chinese-translation-link","author":{"name":"downup2u","email":"25199344@qq.com"},"date":"Sat, 18 Feb 2017 11:33:51 +0800"},{"sha":"3116db62c1e06fc359f72d1e47bf1069b611527b","message":"Merge-pull-request-323-from-marmelab-add_ability_to_hide_fields","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 17 Feb 2017 17:00:06 +0100"},{"sha":"390e1084bc331c193100a6812c828dbb58d6a5c1","message":"Merge-pull-request-321-from-marmelab-pure_comp","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 17 Feb 2017 16:25:11 +0100"},{"sha":"c99ef56e97d3a756a8ef0d35b9f27067811caff7","message":"Add-ability-to-hide-fields","author":{"name":"Julien","email":"julien@marmelab.com"},"date":"Fri, 17 Feb 2017 16:13:13 +0100"},{"sha":"0283943c428f6c1f5ccf0ea5e4068735b9caaf19","message":"Avoid-rerendering-of-some-components","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 17 Feb 2017 13:46:16 +0100"},{"sha":"9cb3193bfa4c4ec42473de045f7f8a452581d9e3","message":"Merge-pull-request-318-from-marmelab-more_open","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 16 Feb 2017 07:56:38 +0100"},{"sha":"48f5abf3018ade01d7d1caac44d0936f539166c9","message":"RFR-Ensure-actions-are-not-modified","author":{"name":"djhi","email":"gildas.garcia@gmail.com"},"date":"Wed, 15 Feb 2017 22:14:23 +0100"},{"sha":"4a34e6f40f45b3403712b70b8045116c698ea1ee","message":"Bump-version-to-0.8.1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 15 Feb 2017 14:00:16 +0100"},{"sha":"d614e91a9113218aab1e979099c5a792723aa510","message":"Merge-pull-request-315-from-marmelab-fix_custom_label","author":{"name":"JulienDemangeon","email":"julien@demangeon.fr"},"date":"Wed, 15 Feb 2017 13:50:52 +0100"},{"sha":"219e7c35452bb01ba3eea1da8e93f5b4f5266835","message":"Add-new-section-to-index","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 15 Feb 2017 09:00:38 +0100"},{"sha":"6bd525871f556ca16073ea2c457b10db3ba3f7d4","message":"Merge-pull-request-310-from-dreinke-color-input","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 15 Feb 2017 08:58:36 +0100"},{"sha":"27a1a617c7a3c143ea03549a2367bfc6e70eae6d","message":"Create-section-Third-party-components","author":{"name":"Davi Reinke","email":"davi.reinke@gmail.com"},"date":"Tue, 14 Feb 2017 21:26:24 -0200"},{"sha":"c92599d306e262cae5efc493052c0a36992ffeb6","message":"Fix-quickfilter-in-example-demo","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 14 Feb 2017 20:09:27 +0100"},{"sha":"95df4c128e3e429b8b2059524859a0f4f83e63cb","message":"Fix-custom-title-in-view-and-custom-label-in-resource","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 14 Feb 2017 19:15:15 +0100"},{"sha":"8ad7f4a24f4552bdb5214663e8b4d0eb23fd0c89","message":"show-editor-of-language-package-in-translations-list","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 14 Feb 2017 17:02:50 +0100"},{"sha":"dbd88c47379abda5119ee9e3f550b7753745f49b","message":"add-link-to-available-locales","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 14 Feb 2017 16:56:48 +0100"},{"sha":"263d252c39579feffc24edb60c49f5cdf3624463","message":"Add-italian-translation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 14 Feb 2017 16:55:29 +0100"},{"sha":"4d1e0ae0f023cb4f44545f1df772551311e94125","message":"Add-link-to-v0.8-announcement-post-in-Changelog","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 14 Feb 2017 15:38:42 +0100"},{"sha":"ae183c24760a04490c01b39e65b05b4076457222","message":"Merge-pull-request-311-from-marmelab-readme_graphql_client","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 14 Feb 2017 14:46:26 +0100"},{"sha":"e3f4ecd2dbe42a27337cc17d79fcc7f06c6b990f","message":"RFR-Add-link-aor-simple-graphql-client-in-doc","author":{"name":"djhi","email":"gildas.garcia@gmail.com"},"date":"Tue, 14 Feb 2017 13:57:36 +0100"},{"sha":"a003ca7730109af136cfecf48fce0dd69e89489f","message":"Add-ColorInput","author":{"name":"Davi Reinke","email":"davi.reinke@gmail.com"},"date":"Tue, 14 Feb 2017 10:17:15 -0200"},{"sha":"25847db2dedb3b98078ee3da970da52b80790402","message":"Handle-null-value-in-CheckboxGroupInput","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 14 Feb 2017 09:10:22 +0100"},{"sha":"f9b3f4eaa8f3cb524039852123e313171dbd820d","message":"Merge-pull-request-306-from-marmelab-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 14 Feb 2017 08:58:10 +0100"},{"sha":"9d9aa3426ec1a371ea20d9478e22d66eefdf2201","message":"Fix-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Feb 2017 22:25:52 +0100"},{"sha":"a749dbce44b344c82c67a376aa9a1dac54155753","message":"Prepare-Changelog-for-0.8","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Feb 2017 22:23:00 +0100"},{"sha":"f57f410eb8c8d72fe3dcb2a201343ce91398b579","message":"Fix-doc-index","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Feb 2017 22:22:47 +0100"},{"sha":"8b0c0610414ece6d1f02ce25cacb1db837ff62d4","message":"Fix-missing-translations","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Feb 2017 22:12:09 +0100"},{"sha":"db33a6533359271b2e0f46f6ea13f9626af2b3db","message":"Change-version-number","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Feb 2017 19:19:38 +0100"},{"sha":"5bf83241c81fb9ad68169e4b0fdc9d97b1a584d7","message":"Fix-bad-image-path","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Feb 2017 19:19:26 +0100"},{"sha":"e8890a6676ac663f5759531f81c0ef2217e6d7b7","message":"Merge-branch-master-into-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Feb 2017 19:06:31 +0100"},{"sha":"4d69913ce16d35107f8f015f19fdbc27ed97188c","message":"Update-Custom-App-documentation-to-reflect-latest-changes","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Feb 2017 19:00:57 +0100"},{"sha":"a0ed34150dca8f7269528d139074bba1a5058b89","message":"Fix-wrong-image-path","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Feb 2017 18:48:22 +0100"},{"sha":"927a0654f8e4da2818941e5f4c1bd4fbc945c8f9","message":"Merge-pull-request-302-from-marmelab-better_translate","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 13 Feb 2017 13:24:15 +0100"},{"sha":"cb9eb3b4f109c51de25c58a5b56f2c157fd93c2d","message":"Rename-Translate-HOC-to-translate","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Feb 2017 13:18:49 +0100"},{"sha":"a7b81f4f5c96ed4d7fdec2149ee0e3d53dc5d083","message":"Be-smarter-about-default-label-for-ReferenceInput","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Feb 2017 10:18:15 +0100"},{"sha":"19e1e7efb9820d39afef497f7cb8f593088b7f1b","message":"Fix-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Feb 2017 09:36:46 +0100"},{"sha":"c92b4def46feaa7f8b7b81c72de2abb4edc96230","message":"Revert-move-locale-reducer-under-admin","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Feb 2017 09:02:27 +0100"},{"sha":"019b570bca60d989f81a97e5cd651b55af624e18","message":"Add-CHANGE_LOCALE-action","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 13 Feb 2017 00:01:40 +0100"},{"sha":"0d64a6e7d0664e8a9cab5dfc79cc55111289feae","message":"MAke-the-translations-doc-more-straightforward","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 11 Feb 2017 09:09:50 +0100"},{"sha":"e026e7793d4b3a09c0db11ccb1a4255e1a265284","message":"Fix-warnings","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 11 Feb 2017 08:23:34 +0100"},{"sha":"4fa50cde2698e6814266516976bf178c4f8960b1","message":"Make-fields-and-inputs-labels-translated-by-default","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 10 Feb 2017 16:45:00 +0100"},{"sha":"21fb6d565f135a147b71769434287b35a4725238","message":"Introduce-FieldTitle-component","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 10 Feb 2017 15:34:23 +0100"},{"sha":"09e9fb737edd199aff539d55d5f17d88c1f7bf43","message":"fix-edit-page-custom-title","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 10 Feb 2017 10:25:46 +0100"},{"sha":"f76ed0380f22e0bc0ad7b86dac0cc573244af033","message":"Improve-translation-for-page-titles","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 10 Feb 2017 09:50:31 +0100"},{"sha":"a2798c7d9b3084cab515fe9cece414f6a6889480","message":"Merge-pull-request-300-from-marmelab-themable","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 9 Feb 2017 18:44:57 +0100"},{"sha":"3824d30a8facc1cfc2d6f342ca11fab59dc03e25","message":"Rely-on-muiTheme-for-datagrid-style","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Feb 2017 18:29:17 +0100"},{"sha":"d6f7848fbcbce2e6d07312e7ee08cf0fb424fc68","message":"Merge-pull-request-299-from-marmelab-customRoutes","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 9 Feb 2017 17:07:22 +0100"},{"sha":"a81f7cc507555bd85701790eb8573be4cf823094","message":"Add-the-ability-to-add-custom-routes","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Feb 2017 16:37:25 +0100"},{"sha":"a36a3dc575c9cd4fbb014941695c7b76a34c51bf","message":"Merge-pull-request-297-from-marmelab-translate_warning","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 9 Feb 2017 16:31:15 +0100"},{"sha":"d61ffeb750bd7597f3aa9458af2e01539a31ea37","message":"Remove-translate-warnings-when-using-empty-label-on-buttons","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 9 Feb 2017 13:49:20 +0100"},{"sha":"0dc85159cb87a2c69bf9020f4cb7db0019e5280c","message":"Fix-errors-due-to-289","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Feb 2017 18:24:17 +0100"},{"sha":"1a4b70521cb6cf26085eec89c6ddd027d788d5ff","message":"Remove-console.log","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Feb 2017 18:19:19 +0100"},{"sha":"aa88c9056c2a0b89cfd72245637e5d1beb6b9352","message":"Update-Changelog","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Feb 2017 17:40:25 +0100"},{"sha":"0b93e22186292f161887f778204126421b6a62ff","message":"Merge-pull-request-296-from-yshing-next","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Feb 2017 17:19:24 +0100"},{"sha":"cb3d0035e0f93974c4f3c8a8bf31be32c8c67708","message":"Update-changelog","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Feb 2017 10:02:27 +0100"},{"sha":"29f6ce567a1d64a98500ca02d1d706404dbb4377","message":"Merge-pull-request-275-from-marmelab-file","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Feb 2017 09:20:18 +0100"},{"sha":"ca36dfe99920cf4462a031f1301363f6eb712793","message":"Fix-image-field-styling","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Wed, 8 Feb 2017 09:13:30 +0100"},{"sha":"c98621dcffb371d99fa3aaf2e8cb01539cdff1ae","message":"Prefix-flex-box-elements","author":{"name":"Yuen Shing","email":"y.shing@me.com"},"date":"Wed, 8 Feb 2017 16:11:58 +0800"},{"sha":"0444165f6baf842851f41ae3f519a748b6464ee2","message":"Merge-pull-request-295-from-marmelab-loader_documentation","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 8 Feb 2017 09:01:21 +0100"},{"sha":"d02a04a9e6e78d0e744c862c5b7d00d69f340aff","message":"Update-Changelog","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Feb 2017 14:58:24 +0100"},{"sha":"dfe79fccf2b58625fb9faa7a0a7c456d533fe115","message":"Fix-custom-app-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 8 Feb 2017 06:57:07 +0100"},{"sha":"1fba21d37ab7364007781f678d56e1eb825523f7","message":"Merge-pull-request-292-from-marmelab-yarn_in_tutorial","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 7 Feb 2017 19:53:46 +0100"},{"sha":"9ad2270140812598b6fc6c4901765c6765cf8147","message":"Merge-pull-request-289-from-AkselsLedins-fix_validation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Feb 2017 18:46:10 +0100"},{"sha":"3824c8b91ceee19c4cf74d37eddaa6a8c1536426","message":"In-the-tutorial-use-yarn-instead-of-npm","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Feb 2017 18:34:17 +0100"},{"sha":"9f525c3ffe6d2d73f88d60640b6a12a49fb67aab","message":"Code-review","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 7 Feb 2017 18:21:08 +0100"},{"sha":"dfa7a2b63b868d89ddacfe031a1457b85df04733","message":"Merge-pull-request-291-from-marmelab-better_readme","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 7 Feb 2017 18:14:26 +0100"},{"sha":"dcc9c1bcafd08808548262c3d92d89b37cb292f4","message":"Fix-tests","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 3 Feb 2017 15:47:25 +0100"},{"sha":"3f608174a708e5cc538036ac669107a9a10b2647","message":"Fix-translations-of-ImageInput","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 3 Feb 2017 15:44:23 +0100"},{"sha":"0029c0549deadaf04c0c2e2b5d485512e8b75484","message":"Fix-tests","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 3 Feb 2017 15:23:01 +0100"},{"sha":"936ab2e3fd7ba8fb38ffab2a0563453b2b209d54","message":"code-review","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Feb 2017 18:11:44 +0100"},{"sha":"fff68b040bb2907849735ea1763f21705e07331a","message":"Add-missing-HOC","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Thu, 2 Feb 2017 18:30:57 +0100"},{"sha":"a2bc258f6222fd798f48c8dd29e770209ee26769","message":"Add-I18N-to-ImageInput","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Thu, 2 Feb 2017 18:08:57 +0100"},{"sha":"592c21c67ab141f6139a41edde3292eb57e350c9","message":"Improve-ImageField-documentation","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Thu, 2 Feb 2017 09:13:24 +0100"},{"sha":"d9d4265a26ccb70de658049a1ea3988394bb6e29","message":"Code-review","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 30 Jan 2017 12:24:56 +0100"},{"sha":"6862bc4e84c8c6bff3180fe36f50584a3a96f73f","message":"Typo-fix-s-an-hard-written-string-a-hard-written-string","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Tue, 24 Jan 2017 14:09:15 +0000"},{"sha":"08a4012d744819f6ebca5f41b99c23f37ee3d78a","message":"Code-review","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 23 Jan 2017 10:36:37 +0100"},{"sha":"ebc44d3e3174381814c4dc9891fe8b57809b6be1","message":"Fix-prop-validation-warning","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 23 Jan 2017 10:28:53 +0100"},{"sha":"09ca0a448cb4343f152095a5b862b3ff59764eb3","message":"Add-documentation-about-decorating-REST-client","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 23 Jan 2017 10:27:27 +0100"},{"sha":"51b02129e693f8dd753a8ff1ffa132acfcadecf1","message":"Update-documentation","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 23 Jan 2017 09:37:59 +0100"},{"sha":"84842d0b4fbacdd8b6f1b8eb41c7070f2ad8679f","message":"Code-review","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 20 Jan 2017 12:13:45 +0100"},{"sha":"1441a04fda085a7c528c49479149d339b238e982","message":"Add-some-tests-for-ImageField","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 17 Jan 2017 18:11:42 +0100"},{"sha":"6ca0d2bb5bc7e90fefa52170ca8447ff91043d84","message":"Rename-FileField-to-ImageField","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 17 Jan 2017 16:57:33 +0100"},{"sha":"e90c722a97db0ce18f8a92d910b4b02a6f7fd7f5","message":"Decorate-simple-rest-client-for-upload-capabilities","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 17 Jan 2017 16:53:02 +0100"},{"sha":"5f28f23892838c6943d6d5513f20c90004e73072","message":"Move-dropped-file-logic-into-a-dedicated-component","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 17 Jan 2017 15:21:43 +0100"},{"sha":"c05ae80c17dd03c0fa44543337d9acb603aed952","message":"Store-pictures-in-base64-to-keep-it-with-FakeRest","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 17 Jan 2017 14:43:15 +0100"},{"sha":"b414b8ecb3e6e37f88b10a7acbb28ef7d18b905e","message":"Improve-FileInput-API-mapping","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 17 Jan 2017 10:55:22 +0100"},{"sha":"7bb711749f2dbe1383962becce629165193b3db2","message":"Move-upload-logic-to-Rest-client","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 16 Jan 2017 17:03:09 +0100"},{"sha":"e7b7efaad79ae793d702c0785fa019160a209dd6","message":"Introduce-FileField","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Wed, 11 Jan 2017 12:18:45 +0100"},{"sha":"b4157cd56c503fcb26d6dc635aa0817b210aab7f","message":"Fix-rebase-issue","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 7 Nov 2016 18:04:24 +0100"},{"sha":"fdf10e43b391f5c1cbc44bc1a503fd21956694ce","message":"Better-loading-display","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 17 Oct 2016 08:42:39 +0200"},{"sha":"4a7bcec4da19ef18134bd9ebe04d014487d97f3c","message":"Display-loader-indicator-while-uploading","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 17 Oct 2016 08:26:26 +0200"},{"sha":"3e5051c9233329bc287871d8d4757a306777e786","message":"Add-onUpload-callback-when-file-is-dropped","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Wed, 12 Oct 2016 18:12:26 +0200"},{"sha":"dc150257710af80a10ed9410af7dbea87544b8fe","message":"Introducing-FileInput","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 10 Oct 2016 07:56:25 +0200"},{"sha":"9ae9bd024fcffbde82e3df6fef1aa84b9dcc69a3","message":"Fix-demo-link","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Feb 2017 16:47:29 +0100"},{"sha":"dffb1393a77c2a5de37865e43b567b2118f38869","message":"Fix-links-in-README","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Feb 2017 16:46:24 +0100"},{"sha":"09874375b37301d525f8a69bab061cac31dd50a0","message":"Improve-first-contact","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Feb 2017 16:43:40 +0100"},{"sha":"8e342b80d245ae69139788d486cf30c724762bc5","message":"Release-0.7.2","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Feb 2017 12:00:32 +0100"},{"sha":"611c1f36152bfabad13068374de81db2dbcb83b8","message":"Merge-pull-request-286-from-marmelab-checkboxes","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Feb 2017 11:51:48 +0100"},{"sha":"a328ef9c127bd0678206ddd8ae4b15c556811d61","message":"Change-input-model","author":{"name":"Julien","email":"julien@marmelab.com"},"date":"Tue, 7 Feb 2017 11:33:18 +0100"},{"sha":"4419b1cdc4f7b17bdb0e9bd300fb5e5950c17111","message":"Fix-fake-rest-client-version","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Feb 2017 10:55:03 +0100"},{"sha":"8c8158c6674b6b3eb2ec3cd4bceeac9e51e97616","message":"ReferenceInput-Error-handling-tests","author":{"name":"Aksels Ledins","email":"aksels@fizix.io"},"date":"Tue, 7 Feb 2017 10:47:21 +0100"},{"sha":"1226acda0c083fe8ff51973e9f4010dc82b8b7fd","message":"SelectInput-Error-handling-tests","author":{"name":"Aksels Ledins","email":"aksels@fizix.io"},"date":"Tue, 7 Feb 2017 10:44:57 +0100"},{"sha":"98bf804cf0f09f1e6dd3548dd606b393848e96db","message":"AutocompleteInput-Error-handling-tests","author":{"name":"Aksels Ledins","email":"aksels@fizix.io"},"date":"Tue, 7 Feb 2017 10:44:27 +0100"},{"sha":"9b0828c3724f9808acc4dd458d4637b9c252f592","message":"Fix-validation-on-some-inputs","author":{"name":"Aksels Ledins","email":"aksels@fizix.io"},"date":"Mon, 6 Feb 2017 15:40:24 +0100"},{"sha":"333c607ed834669b8634677f79f5af1281b951a4","message":"Merge-pull-request-290-from-marmelab-full_refresh","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 7 Feb 2017 10:45:48 +0100"},{"sha":"9ad36ded0fc83fa7b35371889d551e94c9a96ee5","message":"Remove-unused-import","author":{"name":"Julien","email":"julien@marmelab.com"},"date":"Tue, 7 Feb 2017 10:28:13 +0100"},{"sha":"d67b015f19c16b48c7f7a4442edd7e59bf7aaac5","message":"Adapt-examples-add-some-docs","author":{"name":"Julien","email":"julien@marmelab.com"},"date":"Tue, 7 Feb 2017 10:13:16 +0100"},{"sha":"b043b4cd47b8995b59f098369b54ab878b1f47c7","message":"Force-redraw-after-main-refresh","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Feb 2017 10:12:35 +0100"},{"sha":"c749e964ffeb6fb93191c3358d01dfa41d6ccb0f","message":"Remount-all-inner-components-on-refresh","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 7 Feb 2017 08:51:15 +0100"},{"sha":"581b71e5665c9461e8e6a2bbb510789aeb2db106","message":"Merge-pull-request-277-from-marmelab-default_value_function","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 6 Feb 2017 21:48:13 +0100"},{"sha":"ecc2e0bf7ac9cca1d4ad0e1b1ade67f651faf818","message":"Adapt-example-files","author":{"name":"Julien","email":"julien@marmelab.com"},"date":"Mon, 6 Feb 2017 18:26:51 +0100"},{"sha":"7db8421658bfcd00276be86a61fe853d06eb02dd","message":"Add-documentation","author":{"name":"Julien","email":"julien@marmelab.com"},"date":"Mon, 6 Feb 2017 18:26:08 +0100"},{"sha":"3d8d79bd3ca8e5da672394e551990caa6e542d36","message":"Create-CheckboxGroupInput","author":{"name":"Julien","email":"julien@marmelab.com"},"date":"Mon, 6 Feb 2017 18:25:55 +0100"},{"sha":"88771371d2aec6c5471d0d96892dd95384653ce3","message":"Allow-dead-code-elimination","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 6 Feb 2017 17:57:58 +0100"},{"sha":"97bc173a3de3d0d3ddedc2fa8961c58e7510ebbe","message":"Merge-pull-request-280-from-marmelab-pagination_error","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 6 Feb 2017 17:36:16 +0100"},{"sha":"1706a2c51871a78fff05ec648a60a1abb5086bea","message":"Bootstrap-CheckboxGroupInput-component","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 6 Feb 2017 11:11:48 +0100"},{"sha":"df217f16cede7478fbe4a489f0db3b34a2de3ff3","message":"Add-mention-of-aor-postgrest-client-in-Rest-clients","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 6 Feb 2017 10:22:41 +0100"},{"sha":"54c3c49ba116ba3b025068f18d28626b2a86d42f","message":"Fix-deconnection-on-dashboard","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 4 Feb 2017 08:11:13 +0100"},{"sha":"49dd1a43667490620137225b194bffdcf64b9c01","message":"Fix-pagination-error-in-console","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 4 Feb 2017 06:30:08 +0100"},{"sha":"b8d828392552306d43469e56cdf53e2e75b5b773","message":"Fix-edge-case-where-list-filter-isn-t-shown","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 4 Feb 2017 06:28:27 +0100"},{"sha":"95a196b6d46975af9e84546bbad356c38765f0ad","message":"Fix-edge-case-that-would-lead-to-disconnection","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 4 Feb 2017 06:27:41 +0100"},{"sha":"5a464aa1cef823e92dda1ee364c60a3569a294ea","message":"Fix-multiple-run-of-default-value-functions-when-state-changes","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 4 Feb 2017 06:00:04 +0100"},{"sha":"a325188dbaf94d39af5d412ec231e35b9d0c94db","message":"Usong-reselect-instead-of-once","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 4 Feb 2017 05:39:54 +0100"},{"sha":"89e57b26fefe9961d40fc8d7fb8c257838598c86","message":"Let-defaultValue-be-a-function","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 3 Feb 2017 08:48:43 +0100"},{"sha":"eea9cd0d70e7ff9bb78a8a04ffdd98622b26e28d","message":"Merge-pull-request-278-from-marmelab-i18n_with_recompose","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 3 Feb 2017 16:51:23 +0100"},{"sha":"07900a6f5d533f3ebbe3658f0044f8791dc3a943","message":"Merge-pull-request-272-from-marmelab-non-sortable-column","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 3 Feb 2017 16:49:58 +0100"},{"sha":"d1aedae56142d19022a052aff055abfa0dcc38b1","message":"Fix-tests","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 3 Feb 2017 15:55:31 +0100"},{"sha":"efcbfb351a4b962741316445bc6eaedd9c8027b0","message":"Code-review","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 3 Feb 2017 15:51:39 +0100"},{"sha":"aeb7a92dbdd23f1c7da0f99e8effd12e010b8cca","message":"Use-recompose-utilities-for-I18n","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 3 Feb 2017 14:02:49 +0100"},{"sha":"4d2cb528b4f32b9f389573959ae292702c56cdd8","message":"Merge-pull-request-276-from-marmelab-filter_default_value_2","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Fri, 3 Feb 2017 09:25:43 +0100"},{"sha":"14ea6c3e3b6f4b8965493e7a6fa2629cc0e6f7c4","message":"Support-defaultValue-in-filters","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 3 Feb 2017 06:35:15 +0100"},{"sha":"36930e60900b1e596b0b9d1449ed5860628b22b7","message":"Merge-pull-request-273-from-marmelab-revert-77-file","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 2 Feb 2017 16:44:59 +0100"},{"sha":"85aa99b1fc1c8b40d66d72598f55e617bac95452","message":"Revert-RFR-Introducing-ImageInput-and-so-ImageField","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 2 Feb 2017 16:44:32 +0100"},{"sha":"48599a8c0ba521209694570d8af0f6fa39749746","message":"Merge-pull-request-77-from-marmelab-file","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 2 Feb 2017 16:43:44 +0100"},{"sha":"b79dbf498a30809003ded7c2c386da9dedaa3f45","message":"Improve-ImageField-documentation","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Thu, 2 Feb 2017 09:13:24 +0100"},{"sha":"4eab8ac49476dc21af0ff28e6380f4bb04387623","message":"Allow-to-disable-sorting-on-some-fields","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Thu, 2 Feb 2017 08:58:01 +0100"},{"sha":"b5347189cc17eb1383d5cec16c7b41d9362a4b0d","message":"Add-tracking-code","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 31 Jan 2017 18:06:11 +0100"},{"sha":"8e100f3c0c630c667ef9ef6696ef109dcdbec7e6","message":"Merge-pull-request-268-from-marmelab-fix_list_refresh","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 31 Jan 2017 12:02:53 +0100"},{"sha":"d95a5553e1e8d4ee762cd82209497cf6b59eee19","message":"Fix-default-list-state","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 31 Jan 2017 11:56:14 +0100"},{"sha":"f49ecf3cb43916f0f0c04afd466be1aa1fc4f001","message":"Merge-pull-request-267-from-marmelab-revert-264-wrong_list_initialization","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 31 Jan 2017 11:54:55 +0100"},{"sha":"1c8b2ed542f81d3a2e51af4abfe84070679ea975","message":"Revert-RFR-Fix-default-list-state","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 31 Jan 2017 11:54:33 +0100"},{"sha":"d9f3cc6fa9139779567d10caa1c7713e7ec6cccd","message":"Merge-pull-request-264-from-marmelab-wrong_list_initialization","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 30 Jan 2017 18:52:52 +0100"},{"sha":"83ff0a3c889e8f1886210a8ffd82cf91700cae17","message":"Fix-default-list-state","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 30 Jan 2017 18:26:21 +0100"},{"sha":"69e9f124e316bb49769272ff8026450b3d27a562","message":"Code-review","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 30 Jan 2017 12:24:56 +0100"},{"sha":"bb6ffd1fed2055d852418456b31562950ad78ca5","message":"Update-changelog","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 26 Jan 2017 16:49:32 +0100"},{"sha":"ae0ebc4cafc840995039879417029ba49344113e","message":"Fix-Auth-doc-for-custom-login-component","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 26 Jan 2017 16:49:14 +0100"},{"sha":"62fc878590075aabf2101870102667fc67dd5a2a","message":"Merge-pull-request-257-from-marmelab-authentication","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Thu, 26 Jan 2017 15:45:45 +0100"},{"sha":"081177080dfd416ecab2f28542daf0b67be1623a","message":"Fix-bug-with-missing-layout","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 26 Jan 2017 13:40:13 +0100"},{"sha":"afda4b2d47a667a0b5264539a0819da3008b80c6","message":"Moving-all-auth-config-to-authClient","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 26 Jan 2017 11:52:42 +0100"},{"sha":"3e632a0b7b824ff9c46873a5b08e9eeea0224179","message":"Code-review","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 25 Jan 2017 22:15:38 +0100"},{"sha":"74f0e83ec02fe99acbc820a188d5630d926f8887","message":"Merge-loginClient-and-logoutClient","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 25 Jan 2017 22:01:17 +0100"},{"sha":"716f26bcb700e10c4d6aa954c2e3b7a2792277eb","message":"Typo-fix-s","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 25 Jan 2017 17:22:31 +0000"},{"sha":"5bfbbaa3cd08a576b4a997dba57535ab2ea744b8","message":"Fix-bad-English-message-for-pagination","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 25 Jan 2017 15:10:51 +0100"},{"sha":"18c5063e39e87fe343e45cd555f3f24d6f432963","message":"Use-latest-French-translations-to-get-auth-labels","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 25 Jan 2017 15:04:53 +0100"},{"sha":"5aff66da9b38b94fe0e6b453ecb2678e0f743d8a","message":"Fix-typos-in-French-translation-of-the-example","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 25 Jan 2017 14:53:22 +0100"},{"sha":"22f968fbab5d935267d17cc2c246f4aef6f2f1be","message":"Remove-authentication-from-example-complicates-e2e-tests","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 25 Jan 2017 14:39:05 +0100"},{"sha":"fff84a9f34e9645b23fcf4fa0b9455cca26c6948","message":"Add-mention-of-authentication-in-Admin-doc","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 25 Jan 2017 14:37:12 +0100"},{"sha":"9a94c39ecb63ee57a94c2305d855f7ac867f9a39","message":"Adding-section-in-tutorial-and-adding-Authentication-to-index","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 25 Jan 2017 14:29:44 +0100"},{"sha":"0454058d7aef86c6d2ec92431cc08bdc47784ec3","message":"Add-Authentication-chapter-in-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 25 Jan 2017 12:53:38 +0100"},{"sha":"e369512cf758f4e5b242d380688a7bcbb65d775b","message":"Redirect-to-login-on-401-and-403","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 25 Jan 2017 12:19:44 +0100"},{"sha":"621fbb42747724fc65fdcc6755413e1a4d096364","message":"Add-doc","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 25 Jan 2017 12:19:31 +0100"},{"sha":"451a43e4b6c72990ee401d5fc55760502f3406ac","message":"rename-sign-in-route-to-login","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 25 Jan 2017 09:10:50 +0100"},{"sha":"865f8fec7b170dbc79137e7fcd8928824d6e24c8","message":"Redirect-to-sign-in-page-when-receiving-a-403-error","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 25 Jan 2017 09:05:36 +0100"},{"sha":"e17c8ae10386306fef949768257f46b26d645461","message":"Add-translations","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 24 Jan 2017 23:31:43 +0100"},{"sha":"e8031fd26b1df0a7e49ae11b371d2ecd518d9f6d","message":"Rename-SignIn-to-Login","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 24 Jan 2017 22:38:10 +0100"},{"sha":"120e6549a65d8e1d11f0237400f2faa77aaa91fa","message":"Add-logout-support","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 24 Jan 2017 22:32:17 +0100"},{"sha":"330d2a8de32bb1a07e59e9dc8360e79e065b75e5","message":"Group-all-the-authentication-config-to-a-unique-parameter","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 24 Jan 2017 21:18:02 +0100"}]},{"name":"EventDrops","commits":[{"sha":"0280d01ea7b5829215d25ec1644c556efd6d29ed","message":"Merge-pull-request-173-from-marmelab-jpetitcolas-patch-1","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 21 Sep 2017 10:10:29 +0200"},{"sha":"8d216572c4258673897da09fd9742e62eb2bcda3","message":"Update-outdated-README","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Thu, 21 Sep 2017 09:19:46 +0200"},{"sha":"48da3590025b17afabc3a89d34a12fdf41ad9c6a","message":"Merge-pull-request-170-from-marmelab-demo_fix","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Tue, 29 Aug 2017 10:23:29 +0200"},{"sha":"cb92eeff3ec4b6ad4dc50ff20c5117879e9e6042","message":"Fix-demo","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 28 Aug 2017 18:35:09 +0200"},{"sha":"790cd4e8f3eabd2ec4e3341dc8c4d33a531c55ff","message":"Merge-pull-request-167-from-marmelab-fix-zoom-date-func","author":{"name":"Julien Demangeon","email":"julien@marmelab.com"},"date":"Mon, 7 Aug 2017 18:04:36 +0200"},{"sha":"8f684809d84cd5bb53118cc91f12d7d738ef2146","message":"Better-naming","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 1 Aug 2017 18:43:54 +0200"},{"sha":"1a13bc937b3c531a951c40666a3ca7e3ec3f5bba","message":"Add-test-to-ensure-configuration.date-function-is-called-in-onZoom","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 1 Aug 2017 18:15:58 +0200"},{"sha":"d0bdfa75321779f5b14246119a5489279d795a52","message":"Change-spy-method-so-that-zoom.default-spy-is-restored-and-not-interfere-in-other-tests","author":{"name":"Korney Czukowski","email":"carbofos@seznam.cz"},"date":"Thu, 30 Mar 2017 15:59:56 +0200"},{"sha":"aebf9bbbe6545ed6e1756f8f251f8bd5a4223e35","message":"Merge-pull-request-155-from-marmelab-rollup","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Tue, 20 Jun 2017 20:26:56 +0200"},{"sha":"cc4cf562e1c30164ffd9439afa5ddc7c56bb562b","message":"Don-t-change-version-yet","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 20 Jun 2017 18:12:53 +0200"},{"sha":"c4f0b65b5607c277f951c747038fea68dd73d754","message":"Update-package.json","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 20 Jun 2017 18:10:02 +0200"},{"sha":"565cade58d69493fd01891971cff5fe29c62f17b","message":"Bundle-with-Rollup-instead-of-Webpack","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 27 May 2017 19:55:00 +0200"},{"sha":"d40ee2bf79e253bbc378e094ba738c425d5478b6","message":"Version-bump","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 19 Jun 2017 11:45:24 +0200"},{"sha":"df3e16834bf7c6e91e0bff587b6b38bd5bbb894c","message":"Merge-pull-request-161-from-marmelab-fix_build","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 19 Jun 2017 11:42:54 +0200"},{"sha":"0ecb5683193acfecaca47b81d0c6fed662cb4993","message":"fix-deps","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 19 Jun 2017 11:41:46 +0200"},{"sha":"450886a738f757b122d746cf173c1549c29be617","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 19 Jun 2017 11:40:38 +0200"},{"sha":"22cfe795613a69c82b4e83d55b9fbb4f1d37b91a","message":"RFR-Fix-build-which-included-d3","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 19 Jun 2017 11:39:15 +0200"},{"sha":"f78cd9d791dabcf263d0bfcb01c1154782615a1d","message":"Merge-pull-request-160-from-marmelab-fix_xAxis_margins","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 19 Jun 2017 10:31:37 +0200"},{"sha":"d68ce22bc1da3ad9340c51543c0b79ba3e5d8bbc","message":"RFR-Fix-bottom-x-axis-margin","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 19 Jun 2017 10:23:34 +0200"},{"sha":"434175bef8f25eaccde5b0feedd388ac9a41d85d","message":"0.3.1-alpha3","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 19 Jun 2017 10:20:47 +0200"},{"sha":"83b11cb259713cb22986522ec53235fb18222013","message":"Merge-pull-request-158-from-marmelab-bundling","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 14 Jun 2017 22:21:47 +0200"},{"sha":"391983c80c3f70cc26918deab2aaa93930832629","message":"Improve-bundling","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Wed, 14 Jun 2017 18:01:03 +0200"},{"sha":"378c1a2cd813de5201de4043bedf96df745c0c93","message":"Merge-pull-request-152-from-marmelab-install_build","author":{"name":"JulienDemangeon","email":"julien@demangeon.fr"},"date":"Tue, 30 May 2017 18:28:39 +0200"},{"sha":"085b22668d44d754849f21399405c3bd19f39d17","message":"Merge-pull-request-151-from-marmelab-zoomend_timerange","author":{"name":"JulienDemangeon","email":"julien@demangeon.fr"},"date":"Tue, 30 May 2017 18:28:03 +0200"},{"sha":"92a4fef5df8b0e9bd2c5cb21431c89e61d2df97d","message":"Merge-pull-request-156-from-marmelab-remove_legacy_tip","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 30 May 2017 14:15:48 +0200"},{"sha":"5c8977c955c726dcda4346d3f86b94d93f8634bc","message":"Remove-tip-which-no-longer-exist","author":{"name":"Julien","email":"julien@marmelab.com"},"date":"Tue, 30 May 2017 12:46:17 +0200"},{"sha":"8b34c6091439da0c9d1bff1b0854ac482d209dc5","message":"Update-dependencies-before-building","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 29 May 2017 18:44:30 +0200"},{"sha":"56cba88b6eba0ba5a30741f6195caf2d91b35233","message":"Add-test-on-visibleDataInRow-function","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 29 May 2017 18:41:00 +0200"},{"sha":"3f288e3927e8fdcfa9bcf9124d2eef489728420d","message":"Add-a-test-for-scales-property","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 29 May 2017 18:13:13 +0200"},{"sha":"10f0ce26b6e10c8ae0048ea011d5426ae10d36d6","message":"Update-documentation","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 22 May 2017 18:21:31 +0200"},{"sha":"70c48b21daf1df78aa145aced72dd3da8994cfdc","message":"Allow-to-filter-displayed-data-using-visibleDataInRow","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Wed, 17 May 2017 10:04:00 +0200"},{"sha":"8b363c5c0aabfc46876b2ecaadc43fc323cc5b31","message":"Allow-to-retrieve-displayed-data-time-range","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 16 May 2017 09:47:04 +0200"},{"sha":"7c08f0229935ba6f2f1fc1aa35a2756a8ba6a30c","message":"Merge-pull-request-154-from-marmelab-update-demo-data","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Mon, 22 May 2017 18:40:20 +0200"},{"sha":"a2002ec31d6559a0d3ff6a8a204e0a277ec3e606","message":"Update-demo-data","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 22 May 2017 18:39:31 +0200"},{"sha":"0d506ef6110e5366491f00dc08b9b37dbbec9b29","message":"Merge-pull-request-145-from-marmelab-fix_d3_reference","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Mon, 22 May 2017 18:31:46 +0200"},{"sha":"22f8b1724d4a1714e3eb48e14caa497e2e217919","message":"Publish-0.3.0alpha2","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 17 May 2017 12:24:54 +0200"},{"sha":"34d29b69f76bc5ca8087958b61bdbabdf197c4e5","message":"Merge-pull-request-147-from-JulianoEngineer-patch-1","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 16 May 2017 16:05:21 +0200"},{"sha":"c3f114cec54a9f9d8af8c7f04275426a7a3d0a83","message":"space-fix","author":{"name":"Juliano Alves de Oliveira","email":"julianoalvesde@hotmail.com"},"date":"Tue, 16 May 2017 10:48:36 -0300"},{"sha":"5d7879cec371fc59b0a7f26b482f841228232a4a","message":"update-Readme.md-correct-usage-of-date-function","author":{"name":"Juliano Alves de Oliveira","email":"julianoalvesde@hotmail.com"},"date":"Tue, 9 May 2017 18:20:36 -0300"},{"sha":"bf7e889c83b5901bb284f1289211963135faa9e9","message":"Fix-D3-reference","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 2 May 2017 18:31:15 +0200"},{"sha":"f88795a1944ae276af8d5991c1e49b4006424575","message":"Merge-pull-request-144-from-marmelab-better_webpack_configuration","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Tue, 2 May 2017 17:57:26 +0200"},{"sha":"99fe92d7fc440e5d32c6d65987efc1b564067635","message":"Code-review","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 2 May 2017 17:54:39 +0200"},{"sha":"7d6dfa183da4a9b448a99d3f7b3e5e1c4c00fb82","message":"Fix-tests","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 28 Apr 2017 16:09:31 +0200"},{"sha":"e74a9bc19da0653417fc47dc66e0917db69c3a9a","message":"Fix-demo-deployment","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 28 Apr 2017 16:01:47 +0200"},{"sha":"e45680a6a3586c7f4a5ed6ae05c29c38abe594ce","message":"Attempt-to-fix-demo-deployment","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 28 Apr 2017 15:54:02 +0200"},{"sha":"02d47d2f80c401a48bed0ca63e0e97646a154dfd","message":"Separate-lib-build-from-demo-build","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 28 Apr 2017 15:52:48 +0200"},{"sha":"701c74f2d352f49f3f17b1689b360e6b9d94587b","message":"Use-Webpack2","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 28 Apr 2017 15:18:53 +0200"},{"sha":"1351d6ad0aae6a96f30ddd28296863d51c97bda9","message":"Merge-pull-request-143-from-marmelab-fix_eslint","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Tue, 2 May 2017 17:44:44 +0200"},{"sha":"226210a1ac4a2557a27bf492b588c847525f30cc","message":"Fix-lint-staged-version","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 28 Apr 2017 14:42:01 +0200"},{"sha":"e59da7f65962c6276097eee35d45b7291cf209cc","message":"Fix-ESLint-error-updating-it","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 28 Apr 2017 14:38:10 +0200"},{"sha":"9d4a4acd8bd7d5b1a5e37c43906089ef8890cf65","message":"Merge-pull-request-132-from-marmelab-svg_viewport","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Fri, 28 Apr 2017 11:35:50 +0000"},{"sha":"629bd76dd6da3a14dda714e542334db24f863dc3","message":"Remove-useless-attribute","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Fri, 28 Apr 2017 13:21:49 +0200"},{"sha":"1223d062bebc1a9537d28069493566fa370bd8eb","message":"Test-on-Firefox-50","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Thu, 20 Apr 2017 17:58:16 +0200"},{"sha":"a00091553fa97062b45a86a04478fa8667394a96","message":"Use-recent-version-of-Node","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 28 Mar 2017 18:00:48 +0200"},{"sha":"3c5f4023fc67369f818992bba832edfe3625877b","message":"Code-cleaning","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 28 Mar 2017 17:49:45 +0200"},{"sha":"451e1a9e579ff215dac2b4aef672c0c2487e9c5f","message":"Add-and-fix-some-tests","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 28 Mar 2017 17:48:54 +0200"},{"sha":"fda7c1d8d533aeb1d80b8a62394594ea5cbd34bb","message":"Fix-SVG-viewport","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 28 Mar 2017 10:43:21 +0200"},{"sha":"cfad022c7195e1cc8390f090b3870ac6b3cfaa12","message":"Merge-pull-request-124-from-marmelab-fix-demo","author":{"name":"JulienDemangeon","email":"julien@demangeon.fr"},"date":"Thu, 20 Apr 2017 17:42:42 +0200"},{"sha":"88022705bb25396e4f342fc8c5cb3fe33c92da36","message":"Fix-demo-issue","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 14 Mar 2017 18:18:47 +0100"},{"sha":"5ef1ecc949f6ac1ff9b2bbe1b87d6710e18cdf7a","message":"Merge-pull-request-125-from-marmelab-remove-prepublish","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 15 Mar 2017 11:08:02 +0100"},{"sha":"6f3bd6fc2e84a61404546b7eefaf050c93a505fd","message":"Merge-branch-master-into-remove-prepublish","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Wed, 15 Mar 2017 10:38:01 +0100"},{"sha":"cde2d87c76d8eba14237ed58561146de622781b9","message":"Merge-pull-request-126-from-marmelab-prettier","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 15 Mar 2017 10:07:45 +0100"},{"sha":"709848ad7524170b65fba75e22b0bde94fefbd1a","message":"Prettify-demo-files","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 14 Mar 2017 18:56:45 +0100"},{"sha":"811f59c66edadc909d85e19557896f64185bbdf7","message":"Format-all-files-using-prettier","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 14 Mar 2017 18:54:35 +0100"},{"sha":"50545e3fd70fab1ec63e433773081ab1350a312c","message":"Remove-pre-and-post-publish-hook-in-favor-of-make-targets","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 14 Mar 2017 18:30:42 +0100"},{"sha":"7e5888948fbe179bdddf43c0e4ac9c50b606837d","message":"Merge-pull-request-122-from-osadan-d3v4","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 14 Mar 2017 14:04:06 +0100"},{"sha":"d8ce23aa8c58cc42612576d16c0e255391837afc","message":"Update-README.md","author":{"name":"Ohad","email":"sadanoh@gmail.com"},"date":"Tue, 14 Mar 2017 10:13:04 +0200"},{"sha":"02d8093c5b9479b150c4cd4be862cb6cf42b1359","message":"modify-README.md","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Sun, 12 Mar 2017 10:12:48 +0200"},{"sha":"8267aa8e3ef603458a2a73c7019c9abe8649db6c","message":"indentaion-final-semi-columns-and-line-break-issues","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Sun, 12 Mar 2017 10:07:10 +0200"},{"sha":"0c62c3b7bebed89e1ef72c2b752598c9f7b91cff","message":"add-d3.min-to-dist-folder","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Tue, 7 Mar 2017 10:46:25 +0200"},{"sha":"1406f94f69660e496e3f3cfbc01821c96a66b627","message":"making-small-changes","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Tue, 7 Mar 2017 10:27:22 +0200"},{"sha":"0bd24ef9e215b9766a2c89cde5b16f2ccb756b8b","message":"remove-ide-personal-files-from-gitignore","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Tue, 7 Mar 2017 09:35:25 +0200"},{"sha":"9981f4085172d3cad1a5c81f454edd52762f9d17","message":"Oouups-fixed-all-the-tests","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Mon, 6 Mar 2017 16:01:05 +0200"},{"sha":"c75b819f13f2499c6ebb6e6663c1b0ee160f1348","message":"change-the-labels-debounced-function-name","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Mon, 6 Mar 2017 15:06:02 +0200"},{"sha":"e24c4a8713f505c0bbb0269aa03b45d62b23f444","message":"add-debounced-function-for-changing-the-labels-sum-during-zoom","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Mon, 6 Mar 2017 15:04:48 +0200"},{"sha":"792a679fcb2e94917f8c45b95531c9bdb27f0b13","message":"support-for-top-bottom-axis-on-zoom","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Mon, 6 Mar 2017 14:42:44 +0200"},{"sha":"2ac46c36df6a662b302b7c11b1d27d125b6c715f","message":"remove-my-tries-to-make-resizeable-svg","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Mon, 6 Mar 2017 09:50:15 +0200"},{"sha":"b3459ccb79e4d6e51b89f960fa80adddeef21f44","message":"removing-jsdom-from-dependency","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Sun, 5 Mar 2017 14:20:37 +0200"},{"sha":"0b2d646b9c0d610edf4cbceab26c191c6ace55ae","message":"main-commit-all-things-working-properly","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Sun, 5 Mar 2017 14:19:26 +0200"},{"sha":"ee8806923f9925214729d74bc1eecd4bd6536fa3","message":"Merge-pull-request-115-from-kwesterfeld-master","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Thu, 2 Mar 2017 14:00:45 +0100"},{"sha":"78cd79b68720975819dc64cb32f2660c93c33f11","message":"milestone-before-upgrade-zoom-behviour","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Mon, 27 Feb 2017 15:23:37 +0200"},{"sha":"d90ebe410a99c415427c1cbda2be25c0c69664ed","message":"modify-the-axis","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Wed, 22 Feb 2017 10:06:01 +0200"},{"sha":"ebd00b0808e20baee3abb068399ec95de212d352","message":"small-syntext-changes","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Wed, 22 Feb 2017 09:49:48 +0200"},{"sha":"5ec00bea8fbd85f99da0ac6e9bfb64001a4d497a","message":"the-first-change-d3.time.format-to-d3.timeParse","author":{"name":"osadan","email":"sadanoh@gmail.com"},"date":"Tue, 21 Feb 2017 16:26:45 +0200"},{"sha":"e82686a94b166a8eb1747796167a122b4dde559e","message":"Fixes-114-Participation-in-jspm-systemjs-project-not-possible","author":{"name":"Kurt Westerfeld","email":"kurt@yellowbrick.io"},"date":"Thu, 17 Nov 2016 13:38:45 -0500"}]},{"name":"sedy","commits":[{"sha":"d4855b18f312bfd0ef6c1c471fda09773e955d4f","message":"Merge-pull-request-89-from-marmelab-update-node-modules","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 8 Jan 2018 11:21:55 +0100"},{"sha":"deb575de94ad22f916d332b91a356960a715192f","message":"Sedy-config-dependency","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 5 Jan 2018 18:24:01 +0100"},{"sha":"4765bec07755fc8e0a99fa0f1a1520a8a7266d00","message":"Sedy-Test-dependencies","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 5 Jan 2018 18:22:58 +0100"},{"sha":"c04275455bbfca24e5510f48c189707cfd9af535","message":"Sedy-babel-webpack-dependencies","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 5 Jan 2018 18:14:43 +0100"},{"sha":"931aa5dd7541152fb7d9b2140d488741664562d3","message":"Installer-config-dependency","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 5 Jan 2018 18:10:56 +0100"},{"sha":"e3d82186eb82b5f4081b67ed37689bbf1b277a18","message":"Installer-babel-dependencies","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 5 Jan 2018 18:07:55 +0100"},{"sha":"45b60efcf0233e4edfabb93ada6d2565f1e733f5","message":"Installer-webpack-dependencies","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 5 Jan 2018 18:06:14 +0100"},{"sha":"0c08508d0194b60c0e93bfdce1db6de2a3274dc1","message":"Update-babel","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 5 Jan 2018 17:57:02 +0100"},{"sha":"b274b6115db0f6f03dd6f6ab158ba091b7de4204","message":"Update-eslint","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 5 Jan 2018 17:55:12 +0100"},{"sha":"7c0ff6d5cba38901a9e63bee8fa799f05b6d4ce7","message":"Merge-pull-request-86-from-marmelab-revert-83-fix-comment-from-commit","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 1 Jun 2017 17:40:13 +0200"},{"sha":"36d0959727706990d49b8fd7bbdd8bad089345b5","message":"Revert-RFR-Allow-to-comment-from-the-commit-list","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Wed, 31 May 2017 18:07:25 +0200"},{"sha":"ca552d4c7edccb0db94e058b3ff48d5a26916bce","message":"Merge-pull-request-85-from-marmelab-major","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 30 May 2017 18:41:31 +0200"},{"sha":"2e5b2b54d05c2cef9db8db0800c70928896dae30","message":"Release-1.0-tada","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 30 May 2017 18:01:07 +0200"},{"sha":"cb5d3fafcb4f19b3bfee9cd910e1e4304098eab9","message":"Update-installer","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 29 May 2017 18:18:13 +0200"},{"sha":"4f654d237afecbcee3fc49d0559fe451bb0208a0","message":"Merge-pull-request-83-from-marmelab-fix-comment-from-commit","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 29 May 2017 18:16:38 +0200"},{"sha":"5329f7401ac8950584abd9404f42a48bd8990654","message":"Merge-pull-request-82-from-marmelab-erase-installer","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 29 May 2017 18:16:01 +0200"},{"sha":"6afd1b3be7f90a7774571cd4202a6b3bc1b9cdb6","message":"Review","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 29 May 2017 18:15:35 +0200"},{"sha":"ce4a2d7f38e64066606df7116974b7edda776845","message":"Merge-pull-request-73-from-marmelab-integration","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 29 May 2017 18:08:58 +0200"},{"sha":"da95402ad15546f9d64d22f4d5e6c4fd5461fdd6","message":"Allow-to-comment-from-the-commit-list","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Wed, 24 May 2017 21:42:19 +0200"},{"sha":"0b2c4272fcbe5140d47ce6bfe49417c6d44971be","message":"Update-documentation","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Wed, 24 May 2017 21:02:48 +0200"},{"sha":"9c66e7e40037a197c7bd6330426ec9c464ce8361","message":"Remove-the-PM2-dependency","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Wed, 24 May 2017 20:55:50 +0200"},{"sha":"4ea0e030befa6cdfc4e41f8bb59379dd18f2fe92","message":"Remove-setup-page-update-the-index","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Wed, 24 May 2017 20:52:19 +0200"},{"sha":"cc5e4070f46c974628f6ba68de827f924b0abd53","message":"Remove-oauth-app","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Wed, 24 May 2017 20:32:32 +0200"},{"sha":"35c190f7094cb4455ba4f47b56b7b846616fd401","message":"A-bit-of-buffer-manipulation","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 24 May 2017 19:00:33 +0200"},{"sha":"6d16782e04e72b06e62ad9bca3bb939dd1426a71","message":"Finish-the-GitHub-Apps-integration-tada","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 24 May 2017 18:45:40 +0200"},{"sha":"5bc638eda6cdb19f33560f3a2abafc666ee8a6e3","message":"Support-GitHub-integration","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sun, 5 Mar 2017 19:52:36 +0100"},{"sha":"9996067cc1d379302f0152ec677f9b2d766711b1","message":"Merge-pull-request-81-from-marmelab-installer-pagination","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 6 Apr 2017 18:53:50 +0200"},{"sha":"9724e12cba498dc9c935aa03db5ffb14b3dfb742","message":"Publish-the-new-installer","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Thu, 6 Apr 2017 18:43:09 +0200"},{"sha":"f4acf29a75254fb13e294bf46dc4b0dbb82172a0","message":"Add-pagination-on-the-installer","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Thu, 6 Apr 2017 18:40:02 +0200"},{"sha":"51593794ef495753afcfd1fc9a0abe56baec2426","message":"Merge-pull-request-78-from-marmelab-better-regex-escape","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Thu, 16 Mar 2017 18:04:32 +0100"},{"sha":"c184d4d7a83d576c63957e9404df6814ee7b4639","message":"Better-Regex-escape","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Wed, 15 Mar 2017 20:48:36 +0100"},{"sha":"2d3df7aa28f8541e77692710fd68664fbd0d6098","message":"Merge-pull-request-75-from-marmelab-question-mark","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 6 Mar 2017 18:33:00 +0100"},{"sha":"4539ecc8fce524524af0835e4acdf3c75b0ee19a","message":"Merge-pull-request-74-from-marmelab-fix-contributing","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 6 Mar 2017 18:22:16 +0100"},{"sha":"ff945d7d5792c92b99a42ebf4de77dccabaf33e7","message":"Merge-pull-request-72-from-marmelab-fix-ping-parser","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 6 Mar 2017 18:22:06 +0100"},{"sha":"674d238f99a07ad1e59452c796ce1140a12c48ec","message":"Allow-question-mark-in-Sedy-comments","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 6 Mar 2017 18:17:15 +0100"},{"sha":"d045ad01678637660ddca607bd0d095c0a130dc5","message":"CONTRIBUTING-reference","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 6 Mar 2017 18:07:51 +0100"},{"sha":"55913b63b12732b25da7d3c9986a8a025dc460d6","message":"Fix-ping-parser","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sun, 5 Mar 2017 18:24:27 +0100"},{"sha":"579a53503d41f0fb80ead02941c918464fa59b94","message":"Merge-pull-request-70-from-timgrossmann-patch-1","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Wed, 1 Mar 2017 09:17:05 +0100"},{"sha":"216b611a5176e6c41ae0851874ea40f4ddbb764e","message":"Update-README.md","author":{"name":"Tim Großmann","email":"t.grossmann1994@web.de"},"date":"Wed, 1 Mar 2017 07:31:12 +0100"},{"sha":"b3c396ffc72504428d557b3836434ce6a0b70ae3","message":"Merge-pull-request-68-from-pborreli-typos","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 28 Feb 2017 18:34:10 +0100"},{"sha":"0937c0e0c1fa45870e5d1c511cc810596a3046fb","message":"Fixed-typos","author":{"name":"Pascal Borreli","email":"pascal@borreli.com"},"date":"Tue, 28 Feb 2017 17:25:35 +0000"},{"sha":"0760aeb33542b6b4a545af9ce284bd6dc6ebd3e5","message":"Final-publication","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 27 Feb 2017 18:31:37 +0100"},{"sha":"54ed5dc4e2ae34910594a3a6271a3567faa6cf25","message":"Merge-pull-request-66-from-marmelab-wording","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 27 Feb 2017 18:29:20 +0100"},{"sha":"c9ccdf907b80ff18f22aef9cb41196b60e965f81","message":"Wording-image-update","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 27 Feb 2017 18:19:59 +0100"},{"sha":"b2eac7ae9487af1349adb214e112a650401a1ef0","message":"Fix-bis","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 27 Feb 2017 17:48:51 +0100"},{"sha":"cda79c502985b0dbf0014a12af4fbbe278d88727","message":"Fix-publication","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 27 Feb 2017 17:46:32 +0100"},{"sha":"dcac1a41ed249ece4a230d84eccc405485015dfa","message":"Publish-new-version","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 27 Feb 2017 17:43:03 +0100"},{"sha":"e6df3ac538418e1050ccb37c3f4efbc0b65230bc","message":"Merge-pull-request-65-from-marmelab-public-only","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 27 Feb 2017 17:37:48 +0100"},{"sha":"3ab24b6b7d231b5973c69d90ca6d69ac87b6c316","message":"Allow-to-Github-login-with-public-repo-only","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 27 Feb 2017 17:22:09 +0100"},{"sha":"5bffa4a5470ab6cc1301225d03d34287a0dd1580","message":"Merge-pull-request-64-from-marmelab-one-commit-per-review","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Mon, 20 Feb 2017 16:09:05 +0100"},{"sha":"b1968b8ccdd3536c10a5895b1835634b55bc8142","message":"Typo-fix-s-Successful-Successfully","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Mon, 20 Feb 2017 15:08:52 +0000"},{"sha":"954889e944cae3f9e4802435223fe5f0b2c16677","message":"Fix-damn-tests","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 18 Feb 2017 22:29:25 +0100"},{"sha":"cf36c518a9c571f7348a24de9f8ed8f19a4350fe","message":"Rewrite-fixer-commiter-in-order-to-push-only-once","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 18 Feb 2017 21:22:52 +0100"},{"sha":"7c3aa0f05592505d35c7ca80ad47280c2d20ee68","message":"Introduce-safeguard","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 18 Feb 2017 20:18:33 +0100"},{"sha":"2c6f5137bd0e9be5158ec2697651470dee48c366","message":"Linting-introduce-the-answerer","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 18 Feb 2017 19:28:07 +0100"},{"sha":"545258719dded1e250b55178d3940623667050f6","message":"Add-only-pull_request_review-as-hook-scopes","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Thu, 9 Feb 2017 18:10:28 +0100"},{"sha":"3460ed6afe99c21e0eefa0c4225f35964e118900","message":"Remove-Review-Comment-support","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Thu, 9 Feb 2017 18:07:47 +0100"},{"sha":"1a180d382030db1ace11093ad4fa2f0898e1e0e0","message":"Merge-pull-request-63-from-marmelab-dev-xp","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 8 Feb 2017 18:15:31 +0100"},{"sha":"74f5fd4d3a7a310360f882b4a34a8cd192db88b8","message":"Sedy-should-push-only-once-for-multiple-fixes","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 8 Feb 2017 18:09:12 +0100"},{"sha":"00202c3ff3e34b8acc7afa1626fa4fe7f679087f","message":"Run-tests-on-Travis","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 8 Feb 2017 17:54:47 +0100"},{"sha":"26a562d942637191128834e7bc7553517c3b1497","message":"Code-review","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 8 Feb 2017 17:52:08 +0100"},{"sha":"45a2a8bb6ae2e305528d5427a5a41f979ecaea3b","message":"Minimum-linting","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 7 Feb 2017 18:38:23 +0100"},{"sha":"804079c6398ce0b0f1f1180fdcabcfd023a0efa7","message":"Webpack-2","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 7 Feb 2017 18:14:06 +0100"},{"sha":"97fb53e4449124b69109a5f79c5add9532958c03","message":"Fix-E2E-tests","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 7 Feb 2017 18:02:41 +0100"},{"sha":"a0995d868d69bfe51c8a480f69e45a4797b98057","message":"Merge-pull-request-62-from-marmelab-update-doc","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Tue, 7 Feb 2017 09:26:31 +0100"},{"sha":"b62e9960b40018a6025a07783a428ff43bb62902","message":"Review","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 6 Feb 2017 18:35:06 +0100"},{"sha":"d2ca1ae7e776a737cf5fbb44702b695a960e0f55","message":"Typo-fix-s-on-into","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Mon, 6 Feb 2017 08:56:59 +0000"},{"sha":"4106520305af752827e41705e90915e446476d3d","message":"Typo-fix-s-won-t-don-t","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Mon, 6 Feb 2017 08:21:25 +0000"},{"sha":"5fdadb4d192deaa4517d79dacbf6f1eb62f0b14d","message":"Typo-fix-s-is-wrote-is-written","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Mon, 6 Feb 2017 08:21:22 +0000"},{"sha":"666cbc8fd2446b80ce05ccf6e80207e971f9b00b","message":"Typo-fix-s","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Mon, 6 Feb 2017 08:10:59 +0000"},{"sha":"4e04fb6e8eb7643336f87ecafac66d5cebd87c94","message":"Typo-fix-s","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Mon, 6 Feb 2017 08:09:55 +0000"},{"sha":"bc7ba224fd5aa50930099fc8aebe972c4b76ff0f","message":"Typo-fix-s-A-little-An","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Mon, 6 Feb 2017 08:08:34 +0000"},{"sha":"9effc22bd680c04de0007b95eb776115fcb154fc","message":"Typo-fix-s-There-Heare","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Mon, 6 Feb 2017 08:07:59 +0000"},{"sha":"db6976d714d1e3f663c6bac3a5025325c6fcc5c3","message":"Update-README-and-add-a-LICENSE-issue-template","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 4 Feb 2017 18:17:24 +0100"},{"sha":"050768ac16e2b4c16eb236fe9d6c0de6cdcb5294","message":"Merge-pull-request-61-from-marmelab-remove-hellojs","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 31 Jan 2017 17:54:12 +0100"},{"sha":"278d0f0cf45849265badb45028b1376125616558","message":"Remove-debug","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 28 Jan 2017 23:36:38 +0100"},{"sha":"f00daa65ac98a517d0a5c84db9175131107cb4fd","message":"Deploy-the-frontend","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 28 Jan 2017 23:26:28 +0100"},{"sha":"e0193100e9d84f5d1af4736c941fa4e0d60dc477","message":"Deploy-the-frontend","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 28 Jan 2017 23:26:28 +0100"},{"sha":"fec763842ff2e85bd33d6605833db3d831533efd","message":"Set-deployment-to-production","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 28 Jan 2017 23:25:19 +0100"},{"sha":"836d31fb16ad71eecf745bc4435ee0d3457bcc72","message":"Oauth-function-deployment","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 28 Jan 2017 23:15:54 +0100"},{"sha":"5b3af44a1aa00918f3645bbcb0f06466e1965592","message":"Don-t-forget-the-logout-step","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 28 Jan 2017 21:56:14 +0100"},{"sha":"0f367bbe3a2b596eb0109bab8bbd3f32cba79e94","message":"Remove-helloJS","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 28 Jan 2017 21:52:40 +0100"},{"sha":"e15903c911b47761f7b667a5f2ad2c86eef06372","message":"Introduce-new-Oauth-authentication","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 28 Jan 2017 21:51:43 +0100"},{"sha":"a6eb34561129ad7796b12f6d90dc0cfcd30d8704","message":"Use-PM2-to-run-the-installer-oauth","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 28 Jan 2017 19:19:23 +0100"},{"sha":"cf9792a6527125888e853518e685a2bcc4828dcb","message":"Oauth-app-kickstart","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 28 Jan 2017 18:28:03 +0100"},{"sha":"530a81bdeae1e62c0cc82825af7f055650afba6a","message":"Move-Sedy-sources-in-a-new-folder-sedy","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sat, 28 Jan 2017 17:43:18 +0100"},{"sha":"5a729004d328a3ce054614e05b37f9a7921e7105","message":"Add-a-logout-button","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 27 Jan 2017 17:13:15 +0100"},{"sha":"2764dd7d8cf098e3aea1abf427096a3d80464dbd","message":"Try-another-way-to-do-GitHub-auth","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 27 Jan 2017 16:50:09 +0100"},{"sha":"0ec60d11f6d62833d8c1061092f40bdd68c2d6a4","message":"Little-makefile-shortcut","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 27 Jan 2017 15:39:43 +0100"},{"sha":"c32337e5351789e7f455a70bf64fc29f795d2f47","message":"Minify-react-in-prod","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 27 Jan 2017 14:48:16 +0100"},{"sha":"7c5df5cd60c46f4307cd31199b372107387fce38","message":"Avoid-errors-at-the-loading-steps","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 27 Jan 2017 14:42:11 +0100"},{"sha":"d45ec50483803722b83b4100b0749691e2803bff","message":"Improve-global-effects","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 27 Jan 2017 14:09:01 +0100"},{"sha":"d4787d55ff33c893a6d9e61383641bcce7827607","message":"Add-Google-Analytics","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 27 Jan 2017 14:00:14 +0100"},{"sha":"1825e29c21e1fd128a6799a780e2c0b836484d90","message":"Fix-production-build","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 27 Jan 2017 11:26:43 +0100"},{"sha":"b4ad7ba0e926fde9e71a8dea9f08edaed3b15227","message":"Merge-pull-request-58-from-marmelab-homepage","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 27 Jan 2017 11:24:18 +0100"},{"sha":"84297155f6b506faeb482d3a24d5db95e9e92bbf","message":"Installer-publication","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 27 Jan 2017 11:22:18 +0100"},{"sha":"f82056ed99ea7e9b916235f26709a97b35bc7909","message":"Finish-it-make-it-responsive","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 27 Jan 2017 10:49:07 +0100"}]},{"name":"comfy","commits":[{"sha":"a88a85ddd12307e295635339dabd5bcf79b184fa","message":"Merge-pull-request-114-from-arturparkhisenko-api-add-babel-env","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Thu, 16 Nov 2017 17:53:43 +0100"},{"sha":"121c3b04071956b33a8225c4c9bfe715092d9ab2","message":"upd-dependencies-prefix-env-eof","author":{"name":"arturparkhisenko","email":"ikeagold@gmail.com"},"date":"Mon, 13 Nov 2017 20:27:56 +0200"},{"sha":"1985a7a078f36bd695bc6af2a8ea7e96192557d7","message":"Merge-pull-request-115-from-marmelab-remove-admin","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Mon, 13 Nov 2017 17:37:58 +0100"},{"sha":"d52b701530764019cc6a072dffb42f6fdabc2352","message":"admin-Move-admin-GUI-in-an-other-repo","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 13 Nov 2017 15:13:40 +0100"},{"sha":"63031722ff03e48b168085adefce9c12dfdd9ab6","message":"api-add-babel-env","author":{"name":"arturparkhisenko","email":"ikeagold@gmail.com"},"date":"Sat, 11 Nov 2017 22:59:46 +0200"},{"sha":"78f3e8a6213efb76013651c8e1eec722a3e7d7af","message":"Merge-pull-request-110-from-marmelab-greenkeeper-initial","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Thu, 2 Nov 2017 19:54:31 +0100"},{"sha":"689492744c95546defbe1da414ad63bc11b7d049","message":"docs-readme-add-Greenkeeper-badge","author":{"name":"greenkeeper[bot]","email":"greenkeeper[bot]@users.noreply.github.com"},"date":"Thu, 2 Nov 2017 18:39:45 +0000"},{"sha":"8c0c599337d97a606baa91a78c0b0dbdbc9df7e6","message":"chore-travis-whitelist-greenkeeper-branches","author":{"name":"greenkeeper[bot]","email":"greenkeeper[bot]@users.noreply.github.com"},"date":"Thu, 2 Nov 2017 18:34:26 +0000"},{"sha":"6f398b87bc4ae4a9d3104f5f7094585a07a24853","message":"Merge-pull-request-108-from-marmelab-update-baseline","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Fri, 20 Oct 2017 22:23:14 +0200"},{"sha":"6b5912906a5d5abe6f4e8c263e1747727f0cef7d","message":"Merge-pull-request-109-from-marmelab-avoid-gitignore-twice","author":{"name":"Maxime Richard","email":"richard.maxime9@gmail.com"},"date":"Thu, 19 Oct 2017 09:25:38 +0200"},{"sha":"0dc25b1521255986c2025655e5e846e223fa01e3","message":"cli-Avoid-to-add-.comfy-in-gitignore-twice","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 18 Oct 2017 18:45:46 +0200"},{"sha":"6dadfffa1d7046dc28b3ab7a0370b8fb343ee83c","message":"cli-Update-help-baseline","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 18 Oct 2017 18:31:08 +0200"},{"sha":"6cbcb3912a63e2cb378148bb1b437a4143244cb9","message":"Merge-pull-request-107-from-marmelab-doc_rewrite","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Tue, 17 Oct 2017 18:03:38 +0200"},{"sha":"c6b15aca16c632a9d036a9ae40a320bf6f96e697","message":"Fix-github-README","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 17 Oct 2017 17:40:44 +0200"},{"sha":"7e2c5ff17c9da5438846f505dbee0cda55bab585","message":"Merge-pull-request-106-from-arturparkhisenko-master","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Tue, 17 Oct 2017 17:16:20 +0200"},{"sha":"8657a21dec0196da957935fa421e54e1d577c2ae","message":"Proofreading-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 17 Oct 2017 15:58:41 +0200"},{"sha":"0f60d3885959f772a2c1937dcde02c9b882d09d2","message":"babel-env-for-admin-part","author":{"name":"arturparkhisenko","email":"ikeagold@gmail.com"},"date":"Thu, 5 Oct 2017 17:34:34 +0300"},{"sha":"edc7f691b637d51f4b2915930e6433162b16c20c","message":"Merge-pull-request-104-from-marmelab-api-node-6","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Wed, 27 Sep 2017 08:36:21 +0200"},{"sha":"1d52a1178a6a8a1db0a1848f4f8074eff66fc809","message":"api-use-node-6","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 26 Sep 2017 18:08:25 +0200"},{"sha":"4dba0e88cf234ad2e016082dcbba41f94fbf6a6e","message":"Merge-pull-request-102-from-marmelab-fix-absolute-config-path","author":{"name":"Maxime Richard","email":"richard.maxime9@gmail.com"},"date":"Fri, 22 Sep 2017 12:26:15 +0200"},{"sha":"9ed1a6767dc42619e329f82be122f00c2ddc84b7","message":"setall-Fix-absolute-config-path","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Thu, 21 Sep 2017 18:34:23 +0200"},{"sha":"9bb1cacf13e4c98c161a407bbe1becc1c2f69083","message":"Version-0.1.2","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 18 Sep 2017 17:04:00 +0200"},{"sha":"ba186f2db3e8d3b053998fb734c4327f0ddd666d","message":"Merge-pull-request-100-from-marmelab-display-version","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Mon, 18 Sep 2017 17:03:33 +0200"},{"sha":"73882bcbacf25774e0f0482616d4fece00205d07","message":"Merge-pull-request-98-from-marmelab-documentation","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Mon, 18 Sep 2017 16:59:44 +0200"},{"sha":"ca385af0076972ae3182d89a3a2e6c49b8b0f9f0","message":"Display-version","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 18 Sep 2017 16:57:31 +0200"},{"sha":"530d7f37fbf7f519ceb49bcca41bc065253c99e4","message":"Proofreading","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 18 Sep 2017 16:39:09 +0200"},{"sha":"6021daaf7d1ccbd5e7d31ee42cd891a8ea8c7ee9","message":"Issue-template","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 18 Sep 2017 16:18:42 +0200"},{"sha":"6241387ec11b95cbd2abcf34ec59a52dcd255f70","message":"Contributing","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 18 Sep 2017 16:11:55 +0200"},{"sha":"a4acaf6cbe3f7692d131260ffc6375e78b1537c3","message":"Advanced-Usage-documentation","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 18 Sep 2017 15:54:51 +0200"},{"sha":"c858396de85ac706e99fde812a78b6159e7b0e43","message":"Basic-Usage-documentation","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 18 Sep 2017 14:52:18 +0200"},{"sha":"0deee8496b444843b471aaf6dbfdb73a66925b8f","message":"Basic-usage-example","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Thu, 14 Sep 2017 18:18:44 +0200"},{"sha":"bc75a632ff613d4ea8f09a08019253c481de1715","message":"Nice-badges","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Thu, 14 Sep 2017 17:54:56 +0200"},{"sha":"719fc44fca333ccacb7109a994b72b94e9e8a997","message":"Version-0.1.1","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 18 Sep 2017 10:29:39 +0200"},{"sha":"f3161831c4977bc43f906412c6980986c084d4cf","message":"format-better-null-handling-for-envvars","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 18 Sep 2017 10:26:47 +0200"},{"sha":"57341282526eaf4564439152a344bf3d10e37a39","message":"Merge-pull-request-99-from-marmelab-handle-null-value","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 18 Sep 2017 10:22:16 +0200"},{"sha":"49b01060ce42212a2aa0b09ba6f8bb7687cb71b4","message":"format-handle-null-value-with-envvars","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 18 Sep 2017 10:15:52 +0200"},{"sha":"da2208a52f73131e86497cbc5de9a2324d02d774","message":"Version-0.1","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 18 Sep 2017 09:52:13 +0200"},{"sha":"52eb53f7f61b64b19742e1e940b7cfafd1661b07","message":"Merge-pull-request-97-from-marmelab-serialization","author":{"name":"Maxime Richard","email":"richard.maxime9@gmail.com"},"date":"Thu, 14 Sep 2017 17:34:38 +0200"},{"sha":"9696a394ff69c477574e2df9a56789a8cedf7919","message":"More-tests","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Thu, 14 Sep 2017 17:24:52 +0200"},{"sha":"bb5c5dbe44fca9c302cc0b68cb1c3bc70ce35e5d","message":"Introduce-entry-serialization","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 13 Sep 2017 17:59:21 +0200"},{"sha":"08fab995cccffd35a7f6618c539394a38c3eb0d8","message":"Make-the-issue-appear-in-the-tests","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 13 Sep 2017 17:48:54 +0200"},{"sha":"64cd2920dc665cc45b0cc8c1cf558a9a92997f05","message":"Merge-pull-request-96-from-marmelab-test-child-entry-deletion","author":{"name":"Maxime Richard","email":"richard.maxime9@gmail.com"},"date":"Fri, 8 Sep 2017 12:19:50 +0200"},{"sha":"6fad7367843aadefc9fa1f7abb99e2ea5690f855","message":"Test-child-entry-deletion","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Thu, 7 Sep 2017 21:33:45 +0200"},{"sha":"f9b3ab2bad746cb2f147b5d0b04229a0757927eb","message":"Merge-pull-request-93-from-marmelab-hmac-signature","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 6 Sep 2017 09:03:12 +0200"},{"sha":"5882a6cd6199e13d16d54bc27e716962524e2ec6","message":"Typo-fix-s-the-identic-signature-an-identical-signature","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Wed, 6 Sep 2017 07:02:13 +0000"},{"sha":"1c57dbf4ef0cb81c6edc71573d804d0152e43e45","message":"HMAC-sign-check-encrypted-data","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 5 Sep 2017 18:39:09 +0200"},{"sha":"c666b2b372c4836d5b71447f8c87d6acaad070e9","message":"Generate-new-HMAC-key-at-project-init","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 5 Sep 2017 17:52:55 +0200"},{"sha":"51bdc6e580dc8bfcd876da6d66c1150866987809","message":"Add-mine","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 29 Aug 2017 18:03:52 +0200"},{"sha":"c7d65ae47088d822a225e714237654894c3e9dce","message":"Fix-damn-tests","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 29 Aug 2017 17:41:27 +0200"},{"sha":"96efb749190b30c701a694e70f3d3d40e3136c66","message":"Merge-pull-request-87-from-marmelab-migration","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Thu, 3 Aug 2017 18:18:13 +0200"},{"sha":"151f73f9a23059ed6c5b74dae1e602a9742ba943","message":"Rebase-linting","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Thu, 3 Aug 2017 17:58:07 +0200"},{"sha":"1db4181b1d531ba6407bdf89ca50d4ce34e3340c","message":"code-review","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Thu, 15 Jun 2017 09:56:04 +0200"},{"sha":"a13072313212f2112c69e4ec1ab760e9e5ae5c5f","message":"add-migration-to-ensure-each-tag-is-unique-for-a-given-configuration","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 24 May 2017 16:25:36 +0200"},{"sha":"5a09622f41c537c434cacb91d9aaba1af4f610bd","message":"add-db-migrate","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 24 May 2017 14:47:07 +0200"},{"sha":"7ced95a99057a5708e545617a7bf9e6801bc55d6","message":"Merge-pull-request-92-from-marmelab-crypto-things","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Thu, 3 Aug 2017 17:46:38 +0200"},{"sha":"24b6c67ba541e4e33e7acc8118388972cb8e7149","message":"Code-Review","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 2 Aug 2017 17:37:37 +0200"},{"sha":"fb0ee774fc55158e6e251155f118f9b53d130ba4","message":"Passphrase-to-private-key","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 1 Aug 2017 18:06:55 +0200"},{"sha":"9414ee1d53b52bb5dce216787482c4ff5740bdc0","message":"Implement-the-new-randomized-crypto-function","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 31 Jul 2017 18:40:27 +0200"},{"sha":"fc39e4a1ca541cea871b2fe593f7a56c26308fe2","message":"Add-a-test-for-a-better-crypto","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 4 Jul 2017 09:33:12 +0200"},{"sha":"ff0c7816e9cb18fdef5da5f80f841df95fb50efc","message":"Merge-pull-request-89-from-marmelab-minimal-test-suite","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Tue, 27 Jun 2017 09:16:45 +0200"},{"sha":"dc549aa1473844b56d770c08d1b4ae90e8a622ac","message":"Try-to-test-multiple-Node-versions","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 26 Jun 2017 18:22:15 +0200"},{"sha":"9382e01f40b059f7cdc72224fb04afa6ccd1519b","message":"Set-a-timeout-of-5s-for-all-mocha-tests","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 26 Jun 2017 18:17:48 +0200"},{"sha":"7ffb5c011270a0763dc6b8ec031df63541e2182c","message":"Code-review","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 21 Jun 2017 18:05:25 +0200"},{"sha":"e286c44795bef9d96f1dd410ce214264b73ba310","message":"Minimal-test-suite","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Fri, 26 May 2017 22:20:29 +0200"},{"sha":"9ea8f0a61aaad690fb5472f28e858d4ed43f670b","message":"Merge-pull-request-90-from-marmelab-cli_api","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Mon, 12 Jun 2017 18:34:56 +0200"},{"sha":"ff3ba64ec4740c74f94358b6bb1eba8af8e17d81","message":"Do-Sedy-s-job","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 12 Jun 2017 18:29:07 +0200"},{"sha":"4e3a8515cd418dad961a1213bb80b7d60691d0c2","message":"Improve-CLI-API-and-help-text","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 6 Jun 2017 21:50:28 +0200"},{"sha":"d34f15ec3de2c0c9182c1f60540c275aa3243c84","message":"Merge-pull-request-55-from-marmelab-add_to_setall","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 6 Jun 2017 07:48:34 +0200"},{"sha":"6c69a31dbb312c119b068bc9465751bb930e8cd3","message":"Merge-pull-request-88-from-marmelab-admin_config_as_table","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 1 Jun 2017 10:47:32 +0200"},{"sha":"8e06001f09ea14bd5e2db9759e28c72335a06769","message":"fix-styles-on-hover","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 24 May 2017 17:38:04 +0200"},{"sha":"a7d641aa09b2cd5637dad44f322ca2a22da2b342","message":"RFR-Use-table-for-config-keys","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 24 May 2017 17:33:28 +0200"},{"sha":"d6aecb14e32886630b00f8db236fee1647f462c1","message":"Merge-pull-request-86-from-marmelab-admin_ergonomics","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 24 May 2017 10:50:46 +0200"},{"sha":"6a58dcd7a6b4e7fd7b5eb25229d0247a21a7da08","message":"search-style","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 24 May 2017 10:35:45 +0200"},{"sha":"fb25f1dea552de4ecd404e9302f218d1e625c6c2","message":"RFR-Unlock-on-item-click","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 24 May 2017 10:33:10 +0200"},{"sha":"14a92be479fc18ca53842ac48c8ec6c3a7b7f621","message":"Merge-pull-request-85-from-marmelab-admin_add_setting","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 24 May 2017 10:25:10 +0200"},{"sha":"a35ab45585d8d48b147d6a0eb73e8f949bc0ef8a","message":"fix-after-rebase","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 24 May 2017 10:20:34 +0200"},{"sha":"3672bba30215d5265625bea41e0125c4e0a55350","message":"RFR-Admin-add-a-new-config-key","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 24 May 2017 09:12:00 +0200"},{"sha":"717eda84970be698227ac4a3f37701d8412e1c23","message":"Merge-pull-request-82-from-marmelab-search_as_you_type","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Wed, 24 May 2017 10:15:18 +0200"},{"sha":"6346eb5ab271aaa46766e1ad111fa2dd44a7b6e0","message":"code-review","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 24 May 2017 10:11:19 +0200"},{"sha":"ff8c50b6a21a1652ca55983c5cf5386f5eeb9112","message":"fix-rebase","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 24 May 2017 09:43:23 +0200"},{"sha":"9f8f5a62c62f7fdc4bf1f88254a759d510e2680c","message":"fix","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 17:39:34 +0200"},{"sha":"b3cbeb49985eff37461b75a0eb55fec9a6f09a52","message":"code-review","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 16:27:47 +0200"},{"sha":"b90c0c90d15148236f961ad614037592c99d5931","message":"better-style-for-search-input","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 15:38:19 +0200"},{"sha":"86f15ae30f53304fabed1b8ca4f93ea4caa3de4a","message":"add-search-input","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 15:09:32 +0200"},{"sha":"e4e92fe38ad2889f94c44462b144f1d2618824a5","message":"Merge-pull-request-84-from-marmelab-admin_edit_setting_refactor","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 18:03:38 +0200"},{"sha":"1f7647173ed3c1d868bcc63a689ce2f322e10f55","message":"RFR-Refactor-ConfigKeyEditionDialog-and-cleanup","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 23 May 2017 17:59:08 +0200"},{"sha":"58dacfc42b2b80592b66f6761edf8fbcda78a986","message":"Merge-pull-request-83-from-marmelab-admin_edit_setting","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 17:52:08 +0200"},{"sha":"ae7800ddbf220d390f5dc3f53bd3cd956da66b1a","message":"missing-files-after-renaming","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 23 May 2017 17:24:45 +0200"},{"sha":"4e5941b14d9fb859ae8de621f46b9fb070091bf8","message":"refactor","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 23 May 2017 17:18:27 +0200"},{"sha":"f27a86fe5eab7f9f2dd9a2ccaebd59a39cdcc491","message":"RFR-Admin-Edit-a-config-key","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 23 May 2017 15:56:07 +0200"},{"sha":"069e2151cc433c74c5b40f8ee0e7e72e2d8a8cc0","message":"Merge-pull-request-81-from-marmelab-admin_remove_setting","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 16:48:39 +0200"},{"sha":"871a5f4f0a0e281cd0e2daabce18aab0bf08d05a","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 23 May 2017 16:38:42 +0200"},{"sha":"231fe24570663a8fc7fd4fcd86b24d2d90d760a3","message":"RFR-Admin-Remove-an-config-entry","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 23 May 2017 15:17:53 +0200"},{"sha":"783038fffe0b98ae638595a689bc391b022531b7","message":"Merge-pull-request-78-from-marmelab-faster_admin","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Tue, 23 May 2017 14:11:24 +0200"},{"sha":"da4fed7452aba57dd4454cc9ed6290e6edf62504","message":"Merge-pull-request-80-from-marmelab-admin_styles","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 14:02:59 +0200"},{"sha":"7d92383a7abf6317b11f191e9462534c95cb7587","message":"RFR-Admin-styles","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 23 May 2017 12:36:06 +0200"},{"sha":"668193c056be3b50181435bdf74484aaf0c2c015","message":"Merge-pull-request-79-from-marmelab-admin_crypted_view","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 12:42:17 +0200"},{"sha":"af5eb9efdb0f99840f5a8ffefd7d252b2d4d584c","message":"fix-test","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 12:37:23 +0200"},{"sha":"3f5b6ed5e702609c8f6135991b0a580e0e48c6d6","message":"fix-deps","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 23 May 2017 12:13:31 +0200"},{"sha":"098430fcb3d093d89c7b5c925a604f877f439359","message":"RFR-Switch-to-hidden-values-by-default","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 23 May 2017 12:12:48 +0200"},{"sha":"1fb159529bbc36715fdb795841e47b59e6cc522e","message":"open-tab-automatically","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 12:06:10 +0200"},{"sha":"d81a558e439af765fd35e7ad9a8c507401b7afc7","message":"use-the-builded-admin-in-comfy-admin-command","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 11:48:32 +0200"},{"sha":"deffb5d357803a09215e5a3be344ed80dff5fb07","message":"fix-config-from-file","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 11:16:23 +0200"},{"sha":"76afaf083151fa62da8571df4101553cc3560ab6","message":"Merge-pull-request-57-from-marmelab-admin","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Tue, 23 May 2017 10:26:55 +0200"},{"sha":"aaaea1c4dbd24ec5cff50646dcb91ecf217b0fad","message":"fix-eslint-warnings-which-prevent-compilation","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 23 May 2017 10:14:06 +0200"},{"sha":"4ad36ffc2e5e2bf5b7cebd89f8949b5581390a20","message":"fix-tests","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 23 May 2017 10:07:04 +0200"},{"sha":"38a11e8ee633a55d32bcf1ede0605286de02bc1d","message":"Merge-pull-request-77-from-marmelab-admin_refactor","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 10:04:04 +0200"},{"sha":"9c3599b53b6ecfc9727dfd9f7b5eda5ae6a1bc5b","message":"RFR-Admin-refactoring","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 22 May 2017 17:56:48 +0200"},{"sha":"3c4261cde6e2a4f9d1167a43b1f148bc4671b3bc","message":"Merge-pull-request-71-from-marmelab-admin_edition","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 23 May 2017 10:01:58 +0200"},{"sha":"2a6aa3674535894dfce97a24830aa7c774ddfe74","message":"fix-deps","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 22 May 2017 17:38:56 +0200"},{"sha":"37d7486ac7ac3de7883c14e08fae85ec94eb50a0","message":"review-and-fix-config-update","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 22 May 2017 17:37:02 +0200"},{"sha":"f1c27bb84aebc1a4c902b3349fded707b438f515","message":"Merge-pull-request-76-from-marmelab-fix_command","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 22 May 2017 16:56:23 +0200"},{"sha":"90d2c2c908ca1dcf261acffd34ba39767d07d968","message":"fix-default-for-config-in-webpack","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 22 May 2017 16:42:03 +0200"},{"sha":"51fb3e8c8c2a1e7c060249734012d4ae6bc98b16","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 22 May 2017 16:37:56 +0200"},{"sha":"f3f3bde0df136c332d797acd0b4dbf148ab3e968","message":"tests","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 22 May 2017 15:09:49 +0200"},{"sha":"7c59a78477f57e815e7dd8421ebb73e522457d13","message":"WIP-Config-edition","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 22 May 2017 15:04:32 +0200"},{"sha":"f8176d1130a5d2ae63fc9299d4e54b1fbabc9915","message":"Merge-pull-request-68-from-marmelab-remove_create-react-app","author":{"name":"Gildas Garcia","email":"gildas.garcia@gmail.com"},"date":"Mon, 22 May 2017 15:22:27 +0200"},{"sha":"63794da99dd51848c2edc4e91079ab06cf071594","message":"code-review","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 22 May 2017 15:21:53 +0200"},{"sha":"595e83faefd5f0e37c4b24983439d726f0b14b42","message":"code-review","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 22 May 2017 15:15:29 +0200"},{"sha":"08072338769852f5d2a80d8a326efc059b888b84","message":"fix-config-injection-for-dev-and-prod","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 22 May 2017 14:34:30 +0200"},{"sha":"11db1160ebf4acf104f28c7ae543e2ab8ea7993c","message":"code-review","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 22 May 2017 14:21:57 +0200"},{"sha":"3b204b8af19103ad48f689f36cdb9774d54e023d","message":"Merge-pull-request-70-from-marmelab-admin_adjustments","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 22 May 2017 14:19:15 +0200"},{"sha":"3f4c5901628bcef31dfc0bf3ef6b68e80f2f212e","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 22 May 2017 14:17:12 +0200"},{"sha":"c943a550551f4cf1fd35cb8258a6a1c086d6e757","message":"use-webpack-dev-server-to-launch-admin-with-.comfy-config-when-available","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 22 May 2017 13:55:48 +0200"},{"sha":"d003412e7a1bc0987a8dd5b95eb95cb87f8c2956","message":"fix-after-eject","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 22 May 2017 09:48:42 +0200"},{"sha":"d28020a06937ef55cd35549e6e36bb531835c948","message":"eject-create-react-app","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 17 May 2017 18:08:08 +0200"},{"sha":"1761fee6b7e777e245b46773a08152846562aa8b","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 22 May 2017 13:13:46 +0200"},{"sha":"2e121ff7f37558a738e9df9fc29703ee5e31f911","message":"RFR-Admin-adjustments","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 22 May 2017 11:59:13 +0200"},{"sha":"ca67151878f04865af826865e2e1fa8ea39c1ab1","message":"Merge-pull-request-69-from-marmelab-admin_load_config","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 22 May 2017 10:52:49 +0200"},{"sha":"8d8b9cf69900c3204060ec9e5e09d5df5895401c","message":"WIP-Load-config-from-api-and-depending-on-selected-env","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 22 May 2017 10:46:12 +0200"},{"sha":"28c91bbdfd48c91b4e3d36d52b8fb3f33f37e93c","message":"Merge-pull-request-67-from-marmelab-admin_config","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 17 May 2017 18:08:44 +0200"},{"sha":"2d4df172094e6a7cd856d23ff2572cb0754dc890","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 17 May 2017 17:39:01 +0200"},{"sha":"0e634eae68b7f12a1eabc0339b11293e3833eb2e","message":"missing-test-files","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 17 May 2017 17:34:34 +0200"},{"sha":"f989d7e69a007d019ca2a8534825b09160671c87","message":"review","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 17 May 2017 17:09:47 +0200"},{"sha":"f4a52a23878ae6d335cd91bca9e86e7e33cf6909","message":"Fixes","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 17 May 2017 16:09:01 +0200"},{"sha":"c8d6fb07821a20ed8c33f02fc50542131b7a6962","message":"Refactoring-after-rebase","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 17 May 2017 15:36:29 +0200"},{"sha":"3811f2499b2694ddf8bda378e41059839f7420a0","message":"better-parseResponse","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Wed, 17 May 2017 09:23:21 +0200"},{"sha":"978ee2fd5c74a33226e207c8ca284dafa5c76f16","message":"WIP-Admin-Load-config","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 May 2017 18:03:44 +0200"},{"sha":"fb82effdeec0fa4e990a765bec395522e6a6489f","message":"fix-build-create-react-app-hate-external-import","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 17 May 2017 15:44:01 +0200"},{"sha":"4f615260be53a1fb1b07bbc399443baa9bd184b2","message":"allow-to-change-origin-in-Login","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 17 May 2017 14:26:25 +0200"},{"sha":"cf663507d6c4c833c21cb29286c70765a242c0df","message":"add-test-on-fetchEnvironments","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 17 May 2017 12:11:02 +0200"},{"sha":"04ce2dc3c363a6a9ee247e8d625aaea5465de7dc","message":"default-environments-to","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 17 May 2017 11:54:22 +0200"},{"sha":"bb31361666da2b7f935fde73644c6af0305575fc","message":"add-Alert-component","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 17 May 2017 11:29:01 +0200"},{"sha":"2bf23e21fd60bdebc77a09a832c92f546d12b47f","message":"add-test-on-fetchRequest","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 17 May 2017 11:17:06 +0200"},{"sha":"b7869c6839d106a2677206ceae49ae9d7587fdac","message":"add-test-on-handleFetchResponse","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 17 May 2017 10:49:29 +0200"},{"sha":"ad72fd883d8a439001140a435db76b381b1a1f1e","message":"add-eslin-plugin-for-jest","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 17 May 2017 10:51:28 +0200"},{"sha":"16db99658a733d89b72039f127df46d7968d15fb","message":"dispaly-error","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 17 May 2017 10:36:44 +0200"},{"sha":"75a6d487682a31a0670c90bb1c7732ca49a25a36","message":"add-fetch-helper-and-test-submit-effet","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Wed, 17 May 2017 10:29:34 +0200"},{"sha":"a99d1601e6b05954283a2bbf49f52e3e43531b64","message":"add-some-test","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 16 May 2017 18:34:48 +0200"},{"sha":"1e5fd6d15f983a3fa4435f09f14aea6a1f8e19df","message":"fetch-environments-on-submit","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 16 May 2017 14:25:26 +0200"},{"sha":"aabfb39bcd2c6b3501238b532d52d1171a10cadb","message":"Cleanup-and-lint","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 May 2017 09:45:31 +0200"},{"sha":"63acf6daed6835baaebaebbdeaa176680cb71b96","message":"styles","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 15 May 2017 17:23:13 +0200"},{"sha":"b5b278e61c993eb478932252b7c7e78c92509abe","message":"remove-useless-title","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 15 May 2017 17:21:09 +0200"},{"sha":"a52ff4b71ee73ee444fefbb4b17492eb63abed82","message":"missing-files-styles","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 15 May 2017 17:19:38 +0200"},{"sha":"15bf5e6d8058c545a8ee5274c7378db5301def71","message":"tags-selection","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 15 May 2017 17:14:09 +0200"},{"sha":"c17fea358250004d9b3e049adfb9609c72156dcd","message":"show-current-config","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 15 May 2017 16:23:29 +0200"},{"sha":"317251b5f26bf60e7e766d729f072c8ed6ef0554","message":"WIP-Admin-UI","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Mon, 15 May 2017 15:49:22 +0200"},{"sha":"3a13ffdb8e13d61a175500b36da04f263945af82","message":"RFR-Admin-Prettier","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 May 2017 09:27:06 +0200"},{"sha":"df1626f292dcb1029fa422a8014a1fdd77cb9815","message":"downgrade-jsx-a11y","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 May 2017 12:34:21 +0200"},{"sha":"c3ca55ff69747c63a25b48dc233f51ac2e4361cc","message":"fix-after-rebase","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 May 2017 12:09:09 +0200"},{"sha":"bb681b7450d8c4515e00e0d91f32ea66101ff827","message":"fix-dependencies","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 May 2017 12:03:50 +0200"},{"sha":"5fb0e26d72e63f084668ccc1d9df87c0a93e6643","message":"RFR-Admin-Prettier","author":{"name":"gildas","email":"gildas.garcia@gmail.com"},"date":"Tue, 16 May 2017 09:27:06 +0200"},{"sha":"ea0dbbd9d3f6457610b67d0e0995cd209967e010","message":"add-provideLoginState","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 16 May 2017 11:29:48 +0200"},{"sha":"704cbc4439811d1864a4c51437f8c6aa22ab0a4e","message":"allow-to-specify-port-for-admin-command","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 15 May 2017 18:08:13 +0200"},{"sha":"a3da74a749d62abfd3ed76f3d71d66ef8dd43c54","message":"add-test-WIP","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 15 May 2017 17:34:41 +0200"},{"sha":"99c5c7e952e76f6f6d52cc199f12eb031c255e62","message":"start-using-freactal","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 15 May 2017 15:34:05 +0200"},{"sha":"e173f6a43dd6685e1216ce55551ed3f3062f4b82","message":"have-comfy-admin-run-comfy-admin-or-propose-to-install-it-if-not-present","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 15 May 2017 16:53:41 +0200"},{"sha":"4c26d1746ff9ef6e8785e1cdfe50f0733921bc5d","message":"add-bin-comfy-admin-to-admin","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 15 May 2017 16:01:00 +0200"},{"sha":"c811f9d596d443aee192f4c3319673b97e124214","message":"build-publish-and-serve-admin","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 15 May 2017 14:19:41 +0200"},{"sha":"6f6a8141f36bac5c2c8b7e349185d81adaa637b7","message":"remove-useless-dependencies","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 15 May 2017 13:07:23 +0200"},{"sha":"e674b2ee16cdcbf3936f2992181a843d9346f878","message":"npm-fixed-dep","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 15 May 2017 13:05:14 +0200"},{"sha":"c7bd2e0f9af002fce9bacac9e1c915f3912626f6","message":"update-README","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 15 May 2017 13:01:51 +0200"},{"sha":"3fc767bd2f30bf7c8d781c12031f8ac836968160","message":"add-comfy-admin-command","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 15 May 2017 12:59:07 +0200"},{"sha":"3ec9baa0d22636a9be82deac23c29f1f2eb9f89f","message":"remove-admin-on-rest-add-material-ui-simple-login","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 15 May 2017 12:29:56 +0200"},{"sha":"32ef834a018de269cbbe4b2fbe553ac3ce145231","message":"add-makefile-for-admin","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Mon, 15 May 2017 12:29:08 +0200"},{"sha":"b5caa4eebf267621d25a19c6176291d612e04598","message":"initialize-admin-view","author":{"name":"demougin2u","email":"mini-d@hotmail.fr"},"date":"Mon, 15 May 2017 10:07:37 +0200"},{"sha":"841cc8393505dc617e888efb472acf39f55308b1","message":"Merge-pull-request-63-from-marmelab-fix_init_origin","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Tue, 16 May 2017 22:20:50 +0200"},{"sha":"ef2febc163527cf4e205d6940b7c80231b4c3a73","message":"properly-save-origin-in-config-file-on-init","author":{"name":"ThieryMichel","email":"thiery@marmelab.com"},"date":"Tue, 16 May 2017 16:20:27 +0200"},{"sha":"eabaf731c3788bf47b70caca85f26d5d08c08499","message":"Remove-exit-from-help","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 5 May 2017 21:30:00 +0200"},{"sha":"f0362b8ec4bf5907e6a865027867d450fcacf846","message":"Typo-fix-s-seyall-setall","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Fri, 5 May 2017 17:43:35 +0000"},{"sha":"81fda6843f30373528a98fe4187e0ce523128272","message":"Show-that-path-can-be-relative","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 5 May 2017 19:01:25 +0200"},{"sha":"c0f3764c050a1c4d264fa5505d2e5b344929c5b1","message":"Fix-help-formatting","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 5 May 2017 17:40:05 +0200"},{"sha":"17b4381e3da717f5b46493184d51fa1a883b9554","message":"Simplyfy-syntax","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 5 May 2017 17:37:37 +0200"},{"sha":"dfbc6ad21c22e47d02a42284f1d37e75ab0fef16","message":"Rename-add-command-to-setall","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 5 May 2017 17:02:20 +0200"},{"sha":"c33e2a193660f7615279ca403a50bb0bd89a359a","message":"Merge-pull-request-52-from-marmelab-better_init","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Thu, 4 May 2017 14:58:31 +0200"},{"sha":"3b3bf1b04df861ad10baf9b8807329862f08b0fd","message":"Update-README","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 4 May 2017 14:42:13 +0200"},{"sha":"79c30ff213c3db9cf04bbf3d90b16ac15c44f12a","message":"Improve-init-syntax-remove-interactive-mode-unless-necessary","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 4 May 2017 14:37:07 +0200"},{"sha":"52cbaee83e6fca8454b314555cac7ea0b55d0910","message":"Merge-pull-request-49-from-marmelab-init-wording","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Thu, 4 May 2017 12:31:50 +0200"},{"sha":"f33e2cf99858a9e21a9d85fa40279f10c66550f0","message":"Improve-wording","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Thu, 4 May 2017 11:15:58 +0200"},{"sha":"64462447102f1dce39c94c3f36a3bbb97e8b2808","message":"Merge-pull-request-50-from-marmelab-fix-no-tag","author":{"name":"Jonathan Petitcolas","email":"petitcolas.jonathan@gmail.com"},"date":"Thu, 4 May 2017 10:11:08 +0200"},{"sha":"17166906454116ffdd9d119c830dc81faf66a2d4","message":"Fix-no-tag-created-after-project-init","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 3 May 2017 18:29:17 +0200"},{"sha":"bc6b09ae052b2b4c141617ed9e1cbb52d6534167","message":"Update-init-command-wording","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 3 May 2017 18:24:07 +0200"},{"sha":"75630f3db6984548c223597c69161c2e533c3a26","message":"Remove-useless-output","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 3 May 2017 18:14:31 +0200"},{"sha":"33d20d826707289022638bc4db014a9ef7e800d9","message":"Remove-my-email","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 3 May 2017 17:43:18 +0200"},{"sha":"45021d8242ddec6a9795349579da209e69808c55","message":"Merge-pull-request-47-from-marmelab-fix-nullable-value","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Wed, 3 May 2017 17:39:23 +0200"},{"sha":"2da63e7cc66b1630e8d3d476cf97e61f66d86bb7","message":"Fix-nullable-value-to-include-only-null-and-undefined","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 3 May 2017 14:23:02 +0200"},{"sha":"9252676ba48f251e62ae583c191aa6ade6522c40","message":"Merge-pull-request-46-from-marmelab-handle-null-value","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Wed, 3 May 2017 13:55:43 +0200"},{"sha":"1e653e3136f818c63033d2c9c7dc0e028ac22930","message":"Handle-null-values","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 3 May 2017 12:16:36 +0200"},{"sha":"12b67b22007bdd63f9b094061c14c5e7ff70ac36","message":"Merge-pull-request-43-from-marmelab-misc-fixes","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Tue, 2 May 2017 15:54:58 +0200"},{"sha":"2bc0c07a0535735eccfc0a509c71f1be46474d36","message":"Damn-fixes","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 2 May 2017 15:53:00 +0200"},{"sha":"6f92cf1a7570632cd8765962914986dbcb4e42cd","message":"Bump-client-version-to-0.0.3","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 2 May 2017 14:45:42 +0200"},{"sha":"d952f6eaa8782ad276993831fa256d8e2db451d7","message":"Merge-pull-request-34-from-marmelab-add_tags","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Tue, 2 May 2017 14:39:20 +0200"},{"sha":"bba2ea49598739f0048e23ebd6e6af5ebd83a4c6","message":"Wording","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 2 May 2017 14:30:41 +0200"},{"sha":"888ccbbd55f03486cc8b8c0d3935ff3a15774e26","message":"Code-review","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 2 May 2017 14:19:26 +0200"},{"sha":"900db360bf0d698c25cc08d1dce1e6439d30397e","message":"Typo-fix-s-successfuly-successfully","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Tue, 2 May 2017 09:14:30 +0000"},{"sha":"87bdf5e6f6360b061ece2147ba51042a0aaf2fc3","message":"Cli-remove-tag","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sun, 30 Apr 2017 17:43:09 +0200"},{"sha":"5e53cf09be5a8a00ad42ef7f3eaab378863069ac","message":"Cli-move-tag","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sun, 30 Apr 2017 17:32:00 +0200"},{"sha":"0c0226b0c366d980ef85b5c0377b7c8b4b5681a9","message":"Cli-add-tag","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sun, 30 Apr 2017 16:55:09 +0200"},{"sha":"7c42a08f094536836c902ee757768a6cc64386bd","message":"Enhance-tag-validation","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Fri, 28 Apr 2017 20:03:41 +0200"},{"sha":"5336ca6d0cfdf349f7cbd41737ffbbbc464be489","message":"Add-tag-operations","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Fri, 28 Apr 2017 14:58:44 +0200"},{"sha":"36d0b9378b174e2066e326b5e1a0bf4d45187194","message":"Add-routes","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Fri, 28 Apr 2017 10:24:47 +0200"},{"sha":"3d629e163d32f1a75a0643b6016b637426b0e6be","message":"Merge-pull-request-38-from-marmelab-prepare-npm-build","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Tue, 2 May 2017 11:06:31 +0200"},{"sha":"2947f8e1a86f8a74ad619bc629ff3cc9bfd921c5","message":"Make-serverless-to-beta-stage","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sun, 30 Apr 2017 18:00:25 +0200"},{"sha":"354f075d329e87bf68c70fed6e133d25be85f010","message":"Publish-only-what-is-needed","author":{"name":"Kmaschta","email":"maschtaler.kevin.iris@gmail.com"},"date":"Sun, 30 Apr 2017 17:57:43 +0200"},{"sha":"f764cfdcefe486303259486b5642301b7ada910b","message":"Bump-version","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 28 Apr 2017 16:23:27 +0200"},{"sha":"da07f867c3a04b2c707c40d5d7ebd4ae9e66b9ac","message":"Update-npm-configuration","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 28 Apr 2017 16:22:47 +0200"},{"sha":"2bcfebeba96c35db8e1a79da3507d5e59f80ff83","message":"Add-examples-on-get-command","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 28 Apr 2017 14:50:20 +0200"},{"sha":"d4717b9bd4c4e0f8435f640246b3e851ecd5b7f6","message":"Set-default-origin","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 28 Apr 2017 14:22:42 +0200"},{"sha":"d32b9b1018080f7a36e57e015224444cfbbab145","message":"Merge-pull-request-42-from-marmelab-doc","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Sun, 30 Apr 2017 14:55:48 +0000"},{"sha":"85250c256b348c1736ce8444a9d8efe9998cec80","message":"Code-review","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Sat, 29 Apr 2017 08:30:24 +0200"},{"sha":"062fd157095d39f758e3a94bf90fdc77a4053c6a","message":"Typo-fix-s-remore-remote","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Fri, 28 Apr 2017 16:30:44 +0000"},{"sha":"a383d0b0c15dfcb6a3a3cc162767e850ed42e0d8","message":"Typo-fix-s-PASSWORD-S3cr3T-export-PASSWORD-S3cr3T","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Fri, 28 Apr 2017 16:30:43 +0000"},{"sha":"0f011842e043cc9107479245a88d2f1bdd87ead2","message":"Typo-fix-s-LOGIN-admin-export-LOGIN-admin","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Fri, 28 Apr 2017 16:30:41 +0000"},{"sha":"3868aea3d40e149fb3717e6b7b17ab90c3cf8ad8","message":"Typo-fix-s-comfy-comfygure","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Fri, 28 Apr 2017 16:30:40 +0000"},{"sha":"eee6bf48e7d663ee09b655e582e9f133d67b6b71","message":"Typo-fix-s-premissions-permissions","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Fri, 28 Apr 2017 16:30:39 +0000"},{"sha":"32d4defc8ab9a345c86bfd91a4d34a2ba622f791","message":"Typo-fix-s-PASSWORD-S3cr3T-export-PASSWORD-S3cr3T","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Fri, 28 Apr 2017 16:30:38 +0000"},{"sha":"88794a74e6944a4129e58a1d9f830824974751d2","message":"Typo-fix-s-LOGIN-admin-export-LOGIN-admin","author":{"name":"sedy-bot","email":"kevin+sedy@marmelab.com"},"date":"Fri, 28 Apr 2017 16:30:36 +0000"},{"sha":"e784ccb4a2bf383eb8ba108d99796000d0388e80","message":"Merge-pull-request-21-from-marmelab-add_tests","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Fri, 28 Apr 2017 16:12:49 +0000"},{"sha":"e7509574502fd612e746d2427edf9c10141f0a93","message":"Make-shell-examples-consistent-in-style","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 28 Apr 2017 16:52:29 +0200"},{"sha":"d734c290fd57378f528897dc41d5255323b6e6ad","message":"Bootstrap-documentation","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 28 Apr 2017 16:50:56 +0200"},{"sha":"32264ae67db9ad69bc4829a1e5574b2eb40067f4","message":"Yes-commented-out-code","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Fri, 28 Apr 2017 15:38:44 +0200"},{"sha":"12ecdf745210431a07b4c87063358661e933b4eb","message":"Make-tests-pass","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Fri, 28 Apr 2017 15:31:43 +0200"},{"sha":"8eee2082a31e1479118be2c48c17edd12c8c87e9","message":"Add-tests","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Fri, 28 Apr 2017 09:21:48 +0200"},{"sha":"dbc6aefb116fcb1bf273b7ef56e21aff750e2391","message":"Add-some-tests","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Wed, 29 Mar 2017 14:51:51 +0200"},{"sha":"7d25d7bac2de66a0d94aaa56ef10a8d613027b1a","message":"Merge-pull-request-31-from-marmelab-add-env","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Fri, 28 Apr 2017 15:02:34 +0200"},{"sha":"5a35228f5033cf599c1cdff967ee5c6a5cf1abf6","message":"Merge-pull-request-36-from-marmelab-filter-by-live","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Fri, 28 Apr 2017 15:01:05 +0200"},{"sha":"d2d5b8bb2fe13c0e4ab2543ed480bdc038d37cba","message":"Filter-all-queries-by-live-state","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 28 Apr 2017 11:49:34 +0200"},{"sha":"a406da8748f4c5faaf0d1c65e10ad153e2277a7d","message":"Pretty-print-the-result","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 28 Apr 2017 11:39:42 +0200"},{"sha":"70fa228bada7096c7519f6f89da31b40bcde1d28","message":"Add-a-environment","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 28 Apr 2017 11:19:02 +0200"},{"sha":"cd7a0a4fec1ef71d559cd623a54de86e7c644772","message":"Merge-pull-request-35-from-marmelab-secure-envvars","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Fri, 28 Apr 2017 10:44:36 +0200"},{"sha":"9ca49fb641665dd00dbe13e2babe049ba32f56d8","message":"Secure-envvars-format","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 28 Apr 2017 10:24:50 +0200"},{"sha":"16abfc566a8ec28209650a7ba9ea9acb553c3b0f","message":"Merge-pull-request-26-from-marmelab-settle-serverless-deployment","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Wed, 12 Apr 2017 17:58:03 +0200"},{"sha":"e0b9ff0960ab1a2e5b7a2940f11f44e01b65271d","message":"Code-review","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 12 Apr 2017 17:54:24 +0200"},{"sha":"fee7a1ad611c84aaa3ca70cf7a341b21289fcbdc","message":"Promise.all-on-entries-creation","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 4 Apr 2017 18:01:20 +0200"},{"sha":"829bd1d7030ca0f65a55bd0ad376b56b399c24af","message":"Improve-logging-a-bit","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 4 Apr 2017 16:29:53 +0200"},{"sha":"064f3ed995bb6d79f9fa45ea4d965372789a841e","message":"Remove-includes","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 4 Apr 2017 16:27:23 +0200"},{"sha":"08ad9443f08df9a26238b8f5d774aa3f5ef27988","message":"Fix-client-package.json","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 4 Apr 2017 16:17:03 +0200"},{"sha":"7f1e6be2addd505164dc293572bf59b60ec12875","message":"Share-the-same-var-naming-between-routes","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 4 Apr 2017 15:17:56 +0200"},{"sha":"01534268952cb9fbed894437da6bad96b1afda6e","message":"Merge-pull-request-25-from-marmelab-authorization","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Tue, 4 Apr 2017 15:15:15 +0200"},{"sha":"6ada9f9f8116e0c561ac6675fd879fa01cd48f06","message":"Use-authorization-on-the-client","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 4 Apr 2017 14:24:33 +0200"},{"sha":"dfef22fd3c2c7a8530683a2c1a386cfdc9477d80","message":"Separation-of-concerns-between-authorization-permissions","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 4 Apr 2017 14:22:46 +0200"},{"sha":"f1279876ab5988101637f38ccb55c288786e1602","message":"Move-to-HttpError-class","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 4 Apr 2017 14:13:53 +0200"},{"sha":"bfac99acb2f1a631109ccdeabce72e01cee904f3","message":"Check-permissions-on-all-handlers","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 4 Apr 2017 11:59:52 +0200"},{"sha":"e0a607ed2bc266a2f9122dfe4b22b50c4ad05cbc","message":"Introduce-token-validation","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 4 Apr 2017 11:55:53 +0200"},{"sha":"c65d0b2021c2ab736b5e1de7cbf66112a17bd941","message":"Merge-pull-request-24-from-marmelab-init-tests","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Tue, 4 Apr 2017 12:03:30 +0200"},{"sha":"12094e416ba4bf54dbae64be43b5671407263206","message":"Init-tests-eslint","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Mon, 3 Apr 2017 17:15:48 +0200"},{"sha":"4d103a5a585a102f2785806bae5d72c5d54abd3f","message":"Merge-pull-request-23-from-marmelab-unwanted-tag-changes","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Mon, 3 Apr 2017 17:59:40 +0200"},{"sha":"6b675891cf85f728802a7512a5577c63439e3e7a","message":"Remove-a","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Thu, 30 Mar 2017 16:45:14 +0200"},{"sha":"59519244bc634a4b4aad39df069418e4994c71f3","message":"Unwanted-tag-changes-all-history","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Thu, 30 Mar 2017 16:21:33 +0200"},{"sha":"fc75bfceb891f0ec844d400477af326a86af1ad7","message":"Merge-pull-request-22-from-marmelab-unwanted-tag-changes","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Wed, 29 Mar 2017 16:37:39 +0200"},{"sha":"9cc84d68d7888415a48d10c14d79be0b9177920b","message":"Do-not-change-the-tag-if-we-don-t-want-to","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 29 Mar 2017 16:22:27 +0200"},{"sha":"11598c45bae62d07ec8f5a1b19675bb09285d397","message":"Merge-pull-request-14-from-marmelab-finish-client","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Wed, 29 Mar 2017 14:49:05 +0200"},{"sha":"45744e30aab82b772d213a07882f7d13a57ae24f","message":"Make-all-things-work-fine","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 29 Mar 2017 11:55:53 +0200"},{"sha":"e4a78ebd73bf1368c4f4d2fe066fe4ac332a60c8","message":"Manage-API-errors-make-get-add-works","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 28 Mar 2017 17:31:10 +0200"},{"sha":"84a9532539717c7f4b872045f676a20107f48c13","message":"Make-env-get-commands-work-again","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 8 Mar 2017 18:45:46 +0100"},{"sha":"f9e65b1eefa692ac297bf0be99c0da909111d584","message":"Make-the-init-works-again","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 8 Mar 2017 18:14:42 +0100"},{"sha":"994d99c96fbef98d30e5934ee5f331061f933c64","message":"Make-env-command-works","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 3 Mar 2017 16:56:21 +0100"},{"sha":"059d447c7e8633727a0b01974c43d1cb320bd5b6","message":"Make-the-project-init-works","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Fri, 3 Mar 2017 16:52:27 +0100"},{"sha":"084f19567014a077d7d4331015825689c82fdb41","message":"Merge-pull-request-15-from-marmelab-add_test_architecture","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Wed, 8 Mar 2017 17:19:37 +0000"},{"sha":"ca23fa20196d4f8b6ecd2e8b3b498c8ff3064389","message":"Add-test-architecture","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Wed, 8 Mar 2017 18:17:32 +0100"},{"sha":"0aaf6fd3fbb7adf0fbb79a32e01411b7a251b980","message":"Merge-pull-request-10-from-marmelab-fix_deployment","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Wed, 8 Mar 2017 10:25:22 +0000"},{"sha":"c0897fe3624443e175d375ba98fa4f208db895bf","message":"Fix-last-route-problems","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Tue, 7 Mar 2017 13:55:10 +0100"},{"sha":"8675492b2022c80ef75db959e2cf3426efe9ecef","message":"Fix-some-queries","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Thu, 2 Mar 2017 17:34:11 +0100"},{"sha":"87c5f11fd510177bd580714d6225c0b7bc9c246a","message":"Rename-cowrap-to","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Thu, 2 Mar 2017 00:28:06 +0100"},{"sha":"2414355aae227b010904f11c9b35069842b3a326","message":"Merge-pull-request-9-from-marmelab-delete-on-cascade","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Wed, 1 Mar 2017 21:37:07 +0100"},{"sha":"0886324d3b8fbebd9d4e93b3c8939d5d0676d373","message":"DELETE-ON-CASCADE-for-all-foreign-keys","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Wed, 1 Mar 2017 18:20:04 +0100"},{"sha":"d3b65b6a29f82559955ae244d5df61bc0a9d50ac","message":"Merge-pull-request-7-from-marmelab-fix_deployment","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Wed, 1 Mar 2017 17:47:28 +0100"},{"sha":"cbcf76abb0e2c041952072befdd8e73de8671cae","message":"Remove-console-logs","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Wed, 1 Mar 2017 17:46:13 +0100"},{"sha":"5d8f9d7cc4f534a6b42bfa1238cfa7b28d8d5bcb","message":"Fix-deployment","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Wed, 1 Mar 2017 17:24:03 +0100"},{"sha":"b1a2cbbdf224dd87d8c78b3982c2fc330feaa06b","message":"Merge-pull-request-6-from-marmelab-project-init","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Wed, 1 Mar 2017 12:18:59 +0100"},{"sha":"13c93e8833759fcbf6c1bd4086c0c6d30a454242","message":"Make-project-init-work","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 28 Feb 2017 18:47:21 +0100"},{"sha":"b2d3dce06b7ac4a009d6dec98805c87f83817548","message":"Merge-pull-request-2-from-marmelab-api_code","author":{"name":"Kmaschta","email":"Kmaschta@users.noreply.github.com"},"date":"Tue, 28 Feb 2017 15:27:54 +0100"},{"sha":"7f242b3fd02bed79625aafd7312c091e74b29f7b","message":"Update-dependencies","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Tue, 28 Feb 2017 15:18:03 +0100"},{"sha":"122d87ce4d315a1c96b030cce2b27e00916afee1","message":"Code-review","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Tue, 28 Feb 2017 15:14:20 +0100"},{"sha":"534ec80d9b7864b32b0599027fb63902d39e1232","message":"Move-schema","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Tue, 28 Feb 2017 15:09:22 +0100"},{"sha":"67d61deefa6e7a16895035bb5e008758a7a6c2eb","message":"Ignore-config","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Tue, 28 Feb 2017 15:01:55 +0100"},{"sha":"87eb7d1ec618fc4b838aac38fe325bde4c0302ab","message":"Remove-npmignore","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Tue, 28 Feb 2017 15:00:55 +0100"},{"sha":"1b924c4753c8cd0fd7624bd806a8d29bc4c77594","message":"First-version-of-api-code","author":{"name":"Florian FERBACH","email":"florian@marmelab.com"},"date":"Tue, 28 Feb 2017 14:31:19 +0100"},{"sha":"a57fe2accd78da2c99e1941af456775cddfff1a4","message":"Merge-pull-request-1-from-marmelab-client","author":{"name":"Florian F","email":"florian@marmelab.com"},"date":"Tue, 28 Feb 2017 14:20:26 +0100"},{"sha":"629d098887f1329f32e2424d5d154e9a4804d989","message":"CLI-code","author":{"name":"Kmaschta","email":"kevin@marmelab.com"},"date":"Tue, 28 Feb 2017 11:32:15 +0100"},{"sha":"61a9d3c9d17e6a82754b9ebdad12b5c48612e2b7","message":"Initial-commit","author":{"name":"Francois Zaninotto","email":"fzaninotto@gmail.com"},"date":"Fri, 24 Feb 2017 14:03:52 +0100"}]}]//# sourceMappingURL=data:application/json;charset=utf-8;base64,'
            );
        },
        function(module, exports) {
            eval(
                "// @see https://css-tricks.com/snippets/javascript/javascript-md5/\nmodule.exports = function (string) {\n    function RotateLeft(lValue, iShiftBits) {\n        return lValue << iShiftBits | lValue >>> 32 - iShiftBits;\n    }\n\n    function AddUnsigned(lX, lY) {\n        var lX4, lY4, lX8, lY8, lResult;\n        lX8 = lX & 0x80000000;\n        lY8 = lY & 0x80000000;\n        lX4 = lX & 0x40000000;\n        lY4 = lY & 0x40000000;\n        lResult = (lX & 0x3fffffff) + (lY & 0x3fffffff);\n        if (lX4 & lY4) {\n            return lResult ^ 0x80000000 ^ lX8 ^ lY8;\n        }\n        if (lX4 | lY4) {\n            if (lResult & 0x40000000) {\n                return lResult ^ 0xc0000000 ^ lX8 ^ lY8;\n            } else {\n                return lResult ^ 0x40000000 ^ lX8 ^ lY8;\n            }\n        } else {\n            return lResult ^ lX8 ^ lY8;\n        }\n    }\n\n    function F(x, y, z) {\n        return x & y | ~x & z;\n    }\n    function G(x, y, z) {\n        return x & z | y & ~z;\n    }\n    function H(x, y, z) {\n        return x ^ y ^ z;\n    }\n    function I(x, y, z) {\n        return y ^ (x | ~z);\n    }\n\n    function FF(a, b, c, d, x, s, ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    }\n\n    function GG(a, b, c, d, x, s, ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    }\n\n    function HH(a, b, c, d, x, s, ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    }\n\n    function II(a, b, c, d, x, s, ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    }\n\n    function ConvertToWordArray(string) {\n        var lWordCount;\n        var lMessageLength = string.length;\n        var lNumberOfWords_temp1 = lMessageLength + 8;\n        var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - lNumberOfWords_temp1 % 64) / 64;\n        var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;\n        var lWordArray = Array(lNumberOfWords - 1);\n        var lBytePosition = 0;\n        var lByteCount = 0;\n        while (lByteCount < lMessageLength) {\n            lWordCount = (lByteCount - lByteCount % 4) / 4;\n            lBytePosition = lByteCount % 4 * 8;\n            lWordArray[lWordCount] = lWordArray[lWordCount] | string.charCodeAt(lByteCount) << lBytePosition;\n            lByteCount++;\n        }\n        lWordCount = (lByteCount - lByteCount % 4) / 4;\n        lBytePosition = lByteCount % 4 * 8;\n        lWordArray[lWordCount] = lWordArray[lWordCount] | 0x80 << lBytePosition;\n        lWordArray[lNumberOfWords - 2] = lMessageLength << 3;\n        lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;\n        return lWordArray;\n    }\n\n    function WordToHex(lValue) {\n        var WordToHexValue = '',\n            WordToHexValue_temp = '',\n            lByte,\n            lCount;\n        for (lCount = 0; lCount <= 3; lCount++) {\n            lByte = lValue >>> lCount * 8 & 255;\n            WordToHexValue_temp = '0' + lByte.toString(16);\n            WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length - 2, 2);\n        }\n        return WordToHexValue;\n    }\n\n    function Utf8Encode(string) {\n        string = string.replace(/\\r\\n/g, '\\n');\n        var utftext = '';\n\n        for (var n = 0; n < string.length; n++) {\n            var c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if (c > 127 && c < 2048) {\n                utftext += String.fromCharCode(c >> 6 | 192);\n                utftext += String.fromCharCode(c & 63 | 128);\n            } else {\n                utftext += String.fromCharCode(c >> 12 | 224);\n                utftext += String.fromCharCode(c >> 6 & 63 | 128);\n                utftext += String.fromCharCode(c & 63 | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    var x = Array();\n    var k, AA, BB, CC, DD, a, b, c, d;\n    var S11 = 7,\n        S12 = 12,\n        S13 = 17,\n        S14 = 22;\n    var S21 = 5,\n        S22 = 9,\n        S23 = 14,\n        S24 = 20;\n    var S31 = 4,\n        S32 = 11,\n        S33 = 16,\n        S34 = 23;\n    var S41 = 6,\n        S42 = 10,\n        S43 = 15,\n        S44 = 21;\n\n    string = Utf8Encode(string);\n\n    x = ConvertToWordArray(string);\n\n    a = 0x67452301;\n    b = 0xefcdab89;\n    c = 0x98badcfe;\n    d = 0x10325476;\n\n    for (k = 0; k < x.length; k += 16) {\n        AA = a;\n        BB = b;\n        CC = c;\n        DD = d;\n        a = FF(a, b, c, d, x[k + 0], S11, 0xd76aa478);\n        d = FF(d, a, b, c, x[k + 1], S12, 0xe8c7b756);\n        c = FF(c, d, a, b, x[k + 2], S13, 0x242070db);\n        b = FF(b, c, d, a, x[k + 3], S14, 0xc1bdceee);\n        a = FF(a, b, c, d, x[k + 4], S11, 0xf57c0faf);\n        d = FF(d, a, b, c, x[k + 5], S12, 0x4787c62a);\n        c = FF(c, d, a, b, x[k + 6], S13, 0xa8304613);\n        b = FF(b, c, d, a, x[k + 7], S14, 0xfd469501);\n        a = FF(a, b, c, d, x[k + 8], S11, 0x698098d8);\n        d = FF(d, a, b, c, x[k + 9], S12, 0x8b44f7af);\n        c = FF(c, d, a, b, x[k + 10], S13, 0xffff5bb1);\n        b = FF(b, c, d, a, x[k + 11], S14, 0x895cd7be);\n        a = FF(a, b, c, d, x[k + 12], S11, 0x6b901122);\n        d = FF(d, a, b, c, x[k + 13], S12, 0xfd987193);\n        c = FF(c, d, a, b, x[k + 14], S13, 0xa679438e);\n        b = FF(b, c, d, a, x[k + 15], S14, 0x49b40821);\n        a = GG(a, b, c, d, x[k + 1], S21, 0xf61e2562);\n        d = GG(d, a, b, c, x[k + 6], S22, 0xc040b340);\n        c = GG(c, d, a, b, x[k + 11], S23, 0x265e5a51);\n        b = GG(b, c, d, a, x[k + 0], S24, 0xe9b6c7aa);\n        a = GG(a, b, c, d, x[k + 5], S21, 0xd62f105d);\n        d = GG(d, a, b, c, x[k + 10], S22, 0x2441453);\n        c = GG(c, d, a, b, x[k + 15], S23, 0xd8a1e681);\n        b = GG(b, c, d, a, x[k + 4], S24, 0xe7d3fbc8);\n        a = GG(a, b, c, d, x[k + 9], S21, 0x21e1cde6);\n        d = GG(d, a, b, c, x[k + 14], S22, 0xc33707d6);\n        c = GG(c, d, a, b, x[k + 3], S23, 0xf4d50d87);\n        b = GG(b, c, d, a, x[k + 8], S24, 0x455a14ed);\n        a = GG(a, b, c, d, x[k + 13], S21, 0xa9e3e905);\n        d = GG(d, a, b, c, x[k + 2], S22, 0xfcefa3f8);\n        c = GG(c, d, a, b, x[k + 7], S23, 0x676f02d9);\n        b = GG(b, c, d, a, x[k + 12], S24, 0x8d2a4c8a);\n        a = HH(a, b, c, d, x[k + 5], S31, 0xfffa3942);\n        d = HH(d, a, b, c, x[k + 8], S32, 0x8771f681);\n        c = HH(c, d, a, b, x[k + 11], S33, 0x6d9d6122);\n        b = HH(b, c, d, a, x[k + 14], S34, 0xfde5380c);\n        a = HH(a, b, c, d, x[k + 1], S31, 0xa4beea44);\n        d = HH(d, a, b, c, x[k + 4], S32, 0x4bdecfa9);\n        c = HH(c, d, a, b, x[k + 7], S33, 0xf6bb4b60);\n        b = HH(b, c, d, a, x[k + 10], S34, 0xbebfbc70);\n        a = HH(a, b, c, d, x[k + 13], S31, 0x289b7ec6);\n        d = HH(d, a, b, c, x[k + 0], S32, 0xeaa127fa);\n        c = HH(c, d, a, b, x[k + 3], S33, 0xd4ef3085);\n        b = HH(b, c, d, a, x[k + 6], S34, 0x4881d05);\n        a = HH(a, b, c, d, x[k + 9], S31, 0xd9d4d039);\n        d = HH(d, a, b, c, x[k + 12], S32, 0xe6db99e5);\n        c = HH(c, d, a, b, x[k + 15], S33, 0x1fa27cf8);\n        b = HH(b, c, d, a, x[k + 2], S34, 0xc4ac5665);\n        a = II(a, b, c, d, x[k + 0], S41, 0xf4292244);\n        d = II(d, a, b, c, x[k + 7], S42, 0x432aff97);\n        c = II(c, d, a, b, x[k + 14], S43, 0xab9423a7);\n        b = II(b, c, d, a, x[k + 5], S44, 0xfc93a039);\n        a = II(a, b, c, d, x[k + 12], S41, 0x655b59c3);\n        d = II(d, a, b, c, x[k + 3], S42, 0x8f0ccc92);\n        c = II(c, d, a, b, x[k + 10], S43, 0xffeff47d);\n        b = II(b, c, d, a, x[k + 1], S44, 0x85845dd1);\n        a = II(a, b, c, d, x[k + 8], S41, 0x6fa87e4f);\n        d = II(d, a, b, c, x[k + 15], S42, 0xfe2ce6e0);\n        c = II(c, d, a, b, x[k + 6], S43, 0xa3014314);\n        b = II(b, c, d, a, x[k + 13], S44, 0x4e0811a1);\n        a = II(a, b, c, d, x[k + 4], S41, 0xf7537e82);\n        d = II(d, a, b, c, x[k + 11], S42, 0xbd3af235);\n        c = II(c, d, a, b, x[k + 2], S43, 0x2ad7d2bb);\n        b = II(b, c, d, a, x[k + 9], S44, 0xeb86d391);\n        a = AddUnsigned(a, AA);\n        b = AddUnsigned(b, BB);\n        c = AddUnsigned(c, CC);\n        d = AddUnsigned(d, DD);\n    }\n\n    var temp = WordToHex(a) + WordToHex(b) + WordToHex(c) + WordToHex(d);\n\n    return temp.toLowerCase();\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                "/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return humanizeDate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return gravatar; });\nvar md5 = __webpack_require__(13);\n\n// Example display: September 4 1986 8:30 PM\nvar humanizeDate = function humanizeDate(date) {\n    var monthNames = ['Jan.', 'Feb.', 'March', 'Apr.', 'May', 'June', 'Jul.', 'Aug.', 'Sept.', 'Oct.', 'Nov.', 'Dec.'];\n\n    return '\\n        ' + monthNames[date.getMonth()] + ' ' + date.getDate() + ' ' + date.getFullYear() + '\\n        ' + date.getHours() + ':' + date.getMinutes() + '\\n    ';\n};\n\nvar gravatar = function gravatar(email) {\n    return 'https://www.gravatar.com/avatar/' + md5(email.trim().toLowerCase());\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGVtby91dGlscy5qcz8yMThlIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1kNSA9IHJlcXVpcmUoJy4vbWQ1Jyk7XG5cbi8vIEV4YW1wbGUgZGlzcGxheTogU2VwdGVtYmVyIDQgMTk4NiA4OjMwIFBNXG5leHBvcnQgY29uc3QgaHVtYW5pemVEYXRlID0gKGRhdGUpID0+IHtcbiAgICBjb25zdCBtb250aE5hbWVzID0gW1xuICAgICAgICAnSmFuLicsXG4gICAgICAgICdGZWIuJyxcbiAgICAgICAgJ01hcmNoJyxcbiAgICAgICAgJ0Fwci4nLFxuICAgICAgICAnTWF5JyxcbiAgICAgICAgJ0p1bmUnLFxuICAgICAgICAnSnVsLicsXG4gICAgICAgICdBdWcuJyxcbiAgICAgICAgJ1NlcHQuJyxcbiAgICAgICAgJ09jdC4nLFxuICAgICAgICAnTm92LicsXG4gICAgICAgICdEZWMuJyxcbiAgICBdO1xuXG4gICAgcmV0dXJuIGBcbiAgICAgICAgJHttb250aE5hbWVzW2RhdGUuZ2V0TW9udGgoKV19ICR7ZGF0ZS5nZXREYXRlKCl9ICR7ZGF0ZS5nZXRGdWxsWWVhcigpfVxuICAgICAgICAke2RhdGUuZ2V0SG91cnMoKX06JHtkYXRlLmdldE1pbnV0ZXMoKX1cbiAgICBgO1xufTtcblxuZXhwb3J0IGNvbnN0IGdyYXZhdGFyID0gZW1haWwgPT4gYGh0dHBzOi8vd3d3LmdyYXZhdGFyLmNvbS9hdmF0YXIvJHttZDUoZW1haWwudHJpbSgpLnRvTG93ZXJDYXNlKCkpfWA7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gZGVtby91dGlscy5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWNBO0FBSUE7QUFDQTtBQUNBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiIifQ=="
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                "/* unused harmony export tickFormat */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_time_format__ = __webpack_require__(25);\n\n\nvar tickFormat = function tickFormat(date, formats, d3) {\n    if (d3.timeSecond(date) < date) {\n        return d3.timeFormat(formats.milliseconds)(date);\n    }\n\n    if (d3.timeMinute(date) < date) {\n        return d3.timeFormat(formats.seconds)(date);\n    }\n\n    if (d3.timeHour(date) < date) {\n        return d3.timeFormat(formats.minutes)(date);\n    }\n\n    if (d3.timeDay(date) < date) {\n        return d3.timeFormat(formats.hours)(date);\n    }\n\n    if (d3.timeMonth(date) < date) {\n        if (d3.timeWeek(date) < date) {\n            return d3.timeFormat(formats.days)(date);\n        }\n\n        return d3.timeFormat(formats.weeks)(date);\n    }\n\n    if (d3.timeYear(date) < date) {\n        return d3.timeFormat(formats.months)(date);\n    }\n\n    return d3.timeFormat(formats.year)(date);\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (d3, config, xScale) {\n    var labelWidth = config.label.width,\n        formats = config.axis.formats,\n        locale = config.locale;\n\n    d3.timeFormatDefaultLocale(locale);\n    return function (selection) {\n        var axis = selection.selectAll('.axis').data(function (d) {\n            return d;\n        });\n\n        axis.exit().remove();\n\n        var axisTop = d3.axisTop(xScale).tickFormat(function (d) {\n            return tickFormat(d, formats, d3);\n        });\n\n        axis.enter().filter(function (_, i) {\n            return !i;\n        }).append('g').classed('axis', true).attr('transform', 'translate(' + labelWidth + ',0)').call(axisTop);\n\n        axis.call(axisTop);\n    };\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2F4aXMuanM/ZWJkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0aW1lRm9ybWF0IH0gZnJvbSAnZDMtdGltZS1mb3JtYXQnO1xuXG5leHBvcnQgY29uc3QgdGlja0Zvcm1hdCA9IChkYXRlLCBmb3JtYXRzLCBkMykgPT4ge1xuICAgIGlmIChkMy50aW1lU2Vjb25kKGRhdGUpIDwgZGF0ZSkge1xuICAgICAgICByZXR1cm4gZDMudGltZUZvcm1hdChmb3JtYXRzLm1pbGxpc2Vjb25kcykoZGF0ZSk7XG4gICAgfVxuXG4gICAgaWYgKGQzLnRpbWVNaW51dGUoZGF0ZSkgPCBkYXRlKSB7XG4gICAgICAgIHJldHVybiBkMy50aW1lRm9ybWF0KGZvcm1hdHMuc2Vjb25kcykoZGF0ZSk7XG4gICAgfVxuXG4gICAgaWYgKGQzLnRpbWVIb3VyKGRhdGUpIDwgZGF0ZSkge1xuICAgICAgICByZXR1cm4gZDMudGltZUZvcm1hdChmb3JtYXRzLm1pbnV0ZXMpKGRhdGUpO1xuICAgIH1cblxuICAgIGlmIChkMy50aW1lRGF5KGRhdGUpIDwgZGF0ZSkge1xuICAgICAgICByZXR1cm4gZDMudGltZUZvcm1hdChmb3JtYXRzLmhvdXJzKShkYXRlKTtcbiAgICB9XG5cbiAgICBpZiAoZDMudGltZU1vbnRoKGRhdGUpIDwgZGF0ZSkge1xuICAgICAgICBpZiAoZDMudGltZVdlZWsoZGF0ZSkgPCBkYXRlKSB7XG4gICAgICAgICAgICByZXR1cm4gZDMudGltZUZvcm1hdChmb3JtYXRzLmRheXMpKGRhdGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGQzLnRpbWVGb3JtYXQoZm9ybWF0cy53ZWVrcykoZGF0ZSk7XG4gICAgfVxuXG4gICAgaWYgKGQzLnRpbWVZZWFyKGRhdGUpIDwgZGF0ZSkge1xuICAgICAgICByZXR1cm4gZDMudGltZUZvcm1hdChmb3JtYXRzLm1vbnRocykoZGF0ZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGQzLnRpbWVGb3JtYXQoZm9ybWF0cy55ZWFyKShkYXRlKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IChkMywgY29uZmlnLCB4U2NhbGUpID0+IHtcbiAgICBjb25zdCB7IGxhYmVsOiB7IHdpZHRoOiBsYWJlbFdpZHRoIH0sIGF4aXM6IHsgZm9ybWF0cyB9LCBsb2NhbGUgfSA9IGNvbmZpZztcbiAgICBkMy50aW1lRm9ybWF0RGVmYXVsdExvY2FsZShsb2NhbGUpO1xuICAgIHJldHVybiBzZWxlY3Rpb24gPT4ge1xuICAgICAgICBjb25zdCBheGlzID0gc2VsZWN0aW9uLnNlbGVjdEFsbCgnLmF4aXMnKS5kYXRhKGQgPT4gZCk7XG5cbiAgICAgICAgYXhpcy5leGl0KCkucmVtb3ZlKCk7XG5cbiAgICAgICAgY29uc3QgYXhpc1RvcCA9IGQzXG4gICAgICAgICAgICAuYXhpc1RvcCh4U2NhbGUpXG4gICAgICAgICAgICAudGlja0Zvcm1hdChkID0+IHRpY2tGb3JtYXQoZCwgZm9ybWF0cywgZDMpKTtcblxuICAgICAgICBheGlzXG4gICAgICAgICAgICAuZW50ZXIoKVxuICAgICAgICAgICAgLmZpbHRlcigoXywgaSkgPT4gIWkpXG4gICAgICAgICAgICAuYXBwZW5kKCdnJylcbiAgICAgICAgICAgIC5jbGFzc2VkKCdheGlzJywgdHJ1ZSlcbiAgICAgICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlKCR7bGFiZWxXaWR0aH0sMClgKVxuICAgICAgICAgICAgLmNhbGwoYXhpc1RvcCk7XG5cbiAgICAgICAgYXhpcy5jYWxsKGF4aXNUb3ApO1xuICAgIH07XG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9heGlzLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQ0E7QUFLQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0="
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                "/* harmony default export */ __webpack_exports__[\"a\"] = (function (config, xScale) {\n    return function (selection) {\n        var margin = config.margin,\n            dateFormat = config.bound.format,\n            labelWidth = config.label.width,\n            lineHeight = config.line.height;\n\n\n        var bounds = selection.selectAll('.bound').data(function (d) {\n            return d;\n        });\n        var numberRows = selection.data()[0].length;\n\n        bounds.exit().remove();\n\n        bounds.enter().filter(function (_, i) {\n            return !i;\n        }).append('g').classed('bound', true).classed('start', true).attr('transform', 'translate(' + labelWidth + ', ' + (lineHeight * numberRows + margin.top) + ')').append('text').text(dateFormat(xScale.domain()[0]));\n\n        bounds.enter().filter(function (_, i) {\n            return !i;\n        }).append('g').classed('bound', true).classed('end', true).attr('transform', 'translate(' + labelWidth + ', ' + (lineHeight * numberRows + margin.top) + ')').append('text').attr('x', xScale.range()[1] - margin.right).attr('text-anchor', 'end').text(dateFormat(xScale.domain()[1]));\n\n        bounds.selectAll('.bound.start text').text(dateFormat(xScale.domain()[0]));\n        bounds.selectAll('.bound.end text').text(dateFormat(xScale.domain()[1]));\n    };\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2JvdW5kcy5qcz8yNzc1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IChjb25maWcsIHhTY2FsZSkgPT4gc2VsZWN0aW9uID0+IHtcbiAgICBjb25zdCB7XG4gICAgICAgIG1hcmdpbixcbiAgICAgICAgYm91bmQ6IHsgZm9ybWF0OiBkYXRlRm9ybWF0IH0sXG4gICAgICAgIGxhYmVsOiB7IHdpZHRoOiBsYWJlbFdpZHRoIH0sXG4gICAgICAgIGxpbmU6IHsgaGVpZ2h0OiBsaW5lSGVpZ2h0IH0sXG4gICAgfSA9IGNvbmZpZztcblxuICAgIGNvbnN0IGJvdW5kcyA9IHNlbGVjdGlvbi5zZWxlY3RBbGwoJy5ib3VuZCcpLmRhdGEoZCA9PiBkKTtcbiAgICBjb25zdCBudW1iZXJSb3dzID0gc2VsZWN0aW9uLmRhdGEoKVswXS5sZW5ndGg7XG5cbiAgICBib3VuZHMuZXhpdCgpLnJlbW92ZSgpO1xuXG4gICAgYm91bmRzXG4gICAgICAgIC5lbnRlcigpXG4gICAgICAgIC5maWx0ZXIoKF8sIGkpID0+ICFpKVxuICAgICAgICAuYXBwZW5kKCdnJylcbiAgICAgICAgLmNsYXNzZWQoJ2JvdW5kJywgdHJ1ZSlcbiAgICAgICAgLmNsYXNzZWQoJ3N0YXJ0JywgdHJ1ZSlcbiAgICAgICAgLmF0dHIoXG4gICAgICAgICAgICAndHJhbnNmb3JtJyxcbiAgICAgICAgICAgIGB0cmFuc2xhdGUoJHtsYWJlbFdpZHRofSwgJHtsaW5lSGVpZ2h0ICogbnVtYmVyUm93cyArIG1hcmdpbi50b3B9KWBcbiAgICAgICAgKVxuICAgICAgICAuYXBwZW5kKCd0ZXh0JylcbiAgICAgICAgLnRleHQoZGF0ZUZvcm1hdCh4U2NhbGUuZG9tYWluKClbMF0pKTtcblxuICAgIGJvdW5kc1xuICAgICAgICAuZW50ZXIoKVxuICAgICAgICAuZmlsdGVyKChfLCBpKSA9PiAhaSlcbiAgICAgICAgLmFwcGVuZCgnZycpXG4gICAgICAgIC5jbGFzc2VkKCdib3VuZCcsIHRydWUpXG4gICAgICAgIC5jbGFzc2VkKCdlbmQnLCB0cnVlKVxuICAgICAgICAuYXR0cihcbiAgICAgICAgICAgICd0cmFuc2Zvcm0nLFxuICAgICAgICAgICAgYHRyYW5zbGF0ZSgke2xhYmVsV2lkdGh9LCAke2xpbmVIZWlnaHQgKiBudW1iZXJSb3dzICsgbWFyZ2luLnRvcH0pYFxuICAgICAgICApXG4gICAgICAgIC5hcHBlbmQoJ3RleHQnKVxuICAgICAgICAuYXR0cigneCcsIHhTY2FsZS5yYW5nZSgpWzFdIC0gbWFyZ2luLnJpZ2h0KVxuICAgICAgICAuYXR0cigndGV4dC1hbmNob3InLCAnZW5kJylcbiAgICAgICAgLnRleHQoZGF0ZUZvcm1hdCh4U2NhbGUuZG9tYWluKClbMV0pKTtcblxuICAgIGJvdW5kcy5zZWxlY3RBbGwoJy5ib3VuZC5zdGFydCB0ZXh0JykudGV4dChkYXRlRm9ybWF0KHhTY2FsZS5kb21haW4oKVswXSkpO1xuICAgIGJvdW5kcy5zZWxlY3RBbGwoJy5ib3VuZC5lbmQgdGV4dCcpLnRleHQoZGF0ZUZvcm1hdCh4U2NhbGUuZG9tYWluKClbMV0pKTtcbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2JvdW5kcy5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQU1BO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQ0E7QUFVQTtBQUVBO0FBQUE7QUFDQTtBQVlBO0FBQ0E7QUFDQTtBQTNDQSIsInNvdXJjZVJvb3QiOiIifQ=="
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                "/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_time_format_locale_en_US_json__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3_time_format_locale_en_US_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3_time_format_locale_en_US_json__);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (d3) {\n    return {\n        locale: __WEBPACK_IMPORTED_MODULE_0_d3_time_format_locale_en_US_json___default.a,\n        metaballs: {\n            blurDeviation: 10,\n            colorMatrix: '1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 50 -10'\n        },\n        bound: {\n            format: d3.timeFormat('%d %B %Y')\n        },\n        axis: {\n            formats: {\n                milliseconds: '%L',\n                seconds: ':%S',\n                minutes: '%I:%M',\n                hours: '%I %p',\n                days: '%a %d',\n                weeks: '%b %d',\n                months: '%B',\n                year: '%Y'\n            }\n        },\n        drop: {\n            color: null,\n            radius: 5,\n            date: function date(d) {\n                return new Date(d);\n            },\n            onClick: function onClick() {},\n            onMouseOver: function onMouseOver() {},\n            onMouseOut: function onMouseOut() {}\n        },\n        label: {\n            padding: 20,\n            text: function text(d) {\n                return d.name + ' (' + d.data.length + ')';\n            },\n            width: 200\n        },\n        line: {\n            color: function color(_, index) {\n                return d3.schemeCategory10[index];\n            },\n            height: 40\n        },\n        margin: {\n            top: 20,\n            right: 10,\n            bottom: 20,\n            left: 10\n        },\n        range: {\n            start: new Date(new Date().getTime() - 3600000 * 24 * 365), // one year ago\n            end: new Date()\n        },\n        zoom: {\n            onZoomStart: null,\n            onZoom: null,\n            onZoomEnd: null,\n            minimumScale: 0,\n            maximumScale: Infinity\n        }\n    };\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbmZpZy5qcz85ZDlhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlbkxvY2FsZSBmcm9tICdkMy10aW1lLWZvcm1hdC9sb2NhbGUvZW4tVVMuanNvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGQzID0+ICh7XG4gICAgbG9jYWxlOiBlbkxvY2FsZSxcbiAgICBtZXRhYmFsbHM6IHtcbiAgICAgICAgYmx1ckRldmlhdGlvbjogMTAsXG4gICAgICAgIGNvbG9yTWF0cml4OiAnMSAwIDAgMCAwICAwIDEgMCAwIDAgIDAgMCAxIDAgMCAgMCAwIDAgNTAgLTEwJyxcbiAgICB9LFxuICAgIGJvdW5kOiB7XG4gICAgICAgIGZvcm1hdDogZDMudGltZUZvcm1hdCgnJWQgJUIgJVknKSxcbiAgICB9LFxuICAgIGF4aXM6IHtcbiAgICAgICAgZm9ybWF0czoge1xuICAgICAgICAgICAgbWlsbGlzZWNvbmRzOiAnJUwnLFxuICAgICAgICAgICAgc2Vjb25kczogJzolUycsXG4gICAgICAgICAgICBtaW51dGVzOiAnJUk6JU0nLFxuICAgICAgICAgICAgaG91cnM6ICclSSAlcCcsXG4gICAgICAgICAgICBkYXlzOiAnJWEgJWQnLFxuICAgICAgICAgICAgd2Vla3M6ICclYiAlZCcsXG4gICAgICAgICAgICBtb250aHM6ICclQicsXG4gICAgICAgICAgICB5ZWFyOiAnJVknLFxuICAgICAgICB9LFxuICAgIH0sXG4gICAgZHJvcDoge1xuICAgICAgICBjb2xvcjogbnVsbCxcbiAgICAgICAgcmFkaXVzOiA1LFxuICAgICAgICBkYXRlOiBkID0+IG5ldyBEYXRlKGQpLFxuICAgICAgICBvbkNsaWNrOiAoKSA9PiB7fSxcbiAgICAgICAgb25Nb3VzZU92ZXI6ICgpID0+IHt9LFxuICAgICAgICBvbk1vdXNlT3V0OiAoKSA9PiB7fSxcbiAgICB9LFxuICAgIGxhYmVsOiB7XG4gICAgICAgIHBhZGRpbmc6IDIwLFxuICAgICAgICB0ZXh0OiBkID0+IGAke2QubmFtZX0gKCR7ZC5kYXRhLmxlbmd0aH0pYCxcbiAgICAgICAgd2lkdGg6IDIwMCxcbiAgICB9LFxuICAgIGxpbmU6IHtcbiAgICAgICAgY29sb3I6IChfLCBpbmRleCkgPT4gZDMuc2NoZW1lQ2F0ZWdvcnkxMFtpbmRleF0sXG4gICAgICAgIGhlaWdodDogNDAsXG4gICAgfSxcbiAgICBtYXJnaW46IHtcbiAgICAgICAgdG9wOiAyMCxcbiAgICAgICAgcmlnaHQ6IDEwLFxuICAgICAgICBib3R0b206IDIwLFxuICAgICAgICBsZWZ0OiAxMCxcbiAgICB9LFxuICAgIHJhbmdlOiB7XG4gICAgICAgIHN0YXJ0OiBuZXcgRGF0ZShuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIDM2MDAwMDAgKiAyNCAqIDM2NSksIC8vIG9uZSB5ZWFyIGFnb1xuICAgICAgICBlbmQ6IG5ldyBEYXRlKCksXG4gICAgfSxcbiAgICB6b29tOiB7XG4gICAgICAgIG9uWm9vbVN0YXJ0OiBudWxsLFxuICAgICAgICBvblpvb206IG51bGwsXG4gICAgICAgIG9uWm9vbUVuZDogbnVsbCxcbiAgICAgICAgbWluaW11bVNjYWxlOiAwLFxuICAgICAgICBtYXhpbXVtU2NhbGU6IEluZmluaXR5LFxuICAgIH0sXG59KTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvY29uZmlnLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFSQTtBQURBO0FBWUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFRQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFIQTtBQUtBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQU1BO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTEE7QUFoREE7QUFBQSIsInNvdXJjZVJvb3QiOiIifQ=="
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                "/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_uniqby__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_uniqby___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_uniqby__);\n\n\nvar filterOverlappingDrop = function filterOverlappingDrop(xScale, dropDate) {\n    return function (d) {\n        return __WEBPACK_IMPORTED_MODULE_0_lodash_uniqby___default()(d.data, function (data) {\n            return Math.round(xScale(dropDate(data)));\n        });\n    };\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (config, xScale) {\n    return function (selection) {\n        var _config$drop = config.drop,\n            dropColor = _config$drop.color,\n            dropRadius = _config$drop.radius,\n            dropDate = _config$drop.date,\n            onClick = _config$drop.onClick,\n            onMouseOver = _config$drop.onMouseOver,\n            onMouseOut = _config$drop.onMouseOut;\n\n\n        var drops = selection.selectAll('.drop').data(filterOverlappingDrop(xScale, dropDate));\n\n        drops.enter().append('circle').classed('drop', true).attr('r', dropRadius).attr('fill', dropColor).on('click', onClick).on('mouseover', onMouseOver).on('mouseout', onMouseOut).merge(drops).attr('cx', function (d) {\n            return xScale(dropDate(d));\n        });\n\n        drops.exit().on('click', null).on('mouseover', null).on('mouseout', null).remove();\n    };\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2Ryb3AuanM/MWViYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdW5pcUJ5IGZyb20gJ2xvZGFzaC51bmlxYnknO1xuXG5jb25zdCBmaWx0ZXJPdmVybGFwcGluZ0Ryb3AgPSAoeFNjYWxlLCBkcm9wRGF0ZSkgPT4gZCA9PlxuICAgIHVuaXFCeShkLmRhdGEsIGRhdGEgPT4gTWF0aC5yb3VuZCh4U2NhbGUoZHJvcERhdGUoZGF0YSkpKSk7XG5cbmV4cG9ydCBkZWZhdWx0IChjb25maWcsIHhTY2FsZSkgPT4gc2VsZWN0aW9uID0+IHtcbiAgICBjb25zdCB7XG4gICAgICAgIGRyb3A6IHtcbiAgICAgICAgICAgIGNvbG9yOiBkcm9wQ29sb3IsXG4gICAgICAgICAgICByYWRpdXM6IGRyb3BSYWRpdXMsXG4gICAgICAgICAgICBkYXRlOiBkcm9wRGF0ZSxcbiAgICAgICAgICAgIG9uQ2xpY2ssXG4gICAgICAgICAgICBvbk1vdXNlT3ZlcixcbiAgICAgICAgICAgIG9uTW91c2VPdXQsXG4gICAgICAgIH0sXG4gICAgfSA9IGNvbmZpZztcblxuICAgIGNvbnN0IGRyb3BzID0gc2VsZWN0aW9uXG4gICAgICAgIC5zZWxlY3RBbGwoJy5kcm9wJylcbiAgICAgICAgLmRhdGEoZmlsdGVyT3ZlcmxhcHBpbmdEcm9wKHhTY2FsZSwgZHJvcERhdGUpKTtcblxuICAgIGRyb3BzXG4gICAgICAgIC5lbnRlcigpXG4gICAgICAgIC5hcHBlbmQoJ2NpcmNsZScpXG4gICAgICAgIC5jbGFzc2VkKCdkcm9wJywgdHJ1ZSlcbiAgICAgICAgLmF0dHIoJ3InLCBkcm9wUmFkaXVzKVxuICAgICAgICAuYXR0cignZmlsbCcsIGRyb3BDb2xvcilcbiAgICAgICAgLm9uKCdjbGljaycsIG9uQ2xpY2spXG4gICAgICAgIC5vbignbW91c2VvdmVyJywgb25Nb3VzZU92ZXIpXG4gICAgICAgIC5vbignbW91c2VvdXQnLCBvbk1vdXNlT3V0KVxuICAgICAgICAubWVyZ2UoZHJvcHMpXG4gICAgICAgIC5hdHRyKCdjeCcsIGQgPT4geFNjYWxlKGRyb3BEYXRlKGQpKSk7XG5cbiAgICBkcm9wc1xuICAgICAgICAuZXhpdCgpXG4gICAgICAgIC5vbignY2xpY2snLCBudWxsKVxuICAgICAgICAub24oJ21vdXNlb3ZlcicsIG51bGwpXG4gICAgICAgIC5vbignbW91c2VvdXQnLCBudWxsKVxuICAgICAgICAucmVtb3ZlKCk7XG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9kcm9wLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFEQTtBQUFBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBVUE7QUFDQTtBQUdBO0FBVUE7QUFBQTtBQUNBO0FBQ0E7QUFNQTtBQWxDQSIsInNvdXJjZVJvb3QiOiIifQ=="
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                "/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__drop__ = __webpack_require__(18);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (config, xScale) {\n    return function (selection) {\n        var metaballs = config.metaballs,\n            _config$label = config.label,\n            labelText = _config$label.text,\n            labelPadding = _config$label.padding,\n            labelWidth = _config$label.width,\n            _config$line = config.line,\n            lineColor = _config$line.color,\n            lineHeight = _config$line.height;\n\n\n        var lines = selection.selectAll('.drop-line').data(function (d) {\n            return d;\n        });\n\n        var g = lines.enter().append('g').classed('drop-line', true).attr('fill', lineColor).attr('transform', function (_, index) {\n            return 'translate(0, ' + index * lineHeight + ')';\n        });\n\n        g.append('line').classed('line-separator', true).attr('x1', labelWidth).attr('x2', '100%').attr('y1', function () {\n            return lineHeight;\n        }).attr('y2', function () {\n            return lineHeight;\n        });\n\n        g.append('text').attr('x', labelWidth - labelPadding).attr('y', lineHeight / 2).attr('dy', '0.25em').attr('text-anchor', 'end').text(labelText);\n\n        var drops = g.append('g').classed('drops', true).attr('transform', function () {\n            return 'translate(' + labelWidth + ', ' + lineHeight / 2 + ')';\n        }).call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__drop__[\"a\" /* default */])(config, xScale));\n\n        drops.append('rect') // The rect allow us to size the drops g element\n        .attr('x', 0).attr('y', -config.line.height / 2).attr('width', 1) // For the rect to impact its parent size it must have a non zero width\n        .attr('height', config.line.height).attr('fill', 'transparent');\n\n        if (metaballs) {\n            drops.style('filter', 'url(#metaballs)');\n        }\n\n        lines.selectAll('text').text(labelText);\n        lines.selectAll('.drops').call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__drop__[\"a\" /* default */])(config, xScale));\n\n        lines.exit().remove();\n    };\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2Ryb3BMaW5lLmpzP2IxY2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRyb3AgZnJvbSAnLi9kcm9wJztcblxuZXhwb3J0IGRlZmF1bHQgKGNvbmZpZywgeFNjYWxlKSA9PiBzZWxlY3Rpb24gPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgICAgbWV0YWJhbGxzLFxuICAgICAgICBsYWJlbDogeyB0ZXh0OiBsYWJlbFRleHQsIHBhZGRpbmc6IGxhYmVsUGFkZGluZywgd2lkdGg6IGxhYmVsV2lkdGggfSxcbiAgICAgICAgbGluZTogeyBjb2xvcjogbGluZUNvbG9yLCBoZWlnaHQ6IGxpbmVIZWlnaHQgfSxcbiAgICB9ID0gY29uZmlnO1xuXG4gICAgY29uc3QgbGluZXMgPSBzZWxlY3Rpb24uc2VsZWN0QWxsKCcuZHJvcC1saW5lJykuZGF0YShkID0+IGQpO1xuXG4gICAgY29uc3QgZyA9IGxpbmVzXG4gICAgICAgIC5lbnRlcigpXG4gICAgICAgIC5hcHBlbmQoJ2cnKVxuICAgICAgICAuY2xhc3NlZCgnZHJvcC1saW5lJywgdHJ1ZSlcbiAgICAgICAgLmF0dHIoJ2ZpbGwnLCBsaW5lQ29sb3IpXG4gICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCAoXywgaW5kZXgpID0+IGB0cmFuc2xhdGUoMCwgJHtpbmRleCAqIGxpbmVIZWlnaHR9KWApO1xuXG4gICAgZ1xuICAgICAgICAuYXBwZW5kKCdsaW5lJylcbiAgICAgICAgLmNsYXNzZWQoJ2xpbmUtc2VwYXJhdG9yJywgdHJ1ZSlcbiAgICAgICAgLmF0dHIoJ3gxJywgbGFiZWxXaWR0aClcbiAgICAgICAgLmF0dHIoJ3gyJywgJzEwMCUnKVxuICAgICAgICAuYXR0cigneTEnLCAoKSA9PiBsaW5lSGVpZ2h0KVxuICAgICAgICAuYXR0cigneTInLCAoKSA9PiBsaW5lSGVpZ2h0KTtcblxuICAgIGdcbiAgICAgICAgLmFwcGVuZCgndGV4dCcpXG4gICAgICAgIC5hdHRyKCd4JywgbGFiZWxXaWR0aCAtIGxhYmVsUGFkZGluZylcbiAgICAgICAgLmF0dHIoJ3knLCBsaW5lSGVpZ2h0IC8gMilcbiAgICAgICAgLmF0dHIoJ2R5JywgJzAuMjVlbScpXG4gICAgICAgIC5hdHRyKCd0ZXh0LWFuY2hvcicsICdlbmQnKVxuICAgICAgICAudGV4dChsYWJlbFRleHQpO1xuXG4gICAgY29uc3QgZHJvcHMgPSBnXG4gICAgICAgIC5hcHBlbmQoJ2cnKVxuICAgICAgICAuY2xhc3NlZCgnZHJvcHMnLCB0cnVlKVxuICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgKCkgPT4gYHRyYW5zbGF0ZSgke2xhYmVsV2lkdGh9LCAke2xpbmVIZWlnaHQgLyAyfSlgKVxuICAgICAgICAuY2FsbChkcm9wKGNvbmZpZywgeFNjYWxlKSk7XG5cbiAgICBkcm9wc1xuICAgICAgICAuYXBwZW5kKCdyZWN0JykgLy8gVGhlIHJlY3QgYWxsb3cgdXMgdG8gc2l6ZSB0aGUgZHJvcHMgZyBlbGVtZW50XG4gICAgICAgIC5hdHRyKCd4JywgMClcbiAgICAgICAgLmF0dHIoJ3knLCAtY29uZmlnLmxpbmUuaGVpZ2h0IC8gMilcbiAgICAgICAgLmF0dHIoJ3dpZHRoJywgMSkgLy8gRm9yIHRoZSByZWN0IHRvIGltcGFjdCBpdHMgcGFyZW50IHNpemUgaXQgbXVzdCBoYXZlIGEgbm9uIHplcm8gd2lkdGhcbiAgICAgICAgLmF0dHIoJ2hlaWdodCcsIGNvbmZpZy5saW5lLmhlaWdodClcbiAgICAgICAgLmF0dHIoJ2ZpbGwnLCAndHJhbnNwYXJlbnQnKTtcblxuICAgIGlmIChtZXRhYmFsbHMpIHtcbiAgICAgICAgZHJvcHMuc3R5bGUoJ2ZpbHRlcicsICd1cmwoI21ldGFiYWxscyknKTtcbiAgICB9XG5cbiAgICBsaW5lcy5zZWxlY3RBbGwoJ3RleHQnKS50ZXh0KGxhYmVsVGV4dCk7XG4gICAgbGluZXMuc2VsZWN0QWxsKCcuZHJvcHMnKS5jYWxsKGRyb3AoY29uZmlnLCB4U2NhbGUpKTtcblxuICAgIGxpbmVzLmV4aXQoKS5yZW1vdmUoKTtcbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2Ryb3BMaW5lLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFLQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBS0E7QUFBQTtBQUNBO0FBQ0E7QUFLQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBR0E7QUFBQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF0REEiLCJzb3VyY2VSb290IjoiIn0="
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                "/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_defaultsdeep__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_defaultsdeep___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_defaultsdeep__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__axis__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bounds__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dropLine__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__zoom__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__metaballs__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__style_css__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__style_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__style_css__);\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n\n\n\n\n\n\n\n\n\n\n\nvar withinRange = function withinRange(date, dateBounds) {\n    return new Date(date) >= dateBounds[0] && new Date(date) <= dateBounds[1];\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (_ref) {\n    var _ref$d = _ref.d3,\n        d3 = _ref$d === undefined ? window.d3 : _ref$d,\n        customConfiguration = _objectWithoutProperties(_ref, ['d3']);\n\n    var chart = function chart(selection) {\n        var config = __WEBPACK_IMPORTED_MODULE_0_lodash_defaultsdeep___default()(customConfiguration || {}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__config__[\"a\" /* default */])(d3));\n\n        var zoomConfig = config.zoom,\n            _config$drop = config.drop,\n            onClick = _config$drop.onClick,\n            onMouseOut = _config$drop.onMouseOut,\n            onMouseOver = _config$drop.onMouseOver,\n            metaballs = config.metaballs,\n            labelWidth = config.label.width,\n            lineHeight = config.line.height,\n            _config$range = config.range,\n            rangeStart = _config$range.start,\n            rangeEnd = _config$range.end,\n            margin = config.margin;\n\n\n        var getEvent = function getEvent() {\n            return d3.event;\n        }; // keep d3.event mutable see https://github.com/d3/d3/issues/2733\n\n        // Follow margins conventions (https://bl.ocks.org/mbostock/3019563)\n        var width = selection.node().clientWidth - margin.left - margin.right;\n\n        var xScale = d3.scaleTime().domain([rangeStart, rangeEnd]).range([0, width - labelWidth]);\n\n        chart._scale = xScale;\n\n        var root = selection.selectAll('svg').data(selection.data());\n\n        root.exit().remove();\n\n        var svg = root.enter().append('svg').attr('width', width).classed('event-drop-chart', true);\n\n        if (zoomConfig) {\n            svg.call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__zoom__[\"a\" /* default */])(d3, root, config, xScale, draw, getEvent));\n        }\n\n        if (metaballs) {\n            svg.call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__metaballs__[\"a\" /* addMetaballsDefs */])(config));\n        }\n\n        svg.merge(root).attr('height', function (d) {\n            return (d.length + 1) * lineHeight + margin.top + margin.bottom;\n        });\n\n        svg.append('g').classed('viewport', true).attr('transform', 'translate(' + margin.left + ',' + margin.top + ')').call(draw(config, xScale));\n    };\n\n    chart.scale = function () {\n        return chart._scale;\n    };\n    chart.filteredData = function () {\n        return chart._filteredData;\n    };\n\n    var draw = function draw(config, scale) {\n        return function (selection) {\n            var dateBounds = scale.domain().map(function (d) {\n                return new Date(d);\n            });\n            var filteredData = selection.data().map(function (dataSet) {\n                return dataSet.map(function (row) {\n                    if (!row.fullData) {\n                        row.fullData = row.data;\n                    }\n\n                    row.data = row.fullData.filter(function (d) {\n                        return withinRange(d.date, dateBounds);\n                    });\n\n                    return row;\n                });\n            });\n\n            chart._scale = scale;\n            chart._filteredData = filteredData[0];\n\n            selection.data(filteredData).call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__dropLine__[\"a\" /* default */])(config, scale)).call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__bounds__[\"a\" /* default */])(config, scale)).call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__axis__[\"a\" /* default */])(d3, config, scale));\n        };\n    };\n\n    chart.draw = draw;\n\n    return chart;\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2luZGV4LmpzPzFmZGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRlZmF1bHRzRGVlcCBmcm9tICdsb2Rhc2guZGVmYXVsdHNkZWVwJztcblxuaW1wb3J0IGF4aXMgZnJvbSAnLi9heGlzJztcbmltcG9ydCBib3VuZHMgZnJvbSAnLi9ib3VuZHMnO1xuaW1wb3J0IGRlZmF1bHRDb25maWd1cmF0aW9uIGZyb20gJy4vY29uZmlnJztcbmltcG9ydCBkcm9wTGluZSBmcm9tICcuL2Ryb3BMaW5lJztcbmltcG9ydCB6b29tIGZyb20gJy4vem9vbSc7XG5pbXBvcnQgeyBhZGRNZXRhYmFsbHNEZWZzIH0gZnJvbSAnLi9tZXRhYmFsbHMnO1xuXG5pbXBvcnQgJy4vc3R5bGUuY3NzJztcblxuY29uc3Qgd2l0aGluUmFuZ2UgPSAoZGF0ZSwgZGF0ZUJvdW5kcykgPT5cbiAgICBuZXcgRGF0ZShkYXRlKSA+PSBkYXRlQm91bmRzWzBdICYmIG5ldyBEYXRlKGRhdGUpIDw9IGRhdGVCb3VuZHNbMV07XG5cbmV4cG9ydCBkZWZhdWx0ICh7IGQzID0gd2luZG93LmQzLCAuLi5jdXN0b21Db25maWd1cmF0aW9uIH0pID0+IHtcbiAgICBjb25zdCBjaGFydCA9IHNlbGVjdGlvbiA9PiB7XG4gICAgICAgIGNvbnN0IGNvbmZpZyA9IGRlZmF1bHRzRGVlcChcbiAgICAgICAgICAgIGN1c3RvbUNvbmZpZ3VyYXRpb24gfHwge30sXG4gICAgICAgICAgICBkZWZhdWx0Q29uZmlndXJhdGlvbihkMylcbiAgICAgICAgKTtcblxuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICB6b29tOiB6b29tQ29uZmlnLFxuICAgICAgICAgICAgZHJvcDogeyBvbkNsaWNrLCBvbk1vdXNlT3V0LCBvbk1vdXNlT3ZlciB9LFxuICAgICAgICAgICAgbWV0YWJhbGxzLFxuICAgICAgICAgICAgbGFiZWw6IHsgd2lkdGg6IGxhYmVsV2lkdGggfSxcbiAgICAgICAgICAgIGxpbmU6IHsgaGVpZ2h0OiBsaW5lSGVpZ2h0IH0sXG4gICAgICAgICAgICByYW5nZTogeyBzdGFydDogcmFuZ2VTdGFydCwgZW5kOiByYW5nZUVuZCB9LFxuICAgICAgICAgICAgbWFyZ2luLFxuICAgICAgICB9ID0gY29uZmlnO1xuXG4gICAgICAgIGNvbnN0IGdldEV2ZW50ID0gKCkgPT4gZDMuZXZlbnQ7IC8vIGtlZXAgZDMuZXZlbnQgbXV0YWJsZSBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2QzL2QzL2lzc3Vlcy8yNzMzXG5cbiAgICAgICAgLy8gRm9sbG93IG1hcmdpbnMgY29udmVudGlvbnMgKGh0dHBzOi8vYmwub2Nrcy5vcmcvbWJvc3RvY2svMzAxOTU2MylcbiAgICAgICAgY29uc3Qgd2lkdGggPSBzZWxlY3Rpb24ubm9kZSgpLmNsaWVudFdpZHRoIC0gbWFyZ2luLmxlZnQgLSBtYXJnaW4ucmlnaHQ7XG5cbiAgICAgICAgY29uc3QgeFNjYWxlID0gZDNcbiAgICAgICAgICAgIC5zY2FsZVRpbWUoKVxuICAgICAgICAgICAgLmRvbWFpbihbcmFuZ2VTdGFydCwgcmFuZ2VFbmRdKVxuICAgICAgICAgICAgLnJhbmdlKFswLCB3aWR0aCAtIGxhYmVsV2lkdGhdKTtcblxuICAgICAgICBjaGFydC5fc2NhbGUgPSB4U2NhbGU7XG5cbiAgICAgICAgY29uc3Qgcm9vdCA9IHNlbGVjdGlvbi5zZWxlY3RBbGwoJ3N2ZycpLmRhdGEoc2VsZWN0aW9uLmRhdGEoKSk7XG5cbiAgICAgICAgcm9vdC5leGl0KCkucmVtb3ZlKCk7XG5cbiAgICAgICAgY29uc3Qgc3ZnID0gcm9vdFxuICAgICAgICAgICAgLmVudGVyKClcbiAgICAgICAgICAgIC5hcHBlbmQoJ3N2ZycpXG4gICAgICAgICAgICAuYXR0cignd2lkdGgnLCB3aWR0aClcbiAgICAgICAgICAgIC5jbGFzc2VkKCdldmVudC1kcm9wLWNoYXJ0JywgdHJ1ZSk7XG5cbiAgICAgICAgaWYgKHpvb21Db25maWcpIHtcbiAgICAgICAgICAgIHN2Zy5jYWxsKHpvb20oZDMsIHJvb3QsIGNvbmZpZywgeFNjYWxlLCBkcmF3LCBnZXRFdmVudCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG1ldGFiYWxscykge1xuICAgICAgICAgICAgc3ZnLmNhbGwoYWRkTWV0YWJhbGxzRGVmcyhjb25maWcpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN2Z1xuICAgICAgICAgICAgLm1lcmdlKHJvb3QpXG4gICAgICAgICAgICAuYXR0cihcbiAgICAgICAgICAgICAgICAnaGVpZ2h0JyxcbiAgICAgICAgICAgICAgICBkID0+IChkLmxlbmd0aCArIDEpICogbGluZUhlaWdodCArIG1hcmdpbi50b3AgKyBtYXJnaW4uYm90dG9tXG4gICAgICAgICAgICApO1xuXG4gICAgICAgIHN2Z1xuICAgICAgICAgICAgLmFwcGVuZCgnZycpXG4gICAgICAgICAgICAuY2xhc3NlZCgndmlld3BvcnQnLCB0cnVlKVxuICAgICAgICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGUoJHttYXJnaW4ubGVmdH0sJHttYXJnaW4udG9wfSlgKVxuICAgICAgICAgICAgLmNhbGwoZHJhdyhjb25maWcsIHhTY2FsZSkpO1xuICAgIH07XG5cbiAgICBjaGFydC5zY2FsZSA9ICgpID0+IGNoYXJ0Ll9zY2FsZTtcbiAgICBjaGFydC5maWx0ZXJlZERhdGEgPSAoKSA9PiBjaGFydC5fZmlsdGVyZWREYXRhO1xuXG4gICAgY29uc3QgZHJhdyA9IChjb25maWcsIHNjYWxlKSA9PiBzZWxlY3Rpb24gPT4ge1xuICAgICAgICBjb25zdCBkYXRlQm91bmRzID0gc2NhbGUuZG9tYWluKCkubWFwKGQgPT4gbmV3IERhdGUoZCkpO1xuICAgICAgICBjb25zdCBmaWx0ZXJlZERhdGEgPSBzZWxlY3Rpb24uZGF0YSgpLm1hcChkYXRhU2V0ID0+XG4gICAgICAgICAgICBkYXRhU2V0Lm1hcChyb3cgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghcm93LmZ1bGxEYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIHJvdy5mdWxsRGF0YSA9IHJvdy5kYXRhO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHJvdy5kYXRhID0gcm93LmZ1bGxEYXRhLmZpbHRlcihkID0+XG4gICAgICAgICAgICAgICAgICAgIHdpdGhpblJhbmdlKGQuZGF0ZSwgZGF0ZUJvdW5kcylcbiAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJvdztcbiAgICAgICAgICAgIH0pXG4gICAgICAgICk7XG5cbiAgICAgICAgY2hhcnQuX3NjYWxlID0gc2NhbGU7XG4gICAgICAgIGNoYXJ0Ll9maWx0ZXJlZERhdGEgPSBmaWx0ZXJlZERhdGFbMF07XG5cbiAgICAgICAgc2VsZWN0aW9uXG4gICAgICAgICAgICAuZGF0YShmaWx0ZXJlZERhdGEpXG4gICAgICAgICAgICAuY2FsbChkcm9wTGluZShjb25maWcsIHNjYWxlKSlcbiAgICAgICAgICAgIC5jYWxsKGJvdW5kcyhjb25maWcsIHNjYWxlKSlcbiAgICAgICAgICAgIC5jYWxsKGF4aXMoZDMsIGNvbmZpZywgc2NhbGUpKTtcbiAgICB9O1xuXG4gICAgY2hhcnQuZHJhdyA9IGRyYXc7XG5cbiAgICByZXR1cm4gY2hhcnQ7XG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9pbmRleC5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUZBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFjQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFBQTtBQUNBO0FBRUE7QUFLQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFHQTtBQUNBO0FBWEE7QUFDQTtBQWFBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUF4QkE7QUFDQTtBQXlCQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ=="
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                "/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return addMetaballsDefs; });\n/* unused harmony export addMetaballsStyle */\nvar METABALL_DEF_ID = 'metaballs';\n\nvar addMetaballsDefs = function addMetaballsDefs(config) {\n    return function (selection) {\n        var _config$metaballs = config.metaballs,\n            blurDeviation = _config$metaballs.blurDeviation,\n            colorMatrix = _config$metaballs.colorMatrix;\n\n\n        var defs = selection.append('defs');\n        var filter = defs.append('filter').attr('id', METABALL_DEF_ID);\n\n        filter.append('feGaussianBlur').attr('in', 'SourceGraphic').attr('stdDeviation', blurDeviation).attr('result', 'blur');\n\n        filter.append('feColorMatrix').attr('in', 'blur').attr('mode', 'matrix').attr('values', colorMatrix).attr('result', 'contrast');\n\n        filter.append('feBlend').attr('in', 'SourceGraphic').attr('in2', 'contrast');\n    };\n};\n\nvar addMetaballsStyle = function addMetaballsStyle(selection) {\n    return selection.style('filter', 'url(' + METABALL_DEF_ID + ')');\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL21ldGFiYWxscy5qcz83MzBiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1FVEFCQUxMX0RFRl9JRCA9ICdtZXRhYmFsbHMnO1xuXG5leHBvcnQgY29uc3QgYWRkTWV0YWJhbGxzRGVmcyA9IGNvbmZpZyA9PiBzZWxlY3Rpb24gPT4ge1xuICAgIGNvbnN0IHsgbWV0YWJhbGxzOiB7IGJsdXJEZXZpYXRpb24sIGNvbG9yTWF0cml4IH0gfSA9IGNvbmZpZztcblxuICAgIGNvbnN0IGRlZnMgPSBzZWxlY3Rpb24uYXBwZW5kKCdkZWZzJyk7XG4gICAgY29uc3QgZmlsdGVyID0gZGVmcy5hcHBlbmQoJ2ZpbHRlcicpLmF0dHIoJ2lkJywgTUVUQUJBTExfREVGX0lEKTtcblxuICAgIGZpbHRlclxuICAgICAgICAuYXBwZW5kKCdmZUdhdXNzaWFuQmx1cicpXG4gICAgICAgIC5hdHRyKCdpbicsICdTb3VyY2VHcmFwaGljJylcbiAgICAgICAgLmF0dHIoJ3N0ZERldmlhdGlvbicsIGJsdXJEZXZpYXRpb24pXG4gICAgICAgIC5hdHRyKCdyZXN1bHQnLCAnYmx1cicpO1xuXG4gICAgZmlsdGVyXG4gICAgICAgIC5hcHBlbmQoJ2ZlQ29sb3JNYXRyaXgnKVxuICAgICAgICAuYXR0cignaW4nLCAnYmx1cicpXG4gICAgICAgIC5hdHRyKCdtb2RlJywgJ21hdHJpeCcpXG4gICAgICAgIC5hdHRyKCd2YWx1ZXMnLCBjb2xvck1hdHJpeClcbiAgICAgICAgLmF0dHIoJ3Jlc3VsdCcsICdjb250cmFzdCcpO1xuXG4gICAgZmlsdGVyXG4gICAgICAgIC5hcHBlbmQoJ2ZlQmxlbmQnKVxuICAgICAgICAuYXR0cignaW4nLCAnU291cmNlR3JhcGhpYycpXG4gICAgICAgIC5hdHRyKCdpbjInLCAnY29udHJhc3QnKTtcbn07XG5cbmV4cG9ydCBjb25zdCBhZGRNZXRhYmFsbHNTdHlsZSA9IHNlbGVjdGlvbiA9PlxuICAgIHNlbGVjdGlvbi5zdHlsZSgnZmlsdGVyJywgYHVybCgke01FVEFCQUxMX0RFRl9JRH0pYCk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL21ldGFiYWxscy5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBTUE7QUFJQTtBQXZCQTtBQUNBO0FBd0JBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiIifQ=="
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                "/* unused harmony export getShiftedTransform */\nvar getShiftedTransform = function getShiftedTransform(originalTransform, labelsWidth, labelsPadding, d3) {\n    var fullLabelWidth = labelsWidth + labelsPadding;\n\n    var x = originalTransform.x,\n        y = originalTransform.y,\n        k = originalTransform.k;\n\n\n    return d3.zoomIdentity.translate(-fullLabelWidth, 0) // move origin as if there were no labels\n    .translate(x, y) // apply zoom transformation panning\n    .scale(k) // apply zoom transformation scaling\n    .translate(labelsWidth + labelsPadding, 0); // put origin at its original position\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (d3, svg, config, xScale, draw, getEvent) {\n    var _config$label = config.label,\n        labelsWidth = _config$label.width,\n        labelsPadding = _config$label.padding,\n        _config$zoom = config.zoom,\n        onZoomStart = _config$zoom.onZoomStart,\n        onZoom = _config$zoom.onZoom,\n        onZoomEnd = _config$zoom.onZoomEnd,\n        minimumScale = _config$zoom.minimumScale,\n        maximumScale = _config$zoom.maximumScale;\n\n\n    var zoom = d3.zoom().scaleExtent([minimumScale, maximumScale]);\n\n    zoom.on('zoom.start', onZoomStart).on('zoom.end', onZoomEnd);\n\n    zoom.on('zoom', function (args) {\n        var transform = getShiftedTransform(getEvent().transform, labelsWidth, labelsPadding, d3);\n\n        var newScale = transform.rescaleX(xScale);\n\n        // @TODO: fix me: use `svg` parameter instead of doing a new selection\n        d3.select('svg').call(draw(config, newScale));\n\n        if (onZoom) {\n            onZoom(args);\n        }\n    });\n\n    return zoom;\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3pvb20uanM/YTUxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZ2V0U2hpZnRlZFRyYW5zZm9ybSA9IChcbiAgICBvcmlnaW5hbFRyYW5zZm9ybSxcbiAgICBsYWJlbHNXaWR0aCxcbiAgICBsYWJlbHNQYWRkaW5nLFxuICAgIGQzXG4pID0+IHtcbiAgICBjb25zdCBmdWxsTGFiZWxXaWR0aCA9IGxhYmVsc1dpZHRoICsgbGFiZWxzUGFkZGluZztcblxuICAgIGNvbnN0IHsgeCwgeSwgayB9ID0gb3JpZ2luYWxUcmFuc2Zvcm07XG5cbiAgICByZXR1cm4gZDMuem9vbUlkZW50aXR5XG4gICAgICAgIC50cmFuc2xhdGUoLWZ1bGxMYWJlbFdpZHRoLCAwKSAvLyBtb3ZlIG9yaWdpbiBhcyBpZiB0aGVyZSB3ZXJlIG5vIGxhYmVsc1xuICAgICAgICAudHJhbnNsYXRlKHgsIHkpIC8vIGFwcGx5IHpvb20gdHJhbnNmb3JtYXRpb24gcGFubmluZ1xuICAgICAgICAuc2NhbGUoaykgLy8gYXBwbHkgem9vbSB0cmFuc2Zvcm1hdGlvbiBzY2FsaW5nXG4gICAgICAgIC50cmFuc2xhdGUobGFiZWxzV2lkdGggKyBsYWJlbHNQYWRkaW5nLCAwKTsgLy8gcHV0IG9yaWdpbiBhdCBpdHMgb3JpZ2luYWwgcG9zaXRpb25cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChkMywgc3ZnLCBjb25maWcsIHhTY2FsZSwgZHJhdywgZ2V0RXZlbnQpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICAgIGxhYmVsOiB7IHdpZHRoOiBsYWJlbHNXaWR0aCwgcGFkZGluZzogbGFiZWxzUGFkZGluZyB9LFxuICAgICAgICB6b29tOiB7IG9uWm9vbVN0YXJ0LCBvblpvb20sIG9uWm9vbUVuZCwgbWluaW11bVNjYWxlLCBtYXhpbXVtU2NhbGUgfSxcbiAgICB9ID0gY29uZmlnO1xuXG4gICAgY29uc3Qgem9vbSA9IGQzLnpvb20oKS5zY2FsZUV4dGVudChbbWluaW11bVNjYWxlLCBtYXhpbXVtU2NhbGVdKTtcblxuICAgIHpvb20ub24oJ3pvb20uc3RhcnQnLCBvblpvb21TdGFydCkub24oJ3pvb20uZW5kJywgb25ab29tRW5kKTtcblxuICAgIHpvb20ub24oJ3pvb20nLCBhcmdzID0+IHtcbiAgICAgICAgY29uc3QgdHJhbnNmb3JtID0gZ2V0U2hpZnRlZFRyYW5zZm9ybShcbiAgICAgICAgICAgIGdldEV2ZW50KCkudHJhbnNmb3JtLFxuICAgICAgICAgICAgbGFiZWxzV2lkdGgsXG4gICAgICAgICAgICBsYWJlbHNQYWRkaW5nLFxuICAgICAgICAgICAgZDNcbiAgICAgICAgKTtcblxuICAgICAgICBjb25zdCBuZXdTY2FsZSA9IHRyYW5zZm9ybS5yZXNjYWxlWCh4U2NhbGUpO1xuXG4gICAgICAgIC8vIEBUT0RPOiBmaXggbWU6IHVzZSBgc3ZnYCBwYXJhbWV0ZXIgaW5zdGVhZCBvZiBkb2luZyBhIG5ldyBzZWxlY3Rpb25cbiAgICAgICAgZDMuc2VsZWN0KCdzdmcnKS5jYWxsKGRyYXcoY29uZmlnLCBuZXdTY2FsZSkpO1xuXG4gICAgICAgIGlmIChvblpvb20pIHtcbiAgICAgICAgICAgIG9uWm9vbShhcmdzKTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHpvb207XG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy96b29tLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBTUE7QUFDQTtBQUZBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFHQTtBQUFBO0FBQUE7QUFBQTtBQUtBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ=="
            );
        },
        function(module, exports, __webpack_require__) {
            eval(
                'exports = module.exports = __webpack_require__(3)();\n// imports\n\n\n// module\nexports.push([module.i, "*{margin:0;padding:0}body{font-size:16px;color:#222;background:#eee;padding:0 3rem 1rem;font-family:Muli,\\"sans serif\\"}a{color:#ff6e00;text-decoration:none}a:hover{text-decoration:underline}h1{text-align:center;margin:1.5rem auto 1rem;font-family:Josefin Sans,Serif;font-weight:400;font-size:3rem;color:#aaa}p{line-height:1.5}.infos{text-align:center;margin-bottom:1rem}#zoomEnd,#zoomStart{display:inline-block;font-feature-settings:\\"tnum\\";font-variant-numeric:tabular-nums}#zoomStart{text-align:\\"right\\"}#zoomEnd{text-align:\\"left\\"}.light{color:#aaa}.drop{cursor:pointer}footer p{text-align:center;color:#888;font-size:.8rem}.tooltip{border:3px solid #e7e7e7;border-radius:1rem;padding:.5rem 1rem;width:30rem;line-height:1.4rem}.tooltip,.tooltip:before{position:absolute;background:#fff}.tooltip:before{content:\\"\\";display:block;top:-.65rem;width:1rem;height:1rem;border:3px solid #e7e7e7;border-width:3px 0 0 3px;transform:rotate(45deg);z-index:1}.tooltip.left:before{left:1.65rem}.tooltip.right:before{right:1.65rem}.tooltip .commit{position:relative;z-index:2;display:flex;flex-direction:row;align-items:center}.tooltip .avatar{width:5rem;height:5rem;border-radius:.5rem;margin-right:1rem;flex:0 0 5rem}.tooltip .content{flex:1 0 0}.tooltip h3{font-size:1rem}.tooltip p{font-size:.9rem;color:#777}", ""]);\n\n// exports\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZW1vL2RlbW8uY3NzP2I0MzQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiKnttYXJnaW46MDtwYWRkaW5nOjB9Ym9keXtmb250LXNpemU6MTZweDtjb2xvcjojMjIyO2JhY2tncm91bmQ6I2VlZTtwYWRkaW5nOjAgM3JlbSAxcmVtO2ZvbnQtZmFtaWx5Ok11bGksXFxcInNhbnMgc2VyaWZcXFwifWF7Y29sb3I6I2ZmNmUwMDt0ZXh0LWRlY29yYXRpb246bm9uZX1hOmhvdmVye3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9aDF7dGV4dC1hbGlnbjpjZW50ZXI7bWFyZ2luOjEuNXJlbSBhdXRvIDFyZW07Zm9udC1mYW1pbHk6Sm9zZWZpbiBTYW5zLFNlcmlmO2ZvbnQtd2VpZ2h0OjQwMDtmb250LXNpemU6M3JlbTtjb2xvcjojYWFhfXB7bGluZS1oZWlnaHQ6MS41fS5pbmZvc3t0ZXh0LWFsaWduOmNlbnRlcjttYXJnaW4tYm90dG9tOjFyZW19I3pvb21FbmQsI3pvb21TdGFydHtkaXNwbGF5OmlubGluZS1ibG9jaztmb250LWZlYXR1cmUtc2V0dGluZ3M6XFxcInRudW1cXFwiO2ZvbnQtdmFyaWFudC1udW1lcmljOnRhYnVsYXItbnVtc30jem9vbVN0YXJ0e3RleHQtYWxpZ246XFxcInJpZ2h0XFxcIn0jem9vbUVuZHt0ZXh0LWFsaWduOlxcXCJsZWZ0XFxcIn0ubGlnaHR7Y29sb3I6I2FhYX0uZHJvcHtjdXJzb3I6cG9pbnRlcn1mb290ZXIgcHt0ZXh0LWFsaWduOmNlbnRlcjtjb2xvcjojODg4O2ZvbnQtc2l6ZTouOHJlbX0udG9vbHRpcHtib3JkZXI6M3B4IHNvbGlkICNlN2U3ZTc7Ym9yZGVyLXJhZGl1czoxcmVtO3BhZGRpbmc6LjVyZW0gMXJlbTt3aWR0aDozMHJlbTtsaW5lLWhlaWdodDoxLjRyZW19LnRvb2x0aXAsLnRvb2x0aXA6YmVmb3Jle3Bvc2l0aW9uOmFic29sdXRlO2JhY2tncm91bmQ6I2ZmZn0udG9vbHRpcDpiZWZvcmV7Y29udGVudDpcXFwiXFxcIjtkaXNwbGF5OmJsb2NrO3RvcDotLjY1cmVtO3dpZHRoOjFyZW07aGVpZ2h0OjFyZW07Ym9yZGVyOjNweCBzb2xpZCAjZTdlN2U3O2JvcmRlci13aWR0aDozcHggMCAwIDNweDt0cmFuc2Zvcm06cm90YXRlKDQ1ZGVnKTt6LWluZGV4OjF9LnRvb2x0aXAubGVmdDpiZWZvcmV7bGVmdDoxLjY1cmVtfS50b29sdGlwLnJpZ2h0OmJlZm9yZXtyaWdodDoxLjY1cmVtfS50b29sdGlwIC5jb21taXR7cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoyO2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpyb3c7YWxpZ24taXRlbXM6Y2VudGVyfS50b29sdGlwIC5hdmF0YXJ7d2lkdGg6NXJlbTtoZWlnaHQ6NXJlbTtib3JkZXItcmFkaXVzOi41cmVtO21hcmdpbi1yaWdodDoxcmVtO2ZsZXg6MCAwIDVyZW19LnRvb2x0aXAgLmNvbnRlbnR7ZmxleDoxIDAgMH0udG9vbHRpcCBoM3tmb250LXNpemU6MXJlbX0udG9vbHRpcCBwe2ZvbnQtc2l6ZTouOXJlbTtjb2xvcjojNzc3fVwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jc3MtbG9hZGVyIS4vZGVtby9kZW1vLmNzc1xuLy8gbW9kdWxlIGlkID0gMjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ=='
            );
        },
        function(module, exports, __webpack_require__) {
            eval(
                'exports = module.exports = __webpack_require__(3)();\n// imports\n\n\n// module\nexports.push([module.i, ".y-tick{stroke:#000;fill:none;stroke-width:1px}.line-separator,.x-axis{stroke:#777;fill:none;stroke-width:1px}.drop-line:last-child .line-separator{display:none}text{stroke:none;fill:#000}", ""]);\n\n// exports\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGUuY3NzPzllMjgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnktdGlja3tzdHJva2U6IzAwMDtmaWxsOm5vbmU7c3Ryb2tlLXdpZHRoOjFweH0ubGluZS1zZXBhcmF0b3IsLngtYXhpc3tzdHJva2U6Izc3NztmaWxsOm5vbmU7c3Ryb2tlLXdpZHRoOjFweH0uZHJvcC1saW5lOmxhc3QtY2hpbGQgLmxpbmUtc2VwYXJhdG9ye2Rpc3BsYXk6bm9uZX10ZXh0e3N0cm9rZTpub25lO2ZpbGw6IzAwMH1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY3NzLWxvYWRlciEuL3NyYy9zdHlsZS5jc3Ncbi8vIG1vZHVsZSBpZCA9IDI0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_defaultLocale__ = __webpack_require__(2);\n/* unused harmony reexport timeFormatDefaultLocale */\n/* unused harmony reexport timeFormat */\n/* unused harmony reexport timeParse */\n/* unused harmony reexport utcFormat */\n/* unused harmony reexport utcParse */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_locale__ = __webpack_require__(5);\n/* unused harmony reexport timeFormatLocale */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_isoFormat__ = __webpack_require__(4);\n/* unused harmony reexport isoFormat */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_isoParse__ = __webpack_require__(27);\n/* unused harmony reexport isoParse */\n\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUtZm9ybWF0L2luZGV4LmpzP2I2MDYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtkZWZhdWx0IGFzIHRpbWVGb3JtYXREZWZhdWx0TG9jYWxlLCB0aW1lRm9ybWF0LCB0aW1lUGFyc2UsIHV0Y0Zvcm1hdCwgdXRjUGFyc2V9IGZyb20gXCIuL3NyYy9kZWZhdWx0TG9jYWxlXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdGltZUZvcm1hdExvY2FsZX0gZnJvbSBcIi4vc3JjL2xvY2FsZVwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGlzb0Zvcm1hdH0gZnJvbSBcIi4vc3JjL2lzb0Zvcm1hdFwiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGlzb1BhcnNlfSBmcm9tIFwiLi9zcmMvaXNvUGFyc2VcIjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9kMy10aW1lLWZvcm1hdC9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMjVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0='
            );
        },
        function(module, exports) {
            eval(
                'module.exports = {"dateTime":"%x, %X","date":"%-m/%-d/%Y","time":"%-I:%M:%S %p","periods":["AM","PM"],"days":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"shortDays":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"shortMonths":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUtZm9ybWF0L2xvY2FsZS9lbi1VUy5qc29uP2ZmMmEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XCJkYXRlVGltZVwiOlwiJXgsICVYXCIsXCJkYXRlXCI6XCIlLW0vJS1kLyVZXCIsXCJ0aW1lXCI6XCIlLUk6JU06JVMgJXBcIixcInBlcmlvZHNcIjpbXCJBTVwiLFwiUE1cIl0sXCJkYXlzXCI6W1wiU3VuZGF5XCIsXCJNb25kYXlcIixcIlR1ZXNkYXlcIixcIldlZG5lc2RheVwiLFwiVGh1cnNkYXlcIixcIkZyaWRheVwiLFwiU2F0dXJkYXlcIl0sXCJzaG9ydERheXNcIjpbXCJTdW5cIixcIk1vblwiLFwiVHVlXCIsXCJXZWRcIixcIlRodVwiLFwiRnJpXCIsXCJTYXRcIl0sXCJtb250aHNcIjpbXCJKYW51YXJ5XCIsXCJGZWJydWFyeVwiLFwiTWFyY2hcIixcIkFwcmlsXCIsXCJNYXlcIixcIkp1bmVcIixcIkp1bHlcIixcIkF1Z3VzdFwiLFwiU2VwdGVtYmVyXCIsXCJPY3RvYmVyXCIsXCJOb3ZlbWJlclwiLFwiRGVjZW1iZXJcIl0sXCJzaG9ydE1vbnRoc1wiOltcIkphblwiLFwiRmViXCIsXCJNYXJcIixcIkFwclwiLFwiTWF5XCIsXCJKdW5cIixcIkp1bFwiLFwiQXVnXCIsXCJTZXBcIixcIk9jdFwiLFwiTm92XCIsXCJEZWNcIl19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2QzLXRpbWUtZm9ybWF0L2xvY2FsZS9lbi1VUy5qc29uXG4vLyBtb2R1bGUgaWQgPSAyNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9'
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isoFormat__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__defaultLocale__ = __webpack_require__(2);\n\n\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date("2000-01-01T00:00:00.000Z")\n    ? parseIsoNative\n    : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__defaultLocale__["a" /* utcParse */])(__WEBPACK_IMPORTED_MODULE_0__isoFormat__["a" /* isoSpecifier */]);\n\n/* unused harmony default export */ var _unused_webpack_default_export = (parseIso);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUtZm9ybWF0L3NyYy9pc29QYXJzZS5qcz9hMGIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aXNvU3BlY2lmaWVyfSBmcm9tIFwiLi9pc29Gb3JtYXRcIjtcbmltcG9ydCB7dXRjUGFyc2V9IGZyb20gXCIuL2RlZmF1bHRMb2NhbGVcIjtcblxuZnVuY3Rpb24gcGFyc2VJc29OYXRpdmUoc3RyaW5nKSB7XG4gIHZhciBkYXRlID0gbmV3IERhdGUoc3RyaW5nKTtcbiAgcmV0dXJuIGlzTmFOKGRhdGUpID8gbnVsbCA6IGRhdGU7XG59XG5cbnZhciBwYXJzZUlzbyA9ICtuZXcgRGF0ZShcIjIwMDAtMDEtMDFUMDA6MDA6MDAuMDAwWlwiKVxuICAgID8gcGFyc2VJc29OYXRpdmVcbiAgICA6IHV0Y1BhcnNlKGlzb1NwZWNpZmllcik7XG5cbmV4cG9ydCBkZWZhdWx0IHBhcnNlSXNvO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2QzLXRpbWUtZm9ybWF0L3NyYy9pc29QYXJzZS5qc1xuLy8gbW9kdWxlIGlkID0gMjdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9'
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_interval__ = __webpack_require__(0);\n/* unused harmony reexport timeInterval */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_millisecond__ = __webpack_require__(31);\n/* unused harmony reexport timeMillisecond */\n/* unused harmony reexport timeMilliseconds */\n/* unused harmony reexport utcMillisecond */\n/* unused harmony reexport utcMilliseconds */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_second__ = __webpack_require__(34);\n/* unused harmony reexport timeSecond */\n/* unused harmony reexport timeSeconds */\n/* unused harmony reexport utcSecond */\n/* unused harmony reexport utcSeconds */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__src_minute__ = __webpack_require__(32);\n/* unused harmony reexport timeMinute */\n/* unused harmony reexport timeMinutes */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__src_hour__ = __webpack_require__(30);\n/* unused harmony reexport timeHour */\n/* unused harmony reexport timeHours */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__src_day__ = __webpack_require__(29);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return __WEBPACK_IMPORTED_MODULE_5__src_day__["a"]; });\n/* unused harmony reexport timeDays */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__src_week__ = __webpack_require__(41);\n/* unused harmony reexport timeWeek */\n/* unused harmony reexport timeWeeks */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return __WEBPACK_IMPORTED_MODULE_6__src_week__["a"]; });\n/* unused harmony reexport timeSundays */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_6__src_week__["b"]; });\n/* unused harmony reexport timeMondays */\n/* unused harmony reexport timeTuesday */\n/* unused harmony reexport timeTuesdays */\n/* unused harmony reexport timeWednesday */\n/* unused harmony reexport timeWednesdays */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return __WEBPACK_IMPORTED_MODULE_6__src_week__["c"]; });\n/* unused harmony reexport timeThursdays */\n/* unused harmony reexport timeFriday */\n/* unused harmony reexport timeFridays */\n/* unused harmony reexport timeSaturday */\n/* unused harmony reexport timeSaturdays */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__src_month__ = __webpack_require__(33);\n/* unused harmony reexport timeMonth */\n/* unused harmony reexport timeMonths */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__src_year__ = __webpack_require__(42);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return __WEBPACK_IMPORTED_MODULE_8__src_year__["a"]; });\n/* unused harmony reexport timeYears */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__src_utcMinute__ = __webpack_require__(37);\n/* unused harmony reexport utcMinute */\n/* unused harmony reexport utcMinutes */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__src_utcHour__ = __webpack_require__(36);\n/* unused harmony reexport utcHour */\n/* unused harmony reexport utcHours */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__src_utcDay__ = __webpack_require__(35);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_11__src_utcDay__["a"]; });\n/* unused harmony reexport utcDays */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__src_utcWeek__ = __webpack_require__(39);\n/* unused harmony reexport utcWeek */\n/* unused harmony reexport utcWeeks */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return __WEBPACK_IMPORTED_MODULE_12__src_utcWeek__["a"]; });\n/* unused harmony reexport utcSundays */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_12__src_utcWeek__["b"]; });\n/* unused harmony reexport utcMondays */\n/* unused harmony reexport utcTuesday */\n/* unused harmony reexport utcTuesdays */\n/* unused harmony reexport utcWednesday */\n/* unused harmony reexport utcWednesdays */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return __WEBPACK_IMPORTED_MODULE_12__src_utcWeek__["c"]; });\n/* unused harmony reexport utcThursdays */\n/* unused harmony reexport utcFriday */\n/* unused harmony reexport utcFridays */\n/* unused harmony reexport utcSaturday */\n/* unused harmony reexport utcSaturdays */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__src_utcMonth__ = __webpack_require__(38);\n/* unused harmony reexport utcMonth */\n/* unused harmony reexport utcMonths */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__src_utcYear__ = __webpack_require__(40);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return __WEBPACK_IMPORTED_MODULE_14__src_utcYear__["a"]; });\n/* unused harmony reexport utcYears */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvaW5kZXguanM/MmJhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVJbnRlcnZhbFxufSBmcm9tIFwiLi9zcmMvaW50ZXJ2YWxcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB0aW1lTWlsbGlzZWNvbmQsXG4gIG1pbGxpc2Vjb25kcyBhcyB0aW1lTWlsbGlzZWNvbmRzLFxuICBkZWZhdWx0IGFzIHV0Y01pbGxpc2Vjb25kLFxuICBtaWxsaXNlY29uZHMgYXMgdXRjTWlsbGlzZWNvbmRzXG59IGZyb20gXCIuL3NyYy9taWxsaXNlY29uZFwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVTZWNvbmQsXG4gIHNlY29uZHMgYXMgdGltZVNlY29uZHMsXG4gIGRlZmF1bHQgYXMgdXRjU2Vjb25kLFxuICBzZWNvbmRzIGFzIHV0Y1NlY29uZHNcbn0gZnJvbSBcIi4vc3JjL3NlY29uZFwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVNaW51dGUsXG4gIG1pbnV0ZXMgYXMgdGltZU1pbnV0ZXNcbn0gZnJvbSBcIi4vc3JjL21pbnV0ZVwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVIb3VyLFxuICBob3VycyBhcyB0aW1lSG91cnNcbn0gZnJvbSBcIi4vc3JjL2hvdXJcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB0aW1lRGF5LFxuICBkYXlzIGFzIHRpbWVEYXlzXG59IGZyb20gXCIuL3NyYy9kYXlcIjtcblxuZXhwb3J0IHtcbiAgc3VuZGF5IGFzIHRpbWVXZWVrLFxuICBzdW5kYXlzIGFzIHRpbWVXZWVrcyxcbiAgc3VuZGF5IGFzIHRpbWVTdW5kYXksXG4gIHN1bmRheXMgYXMgdGltZVN1bmRheXMsXG4gIG1vbmRheSBhcyB0aW1lTW9uZGF5LFxuICBtb25kYXlzIGFzIHRpbWVNb25kYXlzLFxuICB0dWVzZGF5IGFzIHRpbWVUdWVzZGF5LFxuICB0dWVzZGF5cyBhcyB0aW1lVHVlc2RheXMsXG4gIHdlZG5lc2RheSBhcyB0aW1lV2VkbmVzZGF5LFxuICB3ZWRuZXNkYXlzIGFzIHRpbWVXZWRuZXNkYXlzLFxuICB0aHVyc2RheSBhcyB0aW1lVGh1cnNkYXksXG4gIHRodXJzZGF5cyBhcyB0aW1lVGh1cnNkYXlzLFxuICBmcmlkYXkgYXMgdGltZUZyaWRheSxcbiAgZnJpZGF5cyBhcyB0aW1lRnJpZGF5cyxcbiAgc2F0dXJkYXkgYXMgdGltZVNhdHVyZGF5LFxuICBzYXR1cmRheXMgYXMgdGltZVNhdHVyZGF5c1xufSBmcm9tIFwiLi9zcmMvd2Vla1wiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVNb250aCxcbiAgbW9udGhzIGFzIHRpbWVNb250aHNcbn0gZnJvbSBcIi4vc3JjL21vbnRoXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgdGltZVllYXIsXG4gIHllYXJzIGFzIHRpbWVZZWFyc1xufSBmcm9tIFwiLi9zcmMveWVhclwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHV0Y01pbnV0ZSxcbiAgdXRjTWludXRlcyBhcyB1dGNNaW51dGVzXG59IGZyb20gXCIuL3NyYy91dGNNaW51dGVcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB1dGNIb3VyLFxuICB1dGNIb3VycyBhcyB1dGNIb3Vyc1xufSBmcm9tIFwiLi9zcmMvdXRjSG91clwiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHV0Y0RheSxcbiAgdXRjRGF5cyBhcyB1dGNEYXlzXG59IGZyb20gXCIuL3NyYy91dGNEYXlcIjtcblxuZXhwb3J0IHtcbiAgdXRjU3VuZGF5IGFzIHV0Y1dlZWssXG4gIHV0Y1N1bmRheXMgYXMgdXRjV2Vla3MsXG4gIHV0Y1N1bmRheSBhcyB1dGNTdW5kYXksXG4gIHV0Y1N1bmRheXMgYXMgdXRjU3VuZGF5cyxcbiAgdXRjTW9uZGF5IGFzIHV0Y01vbmRheSxcbiAgdXRjTW9uZGF5cyBhcyB1dGNNb25kYXlzLFxuICB1dGNUdWVzZGF5IGFzIHV0Y1R1ZXNkYXksXG4gIHV0Y1R1ZXNkYXlzIGFzIHV0Y1R1ZXNkYXlzLFxuICB1dGNXZWRuZXNkYXkgYXMgdXRjV2VkbmVzZGF5LFxuICB1dGNXZWRuZXNkYXlzIGFzIHV0Y1dlZG5lc2RheXMsXG4gIHV0Y1RodXJzZGF5IGFzIHV0Y1RodXJzZGF5LFxuICB1dGNUaHVyc2RheXMgYXMgdXRjVGh1cnNkYXlzLFxuICB1dGNGcmlkYXkgYXMgdXRjRnJpZGF5LFxuICB1dGNGcmlkYXlzIGFzIHV0Y0ZyaWRheXMsXG4gIHV0Y1NhdHVyZGF5IGFzIHV0Y1NhdHVyZGF5LFxuICB1dGNTYXR1cmRheXMgYXMgdXRjU2F0dXJkYXlzXG59IGZyb20gXCIuL3NyYy91dGNXZWVrXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgdXRjTW9udGgsXG4gIHV0Y01vbnRocyBhcyB1dGNNb250aHNcbn0gZnJvbSBcIi4vc3JjL3V0Y01vbnRoXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgdXRjWWVhcixcbiAgdXRjWWVhcnMgYXMgdXRjWWVhcnNcbn0gZnJvbSBcIi4vc3JjL3V0Y1llYXJcIjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9kMy10aW1lL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAyOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQU1BO0FBQ0E7QUFNQTtBQUNBO0FBSUE7QUFDQTtBQUlBO0FBQ0E7QUFJQTtBQUNBO0FBa0JBO0FBQ0E7QUFJQTtBQUNBO0FBSUE7QUFDQTtBQUlBO0FBQ0E7QUFJQTtBQUNBO0FBSUE7QUFDQTtBQWtCQTtBQUNBO0FBSUE7QUFDQTtBQUlBOyIsInNvdXJjZVJvb3QiOiIifQ=='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* unused harmony export days */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__duration__ = __webpack_require__(1);\n\n\n\nvar day = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * __WEBPACK_IMPORTED_MODULE_1__duration__["d" /* durationMinute */]) / __WEBPACK_IMPORTED_MODULE_1__duration__["b" /* durationDay */];\n}, function(date) {\n  return date.getDate() - 1;\n});\n\n/* harmony default export */ __webpack_exports__["a"] = (day);\nvar days = day.range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvc3JjL2RheS5qcz9kNzA1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuaW1wb3J0IHtkdXJhdGlvbkRheSwgZHVyYXRpb25NaW51dGV9IGZyb20gXCIuL2R1cmF0aW9uXCI7XG5cbnZhciBkYXkgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gKGVuZCAtIHN0YXJ0IC0gKGVuZC5nZXRUaW1lem9uZU9mZnNldCgpIC0gc3RhcnQuZ2V0VGltZXpvbmVPZmZzZXQoKSkgKiBkdXJhdGlvbk1pbnV0ZSkgLyBkdXJhdGlvbkRheTtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0RGF0ZSgpIC0gMTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBkYXk7XG5leHBvcnQgdmFyIGRheXMgPSBkYXkucmFuZ2U7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vZDMtdGltZS9zcmMvZGF5LmpzXG4vLyBtb2R1bGUgaWQgPSAyOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* unused harmony export hours */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__duration__ = __webpack_require__(1);\n\n\n\nvar hour = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n  var offset = date.getTimezoneOffset() * __WEBPACK_IMPORTED_MODULE_1__duration__["d" /* durationMinute */] % __WEBPACK_IMPORTED_MODULE_1__duration__["c" /* durationHour */];\n  if (offset < 0) offset += __WEBPACK_IMPORTED_MODULE_1__duration__["c" /* durationHour */];\n  date.setTime(Math.floor((+date - offset) / __WEBPACK_IMPORTED_MODULE_1__duration__["c" /* durationHour */]) * __WEBPACK_IMPORTED_MODULE_1__duration__["c" /* durationHour */] + offset);\n}, function(date, step) {\n  date.setTime(+date + step * __WEBPACK_IMPORTED_MODULE_1__duration__["c" /* durationHour */]);\n}, function(start, end) {\n  return (end - start) / __WEBPACK_IMPORTED_MODULE_1__duration__["c" /* durationHour */];\n}, function(date) {\n  return date.getHours();\n});\n\n/* unused harmony default export */ var _unused_webpack_default_export = (hour);\nvar hours = hour.range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvc3JjL2hvdXIuanM/ODgyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWxcIjtcbmltcG9ydCB7ZHVyYXRpb25Ib3VyLCBkdXJhdGlvbk1pbnV0ZX0gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxudmFyIGhvdXIgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIHZhciBvZmZzZXQgPSBkYXRlLmdldFRpbWV6b25lT2Zmc2V0KCkgKiBkdXJhdGlvbk1pbnV0ZSAlIGR1cmF0aW9uSG91cjtcbiAgaWYgKG9mZnNldCA8IDApIG9mZnNldCArPSBkdXJhdGlvbkhvdXI7XG4gIGRhdGUuc2V0VGltZShNYXRoLmZsb29yKCgrZGF0ZSAtIG9mZnNldCkgLyBkdXJhdGlvbkhvdXIpICogZHVyYXRpb25Ib3VyICsgb2Zmc2V0KTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRUaW1lKCtkYXRlICsgc3RlcCAqIGR1cmF0aW9uSG91cik7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gZHVyYXRpb25Ib3VyO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRIb3VycygpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGhvdXI7XG5leHBvcnQgdmFyIGhvdXJzID0gaG91ci5yYW5nZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9kMy10aW1lL3NyYy9ob3VyLmpzXG4vLyBtb2R1bGUgaWQgPSAzMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9'
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* unused harmony export milliseconds */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval__ = __webpack_require__(0);\n\n\nvar millisecond = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\n/* unused harmony default export */ var _unused_webpack_default_export = (millisecond);\nvar milliseconds = millisecond.range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvc3JjL21pbGxpc2Vjb25kLmpzPzEwNDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsXCI7XG5cbnZhciBtaWxsaXNlY29uZCA9IGludGVydmFsKGZ1bmN0aW9uKCkge1xuICAvLyBub29wXG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VGltZSgrZGF0ZSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gZW5kIC0gc3RhcnQ7XG59KTtcblxuLy8gQW4gb3B0aW1pemVkIGltcGxlbWVudGF0aW9uIGZvciB0aGlzIHNpbXBsZSBjYXNlLlxubWlsbGlzZWNvbmQuZXZlcnkgPSBmdW5jdGlvbihrKSB7XG4gIGsgPSBNYXRoLmZsb29yKGspO1xuICBpZiAoIWlzRmluaXRlKGspIHx8ICEoayA+IDApKSByZXR1cm4gbnVsbDtcbiAgaWYgKCEoayA+IDEpKSByZXR1cm4gbWlsbGlzZWNvbmQ7XG4gIHJldHVybiBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgZGF0ZS5zZXRUaW1lKE1hdGguZmxvb3IoZGF0ZSAvIGspICogayk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwICogayk7XG4gIH0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGs7XG4gIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbWlsbGlzZWNvbmQ7XG5leHBvcnQgdmFyIG1pbGxpc2Vjb25kcyA9IG1pbGxpc2Vjb25kLnJhbmdlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2QzLXRpbWUvc3JjL21pbGxpc2Vjb25kLmpzXG4vLyBtb2R1bGUgaWQgPSAzMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ=='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* unused harmony export minutes */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__duration__ = __webpack_require__(1);\n\n\n\nvar minute = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n  date.setTime(Math.floor(date / __WEBPACK_IMPORTED_MODULE_1__duration__["d" /* durationMinute */]) * __WEBPACK_IMPORTED_MODULE_1__duration__["d" /* durationMinute */]);\n}, function(date, step) {\n  date.setTime(+date + step * __WEBPACK_IMPORTED_MODULE_1__duration__["d" /* durationMinute */]);\n}, function(start, end) {\n  return (end - start) / __WEBPACK_IMPORTED_MODULE_1__duration__["d" /* durationMinute */];\n}, function(date) {\n  return date.getMinutes();\n});\n\n/* unused harmony default export */ var _unused_webpack_default_export = (minute);\nvar minutes = minute.range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvc3JjL21pbnV0ZS5qcz8wMDg2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuaW1wb3J0IHtkdXJhdGlvbk1pbnV0ZX0gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxudmFyIG1pbnV0ZSA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRUaW1lKE1hdGguZmxvb3IoZGF0ZSAvIGR1cmF0aW9uTWludXRlKSAqIGR1cmF0aW9uTWludXRlKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRUaW1lKCtkYXRlICsgc3RlcCAqIGR1cmF0aW9uTWludXRlKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIChlbmQgLSBzdGFydCkgLyBkdXJhdGlvbk1pbnV0ZTtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0TWludXRlcygpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1pbnV0ZTtcbmV4cG9ydCB2YXIgbWludXRlcyA9IG1pbnV0ZS5yYW5nZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9kMy10aW1lL3NyYy9taW51dGUuanNcbi8vIG1vZHVsZSBpZCA9IDMyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ=='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* unused harmony export months */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval__ = __webpack_require__(0);\n\n\nvar month = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\n/* unused harmony default export */ var _unused_webpack_default_export = (month);\nvar months = month.range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvc3JjL21vbnRoLmpzP2QyODYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsXCI7XG5cbnZhciBtb250aCA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXREYXRlKDEpO1xuICBkYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldE1vbnRoKGRhdGUuZ2V0TW9udGgoKSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gZW5kLmdldE1vbnRoKCkgLSBzdGFydC5nZXRNb250aCgpICsgKGVuZC5nZXRGdWxsWWVhcigpIC0gc3RhcnQuZ2V0RnVsbFllYXIoKSkgKiAxMjtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0TW9udGgoKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBtb250aDtcbmV4cG9ydCB2YXIgbW9udGhzID0gbW9udGgucmFuZ2U7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vZDMtdGltZS9zcmMvbW9udGguanNcbi8vIG1vZHVsZSBpZCA9IDMzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* unused harmony export seconds */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__duration__ = __webpack_require__(1);\n\n\n\nvar second = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n  date.setTime(Math.floor(date / __WEBPACK_IMPORTED_MODULE_1__duration__["e" /* durationSecond */]) * __WEBPACK_IMPORTED_MODULE_1__duration__["e" /* durationSecond */]);\n}, function(date, step) {\n  date.setTime(+date + step * __WEBPACK_IMPORTED_MODULE_1__duration__["e" /* durationSecond */]);\n}, function(start, end) {\n  return (end - start) / __WEBPACK_IMPORTED_MODULE_1__duration__["e" /* durationSecond */];\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\n/* unused harmony default export */ var _unused_webpack_default_export = (second);\nvar seconds = second.range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvc3JjL3NlY29uZC5qcz8yNzA0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuaW1wb3J0IHtkdXJhdGlvblNlY29uZH0gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxudmFyIHNlY29uZCA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRUaW1lKE1hdGguZmxvb3IoZGF0ZSAvIGR1cmF0aW9uU2Vjb25kKSAqIGR1cmF0aW9uU2Vjb25kKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRUaW1lKCtkYXRlICsgc3RlcCAqIGR1cmF0aW9uU2Vjb25kKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIChlbmQgLSBzdGFydCkgLyBkdXJhdGlvblNlY29uZDtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0VVRDU2Vjb25kcygpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHNlY29uZDtcbmV4cG9ydCB2YXIgc2Vjb25kcyA9IHNlY29uZC5yYW5nZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9kMy10aW1lL3NyYy9zZWNvbmQuanNcbi8vIG1vZHVsZSBpZCA9IDM0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ=='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* unused harmony export utcDays */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__duration__ = __webpack_require__(1);\n\n\n\nvar utcDay = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / __WEBPACK_IMPORTED_MODULE_1__duration__["b" /* durationDay */];\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\n/* harmony default export */ __webpack_exports__["a"] = (utcDay);\nvar utcDays = utcDay.range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvc3JjL3V0Y0RheS5qcz81ZTY2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuaW1wb3J0IHtkdXJhdGlvbkRheX0gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxudmFyIHV0Y0RheSA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRVVENEYXRlKGRhdGUuZ2V0VVRDRGF0ZSgpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gZHVyYXRpb25EYXk7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldFVUQ0RhdGUoKSAtIDE7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgdXRjRGF5O1xuZXhwb3J0IHZhciB1dGNEYXlzID0gdXRjRGF5LnJhbmdlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2QzLXRpbWUvc3JjL3V0Y0RheS5qc1xuLy8gbW9kdWxlIGlkID0gMzVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9'
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* unused harmony export utcHours */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__duration__ = __webpack_require__(1);\n\n\n\nvar utcHour = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * __WEBPACK_IMPORTED_MODULE_1__duration__["c" /* durationHour */]);\n}, function(start, end) {\n  return (end - start) / __WEBPACK_IMPORTED_MODULE_1__duration__["c" /* durationHour */];\n}, function(date) {\n  return date.getUTCHours();\n});\n\n/* unused harmony default export */ var _unused_webpack_default_export = (utcHour);\nvar utcHours = utcHour.range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvc3JjL3V0Y0hvdXIuanM/YjM1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWxcIjtcbmltcG9ydCB7ZHVyYXRpb25Ib3VyfSBmcm9tIFwiLi9kdXJhdGlvblwiO1xuXG52YXIgdXRjSG91ciA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENNaW51dGVzKDAsIDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwICogZHVyYXRpb25Ib3VyKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIChlbmQgLSBzdGFydCkgLyBkdXJhdGlvbkhvdXI7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldFVUQ0hvdXJzKCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgdXRjSG91cjtcbmV4cG9ydCB2YXIgdXRjSG91cnMgPSB1dGNIb3VyLnJhbmdlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2QzLXRpbWUvc3JjL3V0Y0hvdXIuanNcbi8vIG1vZHVsZSBpZCA9IDM2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ=='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* unused harmony export utcMinutes */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__duration__ = __webpack_require__(1);\n\n\n\nvar utcMinute = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * __WEBPACK_IMPORTED_MODULE_1__duration__["d" /* durationMinute */]);\n}, function(start, end) {\n  return (end - start) / __WEBPACK_IMPORTED_MODULE_1__duration__["d" /* durationMinute */];\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\n/* unused harmony default export */ var _unused_webpack_default_export = (utcMinute);\nvar utcMinutes = utcMinute.range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvc3JjL3V0Y01pbnV0ZS5qcz83Y2U0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbFwiO1xuaW1wb3J0IHtkdXJhdGlvbk1pbnV0ZX0gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxudmFyIHV0Y01pbnV0ZSA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENTZWNvbmRzKDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwICogZHVyYXRpb25NaW51dGUpO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uTWludXRlO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRVVENNaW51dGVzKCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgdXRjTWludXRlO1xuZXhwb3J0IHZhciB1dGNNaW51dGVzID0gdXRjTWludXRlLnJhbmdlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2QzLXRpbWUvc3JjL3V0Y01pbnV0ZS5qc1xuLy8gbW9kdWxlIGlkID0gMzdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9'
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* unused harmony export utcMonths */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval__ = __webpack_require__(0);\n\n\nvar utcMonth = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\n/* unused harmony default export */ var _unused_webpack_default_export = (utcMonth);\nvar utcMonths = utcMonth.range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvc3JjL3V0Y01vbnRoLmpzPzI2M2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsXCI7XG5cbnZhciB1dGNNb250aCA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENEYXRlKDEpO1xuICBkYXRlLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFVUQ01vbnRoKGRhdGUuZ2V0VVRDTW9udGgoKSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gZW5kLmdldFVUQ01vbnRoKCkgLSBzdGFydC5nZXRVVENNb250aCgpICsgKGVuZC5nZXRVVENGdWxsWWVhcigpIC0gc3RhcnQuZ2V0VVRDRnVsbFllYXIoKSkgKiAxMjtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0VVRDTW9udGgoKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB1dGNNb250aDtcbmV4cG9ydCB2YXIgdXRjTW9udGhzID0gdXRjTW9udGgucmFuZ2U7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vZDMtdGltZS9zcmMvdXRjTW9udGguanNcbi8vIG1vZHVsZSBpZCA9IDM4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return utcSunday; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return utcMonday; });\n/* unused harmony export utcTuesday */\n/* unused harmony export utcWednesday */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return utcThursday; });\n/* unused harmony export utcFriday */\n/* unused harmony export utcSaturday */\n/* unused harmony export utcSundays */\n/* unused harmony export utcMondays */\n/* unused harmony export utcTuesdays */\n/* unused harmony export utcWednesdays */\n/* unused harmony export utcThursdays */\n/* unused harmony export utcFridays */\n/* unused harmony export utcSaturdays */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__duration__ = __webpack_require__(1);\n\n\n\nfunction utcWeekday(i) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / __WEBPACK_IMPORTED_MODULE_1__duration__["a" /* durationWeek */];\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvc3JjL3V0Y1dlZWsuanM/YjQ0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWxcIjtcbmltcG9ydCB7ZHVyYXRpb25XZWVrfSBmcm9tIFwiLi9kdXJhdGlvblwiO1xuXG5mdW5jdGlvbiB1dGNXZWVrZGF5KGkpIHtcbiAgcmV0dXJuIGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgLSAoZGF0ZS5nZXRVVENEYXkoKSArIDcgLSBpKSAlIDcpO1xuICAgIGRhdGUuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgKyBzdGVwICogNyk7XG4gIH0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uV2VlaztcbiAgfSk7XG59XG5cbmV4cG9ydCB2YXIgdXRjU3VuZGF5ID0gdXRjV2Vla2RheSgwKTtcbmV4cG9ydCB2YXIgdXRjTW9uZGF5ID0gdXRjV2Vla2RheSgxKTtcbmV4cG9ydCB2YXIgdXRjVHVlc2RheSA9IHV0Y1dlZWtkYXkoMik7XG5leHBvcnQgdmFyIHV0Y1dlZG5lc2RheSA9IHV0Y1dlZWtkYXkoMyk7XG5leHBvcnQgdmFyIHV0Y1RodXJzZGF5ID0gdXRjV2Vla2RheSg0KTtcbmV4cG9ydCB2YXIgdXRjRnJpZGF5ID0gdXRjV2Vla2RheSg1KTtcbmV4cG9ydCB2YXIgdXRjU2F0dXJkYXkgPSB1dGNXZWVrZGF5KDYpO1xuXG5leHBvcnQgdmFyIHV0Y1N1bmRheXMgPSB1dGNTdW5kYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y01vbmRheXMgPSB1dGNNb25kYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y1R1ZXNkYXlzID0gdXRjVHVlc2RheS5yYW5nZTtcbmV4cG9ydCB2YXIgdXRjV2VkbmVzZGF5cyA9IHV0Y1dlZG5lc2RheS5yYW5nZTtcbmV4cG9ydCB2YXIgdXRjVGh1cnNkYXlzID0gdXRjVGh1cnNkYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y0ZyaWRheXMgPSB1dGNGcmlkYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y1NhdHVyZGF5cyA9IHV0Y1NhdHVyZGF5LnJhbmdlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2QzLXRpbWUvc3JjL3V0Y1dlZWsuanNcbi8vIG1vZHVsZSBpZCA9IDM5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ=='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* unused harmony export utcYears */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval__ = __webpack_require__(0);\n\n\nvar utcYear = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\n/* harmony default export */ __webpack_exports__["a"] = (utcYear);\nvar utcYears = utcYear.range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvc3JjL3V0Y1llYXIuanM/ZDQzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWxcIjtcblxudmFyIHV0Y1llYXIgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0VVRDTW9udGgoMCwgMSk7XG4gIGRhdGUuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VVRDRnVsbFllYXIoZGF0ZS5nZXRVVENGdWxsWWVhcigpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiBlbmQuZ2V0VVRDRnVsbFllYXIoKSAtIHN0YXJ0LmdldFVUQ0Z1bGxZZWFyKCk7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldFVUQ0Z1bGxZZWFyKCk7XG59KTtcblxuLy8gQW4gb3B0aW1pemVkIGltcGxlbWVudGF0aW9uIGZvciB0aGlzIHNpbXBsZSBjYXNlLlxudXRjWWVhci5ldmVyeSA9IGZ1bmN0aW9uKGspIHtcbiAgcmV0dXJuICFpc0Zpbml0ZShrID0gTWF0aC5mbG9vcihrKSkgfHwgIShrID4gMCkgPyBudWxsIDogaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIGRhdGUuc2V0VVRDRnVsbFllYXIoTWF0aC5mbG9vcihkYXRlLmdldFVUQ0Z1bGxZZWFyKCkgLyBrKSAqIGspO1xuICAgIGRhdGUuc2V0VVRDTW9udGgoMCwgMSk7XG4gICAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgIGRhdGUuc2V0VVRDRnVsbFllYXIoZGF0ZS5nZXRVVENGdWxsWWVhcigpICsgc3RlcCAqIGspO1xuICB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHV0Y1llYXI7XG5leHBvcnQgdmFyIHV0Y1llYXJzID0gdXRjWWVhci5yYW5nZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9kMy10aW1lL3NyYy91dGNZZWFyLmpzXG4vLyBtb2R1bGUgaWQgPSA0MFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ=='
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return sunday; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return monday; });\n/* unused harmony export tuesday */\n/* unused harmony export wednesday */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return thursday; });\n/* unused harmony export friday */\n/* unused harmony export saturday */\n/* unused harmony export sundays */\n/* unused harmony export mondays */\n/* unused harmony export tuesdays */\n/* unused harmony export wednesdays */\n/* unused harmony export thursdays */\n/* unused harmony export fridays */\n/* unused harmony export saturdays */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__duration__ = __webpack_require__(1);\n\n\n\nfunction weekday(i) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * __WEBPACK_IMPORTED_MODULE_1__duration__["d" /* durationMinute */]) / __WEBPACK_IMPORTED_MODULE_1__duration__["a" /* durationWeek */];\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvc3JjL3dlZWsuanM/OTc0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWxcIjtcbmltcG9ydCB7ZHVyYXRpb25NaW51dGUsIGR1cmF0aW9uV2Vla30gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxuZnVuY3Rpb24gd2Vla2RheShpKSB7XG4gIHJldHVybiBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpIC0gKGRhdGUuZ2V0RGF5KCkgKyA3IC0gaSkgJSA3KTtcbiAgICBkYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICB9LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpICsgc3RlcCAqIDcpO1xuICB9LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gICAgcmV0dXJuIChlbmQgLSBzdGFydCAtIChlbmQuZ2V0VGltZXpvbmVPZmZzZXQoKSAtIHN0YXJ0LmdldFRpbWV6b25lT2Zmc2V0KCkpICogZHVyYXRpb25NaW51dGUpIC8gZHVyYXRpb25XZWVrO1xuICB9KTtcbn1cblxuZXhwb3J0IHZhciBzdW5kYXkgPSB3ZWVrZGF5KDApO1xuZXhwb3J0IHZhciBtb25kYXkgPSB3ZWVrZGF5KDEpO1xuZXhwb3J0IHZhciB0dWVzZGF5ID0gd2Vla2RheSgyKTtcbmV4cG9ydCB2YXIgd2VkbmVzZGF5ID0gd2Vla2RheSgzKTtcbmV4cG9ydCB2YXIgdGh1cnNkYXkgPSB3ZWVrZGF5KDQpO1xuZXhwb3J0IHZhciBmcmlkYXkgPSB3ZWVrZGF5KDUpO1xuZXhwb3J0IHZhciBzYXR1cmRheSA9IHdlZWtkYXkoNik7XG5cbmV4cG9ydCB2YXIgc3VuZGF5cyA9IHN1bmRheS5yYW5nZTtcbmV4cG9ydCB2YXIgbW9uZGF5cyA9IG1vbmRheS5yYW5nZTtcbmV4cG9ydCB2YXIgdHVlc2RheXMgPSB0dWVzZGF5LnJhbmdlO1xuZXhwb3J0IHZhciB3ZWRuZXNkYXlzID0gd2VkbmVzZGF5LnJhbmdlO1xuZXhwb3J0IHZhciB0aHVyc2RheXMgPSB0aHVyc2RheS5yYW5nZTtcbmV4cG9ydCB2YXIgZnJpZGF5cyA9IGZyaWRheS5yYW5nZTtcbmV4cG9ydCB2YXIgc2F0dXJkYXlzID0gc2F0dXJkYXkucmFuZ2U7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vZDMtdGltZS9zcmMvd2Vlay5qc1xuLy8gbW9kdWxlIGlkID0gNDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9'
            );
        },
        function(module, __webpack_exports__, __webpack_require__) {
            'use strict';
            eval(
                '/* unused harmony export years */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__interval__ = __webpack_require__(0);\n\n\nvar year = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__interval__["a" /* default */])(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\n/* harmony default export */ __webpack_exports__["a"] = (year);\nvar years = year.range;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2QzLXRpbWUvc3JjL3llYXIuanM/MzhkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWxcIjtcblxudmFyIHllYXIgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0TW9udGgoMCwgMSk7XG4gIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0RnVsbFllYXIoZGF0ZS5nZXRGdWxsWWVhcigpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiBlbmQuZ2V0RnVsbFllYXIoKSAtIHN0YXJ0LmdldEZ1bGxZZWFyKCk7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldEZ1bGxZZWFyKCk7XG59KTtcblxuLy8gQW4gb3B0aW1pemVkIGltcGxlbWVudGF0aW9uIGZvciB0aGlzIHNpbXBsZSBjYXNlLlxueWVhci5ldmVyeSA9IGZ1bmN0aW9uKGspIHtcbiAgcmV0dXJuICFpc0Zpbml0ZShrID0gTWF0aC5mbG9vcihrKSkgfHwgIShrID4gMCkgPyBudWxsIDogaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIGRhdGUuc2V0RnVsbFllYXIoTWF0aC5mbG9vcihkYXRlLmdldEZ1bGxZZWFyKCkgLyBrKSAqIGspO1xuICAgIGRhdGUuc2V0TW9udGgoMCwgMSk7XG4gICAgZGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgIGRhdGUuc2V0RnVsbFllYXIoZGF0ZS5nZXRGdWxsWWVhcigpICsgc3RlcCAqIGspO1xuICB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHllYXI7XG5leHBvcnQgdmFyIHllYXJzID0geWVhci5yYW5nZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9kMy10aW1lL3NyYy95ZWFyLmpzXG4vLyBtb2R1bGUgaWQgPSA0MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ=='
            );
        },
        function(module, exports, __webpack_require__) {
            eval(
                '// https://d3js.org Version 4.7.4. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === \'function\' && define.amd ? define([\'exports\'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { \'use strict\';\n\nvar version = "4.7.4";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(a, b, f) {\n  var na = a.length, nb = b.length, c = new Array(na * nb), ia, ib, ic, va;\n  if (f == null) f = pair;\n  for (ia = ic = 0; ia < na; ++ia) for (va = a[ia], ib = 0; ib < nb; ++ib, ++ic) c[ic] = f(va, b[ib]);\n  return c;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === "function" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === "function" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return "translate(" + x + ",0)";\n}\n\nfunction translateY(y) {\n  return "translate(0," + y + ")";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = "x", "y") : (x = "y", "x"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(".domain").data([null]),\n        tick = selection.selectAll(".tick").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append("g").attr("class", "tick"),\n        line = tick.select("line"),\n        text = tick.select("text");\n\n    path = path.merge(path.enter().insert("path", ".tick")\n        .attr("class", "domain")\n        .attr("stroke", "#000"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append("line")\n        .attr("stroke", "#000")\n        .attr(x + "2", k * tickSizeInner)\n        .attr(y + "1", 0.5)\n        .attr(y + "2", 0.5));\n\n    text = text.merge(tickEnter.append("text")\n        .attr("fill", "#000")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr("opacity", epsilon)\n          .attr("transform", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute("transform"); });\n\n      tickEnter\n          .attr("opacity", epsilon)\n          .attr("transform", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr("d", orient === left || orient == right\n            ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter\n            : "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter);\n\n    tick\n        .attr("opacity", 1)\n        .attr("transform", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + "2", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr("fill", "none")\n        .attr("font-size", 10)\n        .attr("font-family", "sans-serif")\n        .attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + "") || (t in _)) throw new Error("illegal type: " + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = "", i = t.indexOf(".");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + "", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = "http://www.w3.org/1999/xhtml";\n\nvar namespaces = {\n  svg: "http://www.w3.org/2000/svg",\n  xhtml: xhtml,\n  xlink: "http://www.w3.org/1999/xlink",\n  xml: "http://www.w3.org/XML/1998/namespace",\n  xmlns: "http://www.w3.org/2000/xmlns/"\n};\n\nvar namespace = function(name) {\n  var prefix = name += "", i = prefix.indexOf(":");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = "@" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== "undefined") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== "undefined") {\n  var element$1 = document.documentElement;\n  if (!("onmouseenter" in element$1)) {\n    filterEvents = {mouseenter: "mouseover", mouseleave: "mouseout"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = "", i = t.indexOf(".");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + ""), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== "function") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if ("__data__" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== "function") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== "function") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = "$"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== "function") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === "function"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === "function"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? "" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === "function"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute("class") || "");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute("class", this._names.join(" "));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute("class", this._names.join(" "));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + "");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === "function"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = "";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? "" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === "function"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = "";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? "" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === "function"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === "function" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === "function" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === "function" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property("__data__", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent("Event");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === "function"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === "string"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === "string"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on("dragstart.drag", noevent, true);\n  if ("onselectstart" in root) {\n    selection$$1.on("selectstart.drag", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = "none";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on("dragstart.drag", null);\n  if (noclick) {\n    selection$$1.on("click.drag", noevent, true);\n    setTimeout(function() { selection$$1.on("click.drag", null); }, 0);\n  }\n  if ("onselectstart" in root) {\n    selection$$1.on("selectstart.drag", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch("start", "drag", "end"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on("mousedown.drag", mousedowned)\n        .on("touchstart.drag", touchstarted)\n        .on("touchmove.drag", touchmoved)\n        .on("touchend.drag touchcancel.drag", touchended)\n        .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart("mouse", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture("start");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse("drag");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on("mousemove.drag mouseup.drag", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse("end");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture("start");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture("drag");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture("end");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, "beforestart", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case "start": gestures[id] = gesture, n = active++; break;\n        case "end": delete gestures[id], --active; // nobreak\n        case "drag": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === "function" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === "function" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === "function" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = "\\\\s*([+-]?\\\\d+)\\\\s*";\nvar reN = "\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*";\nvar reP = "\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp("^rgb\\\\(" + [reI, reI, reI] + "\\\\)$");\nvar reRgbPercent = new RegExp("^rgb\\\\(" + [reP, reP, reP] + "\\\\)$");\nvar reRgbaInteger = new RegExp("^rgba\\\\(" + [reI, reI, reI, reN] + "\\\\)$");\nvar reRgbaPercent = new RegExp("^rgba\\\\(" + [reP, reP, reP, reN] + "\\\\)$");\nvar reHslPercent = new RegExp("^hsl\\\\(" + [reN, reP, reP] + "\\\\)$");\nvar reHslaPercent = new RegExp("^hsla\\\\(" + [reN, reP, reP, reN] + "\\\\)$");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + "";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + "").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? "rgb(" : "rgba(")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? ")" : ", " + a + ")");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + "";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + "";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== "object") a = {};\n  if (b === null || typeof b !== "object") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, "g");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + "";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + "", b = b + "";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join("");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === "boolean" ? constant$3(b)\n      : (t === "number" ? reinterpolate\n      : t === "string" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === "none") return identity$2;\n  if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(",");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");\n  svgNode.setAttribute("transform", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + " " : "";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push("translate(", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push("translate(" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + "rotate(" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + "skewX(" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + "scale(", null, ",", null, ")");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + "scale(" + xb + "," + yb + ")");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join("");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + "";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + "";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + "";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + "";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === "object" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === "function" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== "function") throw new TypeError("callback is not a function");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch("start", "end", "interrupt");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error("too late");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error("too late");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error("too late");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call("interrupt", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call("start", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call("end", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + "";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call("interrupt", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== "function") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += "";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === "number" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === "transform" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === "function"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, "attr." + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + ""));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = "attr." + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== "function") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === "function"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === "function"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== "function") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== "function") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + "").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(".");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === "start";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on("end.remove", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== "function") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if ("__data__" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== "function") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += "") === "transform" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on("end.style." + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === "function"\n          ? styleFunction$1(name, i, tweenValue(this, "style." + name, value))\n          : styleConstant$1(name, i, value + ""), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = "style." + (name += "");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== "function") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? "" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween("text", typeof value === "function"\n      ? textFunction$1(tweenValue(this, "text", value))\n      : textConstant$1(value == null ? "" : value + ""));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + "";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + "";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: "drag"};\nvar MODE_SPACE = {name: "space"};\nvar MODE_HANDLE = {name: "handle"};\nvar MODE_CENTER = {name: "center"};\n\nvar X = {\n  name: "x",\n  handles: ["e", "w"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: "y",\n  handles: ["n", "s"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: "xy",\n  handles: ["n", "e", "s", "w", "nw", "ne", "se", "sw"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: "crosshair",\n  selection: "move",\n  n: "ns-resize",\n  e: "ew-resize",\n  s: "ns-resize",\n  w: "ew-resize",\n  nw: "nwse-resize",\n  ne: "nesw-resize",\n  se: "nwse-resize",\n  sw: "nesw-resize"\n};\n\nvar flipX = {\n  e: "w",\n  w: "e",\n  nw: "ne",\n  ne: "nw",\n  se: "sw",\n  sw: "se"\n};\n\nvar flipY = {\n  n: "s",\n  s: "n",\n  nw: "sw",\n  ne: "se",\n  se: "ne",\n  sw: "nw"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, "start", "brush", "end"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property("__brush", initialize)\n      .selectAll(".overlay")\n      .data([type("overlay")]);\n\n    overlay.enter().append("rect")\n        .attr("class", "overlay")\n        .attr("pointer-events", "all")\n        .attr("cursor", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr("x", extent[0][0])\n              .attr("y", extent[0][1])\n              .attr("width", extent[1][0] - extent[0][0])\n              .attr("height", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(".selection")\n      .data([type("selection")])\n      .enter().append("rect")\n        .attr("class", "selection")\n        .attr("cursor", cursors.selection)\n        .attr("fill", "#777")\n        .attr("fill-opacity", 0.3)\n        .attr("stroke", "#fff")\n        .attr("shape-rendering", "crispEdges");\n\n    var handle = group.selectAll(".handle")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append("rect")\n        .attr("class", function(d) { return "handle handle--" + d.type; })\n        .attr("cursor", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr("fill", "none")\n        .attr("pointer-events", "all")\n        .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)")\n        .on("mousedown.brush touchstart.brush", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on("start.brush", function() { emitter(this, arguments).beforestart().start(); })\n          .on("interrupt.brush end.brush", function() { emitter(this, arguments).end(); })\n          .tween("brush", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === "function" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === "function" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(".selection")\n          .style("display", null)\n          .attr("x", selection$$1[0][0])\n          .attr("y", selection$$1[0][1])\n          .attr("width", selection$$1[1][0] - selection$$1[0][0])\n          .attr("height", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(".handle")\n          .style("display", null)\n          .attr("x", function(d) { return d.type[d.type.length - 1] === "e" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr("y", function(d) { return d.type[0] === "s" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr("width", function(d) { return d.type === "n" || d.type === "s" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr("height", function(d) { return d.type === "e" || d.type === "w" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(".selection,.handle")\n          .style("display", "none")\n          .attr("x", null)\n          .attr("y", null)\n          .attr("width", null)\n          .attr("height", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit("start");\n      return this;\n    },\n    brush: function() {\n      this.emit("brush");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit("end");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === "overlay") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr("pointer-events", "none");\n\n    var overlay = group.selectAll(".overlay")\n        .attr("cursor", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on("touchmove.brush", moved, true)\n          .on("touchend.brush touchcancel.brush", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on("keydown.brush", keydowned, true)\n          .on("keyup.brush", keyupped, true)\n          .on("mousemove.brush", moved, true)\n          .on("mouseup.brush", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on("touchmove.brush touchend.brush touchcancel.brush", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);\n      }\n      group.attr("pointer-events", "all");\n      overlay.attr("cursor", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr("cursor", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr("cursor", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === "function" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === "function" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = "";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += "Z";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += "Q" + (+x1) + "," + (+y1) + "," + (this._x1 = +x) + "," + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += "C" + (+x1) + "," + (+y1) + "," + (+x2) + "," + (+y2) + "," + (this._x1 = +x) + "," + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error("negative radius: " + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);\n      }\n\n      this._ += "A" + r + "," + r + ",0,0," + (+(y01 * x20 > x01 * y20)) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error("negative radius: " + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += "M" + x0 + "," + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += "L" + x0 + "," + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += "A" + r + "," + r + ",0," + (+(da >= pi$2)) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + (+w) + "v" + (+h) + "h" + (-w) + "Z";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + "" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === "function" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = "$";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += "";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function("d", "return {" + columns.map(function(name, i) {\n    return JSON.stringify(name) + ": d[" + i + "]";\n  }).join(",") + "}");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp("[\\"" + delimiter + "\\n\\r]"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/""/g, "\\"");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join("\\n");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join("\\n");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? ""\n        : reFormat.test(text += "") ? "\\"" + text.replace(/\\"/g, "\\"\\"") + "\\""\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(",");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv("\\t");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== "function") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error("missing: " + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== "object") link.source = find(nodeById, link.source);\n      if (typeof link.target !== "object") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === "function" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === "function" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch("tick", "end");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call("tick", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call("end", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== "function") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== "function") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === "function" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns ["123", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case ".": i0 = i1 = i; break;\n      case "0": if (i0 === 0) i0 = i; i1 = i; break;\n      case "e": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + "";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join("0")\n      : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)\n      : "0." + new Array(1 - i).join("0") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + "";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join("0");\n};\n\nvar formatTypes = {\n  "": formatDefault,\n  "%": function(x, p) { return (x * 100).toFixed(p); },\n  "b": function(x) { return Math.round(x).toString(2); },\n  "c": function(x) { return x + ""; },\n  "d": function(x) { return Math.round(x).toString(10); },\n  "e": function(x, p) { return x.toExponential(p); },\n  "f": function(x, p) { return x.toFixed(p); },\n  "g": function(x, p) { return x.toPrecision(p); },\n  "o": function(x) { return Math.round(x).toString(8); },\n  "p": function(x, p) { return formatRounded(x * 100, p); },\n  "r": formatRounded,\n  "s": formatPrefixAuto,\n  "X": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  "x": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);\n\n  var match,\n      fill = match[1] || " ",\n      align = match[2] || ">",\n      sign = match[3] || "-",\n      symbol = match[4] || "",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || "";\n\n  // The "n" type is an alias for ",g".\n  if (type === "n") comma = true, type = "g";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = "";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? "0" : "")\n      + (this.width == null ? "" : Math.max(1, this.width | 0))\n      + (this.comma ? "," : "")\n      + (this.precision == null ? "" : "." + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = ["y","z","a","f","p","n","\\xB5","m","","k","M","G","T","P","E","Z","Y"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === "$" ? currency[0] : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",\n        suffix = symbol === "$" ? currency[1] : /[%p]/.test(type) ? "%" : "";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === "c") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = "";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === "(" ? sign : "-") : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + (valueNegative && sign === "(" ? ")" : "");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not "0", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : "";\n\n      // If the fill character is "0", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case "<": value = valuePrefix + value + valueSuffix + padding; break;\n        case "=": value = valuePrefix + padding + value + valueSuffix; break;\n        case "^": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + "";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: ".",\n  thousands: ",",\n  grouping: [3],\n  currency: ["$", ""]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: "Polygon", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === "function" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === "function" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === "function" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: "LineString", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: "MultiLineString", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: "LineString", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: "Polygon",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push("Z");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push("M", x, ",", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push("L", x, ",", y);\n        break;\n      }\n      default: {\n        this._string.push("M", x, ",", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join("");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return "m0," + radius\n      + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius\n      + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius\n      + "z";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle\'s bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== "function") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === "function" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = "$";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += "")) {\n        if (root) throw new Error("multiple roots");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error("missing: " + nodeId);\n        if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error("no root");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error("cycle");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford "tidy" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === "function" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === "function" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === "function" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === "function" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === "function" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== "function" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error("abort"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== "function" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== "function" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch("beforesend", "progress", "load", "error"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== "undefined"\n      && !("withCredentials" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  "onload" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call("error", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call("load", request, result);\n    } else {\n      event.call("error", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call("progress", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + "").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + "");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + "";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + "", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + "", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on "load" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send("GET", …).\n    get: function(data, callback) {\n      return request.send("GET", data, callback);\n    },\n\n    // Alias for send("POST", …).\n    post: function(data, callback) {\n      return request.send("POST", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has("accept")) headers.set("accept", mimeType + ",*/*");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === "function") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on("error", callback).on("load", function(xhr) { callback(null, xhr); });\n      event.call("beforesend", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== "function") throw new Error("invalid callback: " + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== "text"\n      ? xhr.response // null on error\n      : xhr.responseText; // "" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== "function") throw new Error("invalid callback: " + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1("text/html", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1("application/json", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1("text/plain", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1("application/xml", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error("parse error");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1("text/csv", csvParse);\n\nvar tsv$1 = dsv$1("text/tab-separated-values", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: "implicit"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + "", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? ",f" : specifier);\n  switch (specifier.type) {\n    case "s": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case "":\n    case "e":\n    case "g":\n    case "p":\n    case "r": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");\n      break;\n    }\n    case "f":\n    case "%": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? ".0e" : ",";\n    if (typeof specifier !== "function") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : "";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    "a": formatShortWeekday,\n    "A": formatWeekday,\n    "b": formatShortMonth,\n    "B": formatMonth,\n    "c": null,\n    "d": formatDayOfMonth,\n    "e": formatDayOfMonth,\n    "H": formatHour24,\n    "I": formatHour12,\n    "j": formatDayOfYear,\n    "L": formatMilliseconds,\n    "m": formatMonthNumber,\n    "M": formatMinutes,\n    "p": formatPeriod,\n    "S": formatSeconds,\n    "U": formatWeekNumberSunday,\n    "w": formatWeekdayNumber,\n    "W": formatWeekNumberMonday,\n    "x": null,\n    "X": null,\n    "y": formatYear,\n    "Y": formatFullYear,\n    "Z": formatZone,\n    "%": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    "a": formatUTCShortWeekday,\n    "A": formatUTCWeekday,\n    "b": formatUTCShortMonth,\n    "B": formatUTCMonth,\n    "c": null,\n    "d": formatUTCDayOfMonth,\n    "e": formatUTCDayOfMonth,\n    "H": formatUTCHour24,\n    "I": formatUTCHour12,\n    "j": formatUTCDayOfYear,\n    "L": formatUTCMilliseconds,\n    "m": formatUTCMonthNumber,\n    "M": formatUTCMinutes,\n    "p": formatUTCPeriod,\n    "S": formatUTCSeconds,\n    "U": formatUTCWeekNumberSunday,\n    "w": formatUTCWeekdayNumber,\n    "W": formatUTCWeekNumberMonday,\n    "x": null,\n    "X": null,\n    "y": formatUTCYear,\n    "Y": formatUTCFullYear,\n    "Z": formatUTCZone,\n    "%": formatLiteralPercent\n  };\n\n  var parses = {\n    "a": parseShortWeekday,\n    "A": parseWeekday,\n    "b": parseShortMonth,\n    "B": parseMonth,\n    "c": parseLocaleDateTime,\n    "d": parseDayOfMonth,\n    "e": parseDayOfMonth,\n    "H": parseHour24,\n    "I": parseHour24,\n    "j": parseDayOfYear,\n    "L": parseMilliseconds,\n    "m": parseMonthNumber,\n    "M": parseMinutes,\n    "p": parsePeriod,\n    "S": parseSeconds,\n    "U": parseWeekNumberSunday,\n    "w": parseWeekdayNumber,\n    "W": parseWeekNumberMonday,\n    "x": parseLocaleDate,\n    "X": parseLocaleTime,\n    "y": parseYear,\n    "Y": parseFullYear,\n    "Z": parseZone,\n    "%": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === "e" ? " " : "0";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join("");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += "", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if ("p" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if ("W" in d || "U" in d) {\n        if (!("w" in d)) d.w = "W" in d ? 1 : 0;\n        var day$$1 = "Z" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if ("Z" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += "", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += "", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += "", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {"-": "", "_": " ", "0": "0"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? "-" : "",\n      string = (sign ? -value : value) + "",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, "\\\\$&");\n}\n\nfunction formatRe(names) {\n  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? "-" : (z *= -1, "+"))\n      + pad(z / 60 | 0, "0", 2)\n      + pad(z % 60, "0", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return "+0000";\n}\n\nfunction formatLiteralPercent() {\n  return "%";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: "%x, %X",\n  date: "%-m/%-d/%Y",\n  time: "%-I:%M:%S %p",\n  periods: ["AM", "PM"],\n  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],\n  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],\n  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],\n  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date("2000-01-01T00:00:00.000Z")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(".%L"),\n      formatSecond = format(":%S"),\n      formatMinute = format("%I:%M"),\n      formatHour = format("%I %p"),\n      formatDay = format("%a %d"),\n      formatWeek = format("%b %d"),\n      formatMonth = format("%B"),\n      formatYear = format("%Y");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === "number") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return "#" + x;\n  });\n};\n\nvar category10 = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");\n\nvar category20b = colors("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6");\n\nvar category20c = colors("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9");\n\nvar category20 = colors("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + "";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));\n\nvar magma = ramp(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));\n\nvar inferno = ramp(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));\n\nvar plasma = ramp(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + "" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + "" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === "function" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === "function" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === "function" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + "" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === "function" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === "function" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === "function" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === "function" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === "function" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data\'s order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === "function" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + "" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === "function" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === "function" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// "you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === "function" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === "function" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === "function" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === "function" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === "function" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch("start", "zoom", "end"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on("wheel.zoom", wheeled)\n        .on("mousedown.zoom", mousedowned)\n        .on("dblclick.zoom", dblclicked)\n        .on("touchstart.zoom", touchstarted)\n        .on("touchmove.zoom", touchmoved)\n        .on("touchend.zoom touchcancel.zoom", touchended)\n        .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)")\n        .property("__zoom", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property("__zoom", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === "function" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === "function" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === "function" ? x.apply(this, arguments) : x,\n        typeof y === "function" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on("start.zoom", function() { gesture(this, arguments).start(); })\n        .on("interrupt.zoom end.zoom", function() { gesture(this, arguments).end(); })\n        .tween("zoom", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === "function" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit("start");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit("zoom");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit("end");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on("mousemove.zoom mouseup.zoom", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on("dblclick.zoom");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom("touch", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === "function" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === "function" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, \'__esModule\', { value: true });\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,'
            );
        },
        function(module, exports, __webpack_require__) {
            eval(
                "/* WEBPACK VAR INJECTION */(function(global, module) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (typeof key == 'number' && value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  if (!(isArray(source) || isTypedArray(source))) {\n    var props = baseKeysIn(source);\n  }\n  arrayEach(props || source, function(srcValue, key) {\n    if (props) {\n      key = srcValue;\n      srcValue = source[key];\n    }\n    if (isObject(srcValue)) {\n      stack || (stack = new Stack);\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  });\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = object[key],\n      srcValue = source[key],\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    newValue = srcValue;\n    if (isArray(srcValue) || isTypedArray(srcValue)) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else {\n        isCommon = false;\n        newValue = baseClone(srcValue, true);\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n        isCommon = false;\n        newValue = baseClone(srcValue, true);\n      }\n      else {\n        newValue = objValue;\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Used by `_.defaultsDeep` to customize its `_.merge` use.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to merge.\n * @param {Object} object The parent object of `objValue`.\n * @param {Object} source The parent object of `srcValue`.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n * @returns {*} Returns the value to assign.\n */\nfunction mergeDefaults(objValue, srcValue, key, object, source, stack) {\n  if (isObject(objValue) && isObject(srcValue)) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, objValue);\n    baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n    stack['delete'](srcValue);\n  }\n  return objValue;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * This method is like `_.defaults` except that it recursively assigns\n * default properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaults\n * @example\n *\n * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n * // => { 'a': { 'b': 2, 'c': 3 } }\n */\nvar defaultsDeep = baseRest(function(args) {\n  args.push(undefined, mergeDefaults);\n  return apply(mergeWith, undefined, args);\n});\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with seven arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n  baseMerge(object, source, srcIndex, customizer);\n});\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = defaultsDeep;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8), __webpack_require__(9)(module)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
            );
        },
        function(module, exports, __webpack_require__) {
            eval(
                "/* WEBPACK VAR INJECTION */(function(global, module) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array ? array.length : 0;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\n/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a cache value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity]\n *  The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length)\n    ? baseUniq(array, baseIteratee(iteratee, 2))\n    : [];\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = uniqBy;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8), __webpack_require__(9)(module)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,"
            );
        },
        function(n, I, c) {
            c(11), (n.exports = c(10));
        },
    ]);
});
